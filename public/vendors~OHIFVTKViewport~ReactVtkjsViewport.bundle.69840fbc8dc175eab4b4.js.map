{"version":3,"sources":["webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/macro.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/Core/Math/index.js","webpack:///C:/projects/Viewers/node_modules/gl-matrix/esm/common.js","webpack:///C:/projects/Viewers/node_modules/gl-matrix/esm/mat3.js","webpack:///C:/projects/Viewers/node_modules/gl-matrix/esm/mat4.js","webpack:///C:/projects/Viewers/node_modules/gl-matrix/esm/vec3.js","webpack:///C:/projects/Viewers/node_modules/gl-matrix/esm/vec4.js","webpack:///C:/projects/Viewers/node_modules/gl-matrix/esm/quat.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/Core/DataArray/index.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/Core/DataArray/Constants.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/vtk.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/DataModel/BoundingBox/index.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/DataModel/Plane/index.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Rendering/Core/Mapper/Constants.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/DataModel/StructuredData/Constants.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/DataModel/StructuredData/index.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/DataModel/ImageData/index.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Rendering/Core/Prop/index.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/Core/ScalarsToColors/Constants.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/DataModel/DataSetAttributes/FieldData.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/DataModel/DataSetAttributes/Constants.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/DataModel/DataSetAttributes/index.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/DataModel/DataSet/index.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/DataModel/DataSet/Constants.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Rendering/Core/Prop3D/index.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/Core/ScalarsToColors/index.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Common/DataModel/PiecewiseFunction/index.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Rendering/Core/VolumeProperty/Constants.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Rendering/Core/VolumeMapper/index.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Rendering/Core/ColorTransferFunction/Constants.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Rendering/Core/ColorTransferFunction/ColorMaps.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Rendering/Core/ColorTransferFunction/index.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Rendering/Core/VolumeProperty/index.js","webpack:///C:/projects/Viewers/node_modules/vtk.js/Sources/Rendering/Core/Volume/index.js","webpack:///C:/projects/Viewers/node_modules/seedrandom/index.js","webpack:///C:/projects/Viewers/node_modules/seedrandom/lib/alea.js","webpack:///C:/projects/Viewers/node_modules/seedrandom/lib/xor128.js","webpack:///C:/projects/Viewers/node_modules/seedrandom/lib/xorwow.js","webpack:///C:/projects/Viewers/node_modules/seedrandom/lib/xorshift7.js","webpack:///C:/projects/Viewers/node_modules/seedrandom/lib/xor4096.js","webpack:///C:/projects/Viewers/node_modules/seedrandom/lib/tychei.js","webpack:///C:/projects/Viewers/node_modules/seedrandom/seedrandom.js"],"names":["globalMTime","VOID","Symbol","fakeConsole","noOp","forEach","methodName","global","console","hasOwnProperty","loggerFunctions","debug","error","info","log","warn","setLoggerFunction","name","fn","vtkLogMacro","vtkInfoMacro","vtkDebugMacro","vtkErrorMacro","vtkWarningMacro","ERROR_ONCE_MAP","vtkOnceErrorMacro","str","TYPED_ARRAYS","Float32Array","Float64Array","Uint8Array","Int8Array","Uint16Array","Int16Array","Uint32Array","Int32Array","capitalize","charAt","toUpperCase","slice","uncapitalize","toLowerCase","formatBytesToProperUnit","size","precision","chunkSize","units","value","Number","currentUnit","pop","toFixed","formatNumbersWithThousandSeparator","n","separator","sections","push","Math","floor","reverse","join","safeArrays","model","Object","keys","key","Array","isArray","concat","getStateArrayMapFunc","item","isA","getState","setImmediateVTK","setTimeout","obj","publicAPI","callbacks","off","index","on","freeze","unsubscribe","isInteger","mtime","classHierarchy","isDeleted","deleted","modified","otherMTime","getMTime","callback","onModified","length","className","count","getClassName","depth","set","map","noWarning","noFunction","ret","indexOf","get","list","subset","getReferenceByName","val","delete","field","el","jsonArchive","assign","vtkClass","keyName","undefined","sortedObj","sort","shallowCopy","other","Error","otherModel","keyList","otherKeyList","keyIdx","splice","fieldNames","objectSetterMap","enum","RangeError","TypeError","findSetter","type","fields","setGet","getArray","setArray","defaultVal","args","array","changeDetected","otherArray","target","v","i","setGetArray","algo","numberOfInputs","numberOfOutputs","setInputData","dataset","port","inputData","inputConnection","setInputConnection","outputPort","msg","getOutputData","shouldUpdate","update","output","vtk","inputArrayToProcess","localMTime","minOutputMTime","Infinity","mt","filter","getInputData","addInputData","addInputConnection","getInputConnection","getOutputPort","outputPortAccess","ins","requestData","getNumberOfInputPorts","getNumberOfOutputPorts","getInputArrayToProcess","inputPort","arrayDesc","ds","fieldAssociation","arrayName","setInputArrayToProcess","attributeType","EVENT_ABORT","event","eventName","previousDelete","curCallbackID","callbackID","currentCallbacks","cb","priority","apply","arguments","cb1","cb2","newInstance","extend","constructor","initialValues","register","chain","isVtkObject","instance","traverseInstanceTree","extractFunction","accumulator","visitedInstances","result","modelObj","subObj","debounce","func","wait","immediate","timeout","context","later","callNow","clearTimeout","throttle","delay","isThrottled","argsToUse","next","wrapper","keystore","initialKeystore","setKey","getKey","getAllKeys","deleteKey","clearKeystore","nextProxyId","proxy","parentDelete","proxyId","ui","JSON","parse","stringify","propertyMap","groupChildrenNames","registerProperties","descriptionList","currentGroupName","childrenNames","children","listProxyProperties","gName","getProperties","groupName","values","id","propertyNames","method","prop","updateUI","k","updateProxyProperty","propertyName","propUI","activate","proxyManager","setActiveMethod","getProxyGroup","propertyLinkSubscribers","registerPropertyLinkForGC","otherLink","gcPropertyLinks","subscribers","unbind","propertyLinkMap","getPropertyLink","persistent","links","updateInProgress","source","force","needUpdate","sourceLink","link","newValue","linkToUpdate","indexToDelete","subscription","bind","updateMe","linkHandler","listPropertyNames","p","getPropertyByName","find","getPropertyDomainByName","domain","getProxySection","proxyGroup","properties","property","updateOnBind","sLink","proxyPropertyMapping","subscriptions","modelKey","methodSrc","methodDst","proxyPropertyState","state","defaults","applyState","modelKeys","this","mapping","normalizeWheel","wheelEvent","sX","sY","pX","pY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","enumToString","e","getCurrentGlobalMTime","setImmediate","macro","randomSeedValue","notImplemented","vtkSwapVectors3","v1","v2","tmp","createArray","Pi","PI","radiansFromDegrees","deg","degreesFromRadians","rad","round","ceil","min","max","arrayMin","arr","offset","stride","minValue","len","arrayMax","maxValue","arrayRange","ceilLog2","factorial","nearestPowerOfTwo","xi","isPowerOfTwo","x","binomial","m","r","beginCombination","nextCombination","status","j","randomSeed","seed","seedrandom","getSeed","random","delta","gaussian","add","a","b","out","subtract","multiplyScalar","vec","scalar","multiplyScalar2D","dot","y","outer","out_3x3","cross","Zx","Zy","Zz","norm","abs","sqrt","sum","normalize","den","perpendiculars","z","theta","dx","dy","dz","x2","y2","z2","c","sintheta","sin","costheta","cos","projectVector","projection","bSquared","scale","dot2D","projectVector2D","distance2BetweenPoints","angleBetweenVectors","crossVect","atan2","gaussianAmplitude","mean","variance","position","distanceFromMean","exp","gaussianWeight","outer2D","out_2x2","norm2D","x2D","normalize2D","determinant2x2","NaN","LUFactor3x3","mat_3x3","index_3","maxI","largest","LUSolve3x3","x_3","linearSolve3x3","y_3","a1","b1","c1","a2","b2","c2","a3","b3","c3","d1","d2","d3","e1","e2","e3","f1","f2","f3","det","v3","multiply3x3_vect3","in_3","out_3","multiply3x3_mat3","a_3x3","b_3x3","multiplyMatrix","rowA","colA","rowB","colB","out_rowXcol","transpose3x3","in_3x3","outT_3x3","invert3x3","outI_3x3","identity3x3","determinant3x3","quaternionToMatrix3x3","quat_4","ww","wx","wy","wz","xx","yy","zz","xy","xz","yz","rr","f","s","areMatricesEqual","matA","matB","every","element","jacobiN","w","iq","ip","numPos","tresh","t","tau","sm","h","g","vtkROTATE","aa","ii","jj","kk","ll","ceil_half_n","matrix3x3ToQuaternion","eigenvectors","NTemp","eigenvectorsTemp","multiplyQuaternion","quat_1","quat_2","quat_out","xw","yw","yx","zw","zx","zy","orthogonalize3x3","x1","x3","y3","flip","quat","diagonalize3x3","w_3","v_3x3","maxVal","C","ATemp","VTemp","singularValueDecomposition3x3","u_3x3","vT_3x3","B","d","luFactorLinearSystem","A","temp1","temp2","luSolveLinearSystem","idx","solveLinearSystem","invertMatrix","AI","column","tmp1Size","tmp2Size","estimateMatrixCondition","MAX_VALUE","jacobi","solveHomogeneousLeastSquares","numberOfSamples","xt","xOrder","XXt","eigenvals","eigenvecs","solveLeastSquares","yt","yOrder","checkHomogeneous","hmt","homogenFlags","allHomogeneous","homogRC","someHomogeneous","XXtI","XYt","successFlag","hex2float","hexStr","outFloatArray","parseInt","substr","rgb2hsv","rgb","hsv","cmax","cmin","hsv2rgb","lab2xyz","lab","xyz","var_Y","var_X","var_Z","xyz2lab","xyz2rgb","rgb2xyz","rgb2lab","lab2rgb","uninitializeBounds","bounds","areBoundsInitialized","computeBoundsFromPoints","point1","point2","clampValue","clampVector","vector","minVector","maxVector","roundVector","clampAndNormalizeValue","range","getScalarTypeFittingRange","getAdjustedScalarRange","extentIsWithinOtherExtent","extent1","extent2","boundsIsWithinOtherBounds","bounds1_6","bounds2_6","delta_3","pointIsWithinBounds","point_3","bounds_6","solve3PointCircle","p1","p2","p3","center","v21","v32","v13","v12","v23","v31","norm12","norm23","norm13","crossv21v32","normCross","radius","normCross22","alpha","beta","gamma","inf","negInf","isInf","isFinite","isNaN","isNan","createUninitializedBounds","getMajorAxisIndex","axisIndex","floatToHex2","integer","toString","floatRGB2HexCode","rgbArray","prefix","floatToChar","float2CssRGBA","EPSILON","ARRAY_TYPE","RANDOM","setMatrixArrayType","degree","toRadian","equals","create","fromMat4","clone","copy","fromValues","m00","m01","m02","m10","m11","m12","m20","m21","m22","identity","transpose","a01","a02","a12","invert","a00","a10","a11","a20","a21","a22","b01","b11","b21","adjoint","determinant","multiply","b00","b02","b10","b12","b20","b22","translate","rotate","fromTranslation","fromRotation","fromScaling","fromMat2d","fromQuat","q","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","width","height","frob","pow","multiplyScalarAndAdd","exactEquals","a0","a4","a5","a6","a7","a8","b0","b4","b5","b6","b7","b8","mul","sub","m03","m13","m23","m30","m31","m32","m33","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","tan","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","up","x0","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","a9","a14","a15","b9","b13","b14","b15","divide","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","tempA","tempB","cosine","acos","zero","div","dist","sqrDist","sqrLen","arg","l","u","D","E","F","G","H","I","J","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","calculateW","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fRoot","fTrace","fromEuler","halfToRad","cx","cy","cz","tmpvec3","xUnitVec3","yUnitVec3","matr","rotationTo","sqlerp","setAxes","view","DefaultDataType","Constants","TUPLE_HOLDER","createRangeHelper","getRange","computeRange","component","numberOfComponents","helper","ensureRangeSize","rangeArray","ranges","getDataType","typedArray","prototype","call","STATIC","getMaxNorm","normArray","numComps","getNumberOfComponents","maxNorm","getNumberOfTuples","vtkMath","getTuple","vtkDataArray","dataChange","getElementComponentSize","BYTES_PER_ELEMENT","getComponent","tupleIdx","compIdx","setComponent","getData","componentIndex","rangeIdx","rangeTuple","setRange","rangeValue","setTuple","tuple","tupleToFill","getTupleLocation","getNumberOfValues","dataType","newClone","empty","getName","setData","from","buffer","DEFAULT_VALUES","window","VtkDataTypes","CHAR","SIGNED_CHAR","UNSIGNED_CHAR","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","DOUBLE","DataTypeByteSize","Uint8ClampedArray","module","exports","__webpack_amd_options__","factoryMapping","vtkObject","newInst","vtkClassName","INIT_BOUNDS","isValid","getCenter","getLength","getLengths","getMaxLength","getDiagonalLength","oppositeSign","getCorners","corners","getXRange","getYRange","getZRange","computeCornerPoints","computeScale3","scale3","vtkBoundingBox","getBounds","setMinPoint","xMin","xMax","yMin","yMax","zMin","zMax","setMaxPoint","addPoint","addBounds","_xMin","_xMax","_yMin","_yMax","_zMin","_zMax","addBox","intersect","bbox","intersects","newBounds","bBounds","MaxPnt","MinPnt","intersectPlane","origin","normal","vtkPlane","evaluate","dir","sign","ti","bound","containsPoint","getMinPoint","getMaxPoint","getBound","contains","reset","setBounds","inflate","distanceToPlane","projectPoint","xproj","xo","vproj","n2","generalizedProjectPoint","intersectWithLine","outObj","intersection","betweenPoints","p21","p1Origin","num","intersectWithPlane","plane1Origin","plane1Normal","plane2Origin","plane2Normal","l0","l1","maxc","absCross","iP","DISJOINT","COINCIDE","evaluateFunction","evaluateGradient","planeOrigin","planeNormal","ScalarMode","DEFAULT","USE_POINT_DATA","USE_CELL_DATA","USE_POINT_FIELD_DATA","USE_CELL_FIELD_DATA","USE_FIELD_DATA","ColorMode","MAP_SCALARS","DIRECT_SCALARS","GetArray","BY_ID","BY_NAME","StructuredType","UNCHANGED","SINGLE_POINT","X_LINE","Y_LINE","Z_LINE","XY_PLANE","YZ_PLANE","XZ_PLANE","XYZ_GRID","EMPTY","getDataDescriptionFromExtent","inExt","dataDim","vtkImageData","setExtent","inExtent","extent","dataDescription","vtkStructuredData","setDimensions","getDimensions","getNumberOfCells","dims","nCells","getNumberOfPoints","getPoint","ijk","vec3","coords","vout","indexToWorldVec3","extentToBounds","ex","computeTransforms","trans","mat4","indexToWorld","direction","spacing","worldToIndex","setDirection","vin","indexToWorldBounds","bin","bout","in1","in2","ain","aout","worldToIndexVec3","worldToIndexBounds","computeHistogram","worldBounds","voxelFunc","dimensions","yStride","zStride","pixels","getPointData","getScalars","maximum","minimum","sumOfSquares","isum","inum","pixel","average","sigma","vtkDataSet","dvals","mat3","vtkProp","m1","textures","m2","getNestedProps","getActors","getActors2D","getVolumes","pick","hasKey","getRedrawMTime","setEstimatedRenderTime","estimatedRenderTime","savedEstimatedRenderTime","restoreEstimatedRenderTime","addEstimatedRenderTime","setAllocatedRenderTime","allocatedRenderTime","getSupportsSelection","getTextures","hasTexture","texture","addTexture","removeTexture","newTextureList","removeAllTextures","visibility","pickable","dragable","useBounds","renderTimeMultiplier","paths","ScalarMappingTarget","LUMINANCE","LUMINANCE_ALPHA","RGB","RGBA","VectorMode","MAGNITUDE","COMPONENT","RGBCOLORS","vtkFieldData","superGetState","arrays","data","initialize","initializeFields","copyAllOn","clearFieldFlags","copyFieldFlags","copyStructure","getCopyFieldFlags","getNumberOfArrays","getNumberOfActiveArrays","addArray","removeAllArrays","removeArray","entry","removeArrayByIndex","arrayIdx","getArrays","arraySpec","getArrayByIndex","getArrayByName","reduce","getArrayWithIndex","hasArray","getArrayName","getFlag","passData","fromId","toId","copyFlag","doCopyAllOff","destArr","tId","ncomps","newSize","copyFieldOn","copyFieldOff","doCopyAllOn","copyAllOff","deepCopy","arrNew","copyFlags","AttributeCopyOperations","COPYTUPLE","INTERPOLATE","PASSDATA","ALLCOPY","AttributeLimitTypes","MAX","EXACT","NOLIMIT","AttributeTypes","SCALARS","VECTORS","NORMALS","TCOORDS","TENSORS","GLOBALIDS","PEDIGREEIDS","EDGEFLAG","NUM_ATTRIBUTES","CellGhostTypes","DUPLICATECELL","HIGHCONNECTIVITYCELL","LOWCONNECTIVITYCELL","REFINEDCELL","EXTERIORCELL","HIDDENCELL","DesiredOutputPrecision","SINGLE","PointGhostTypes","DUPLICATEPOINT","HIDDENPOINT","ghostArrayName","vtkDataSetAttributes","attrTypes","cleanAttributeType","attType","cleanAttType","ee","checkNumberOfComponents","setAttribute","uncleanAttType","currentAttribute","setActiveAttributeByName","setActiveAttributeByIndex","getActiveAttribute","activeVal","da","copyAttributeFlags","op","attCopyOp","ty","dataArrays","ref","superShallowCopy","activeScalars","activeVectors","activeTensors","activeNormals","activeTCoords","activeGlobalIds","activePedigreeIds","DATASET_FIELDS","fieldName","FieldAssociations","FIELD_ASSOCIATION_POINTS","FIELD_ASSOCIATION_CELLS","FIELD_ASSOCIATION_NONE","FIELD_ASSOCIATION_POINTS_THEN_CELLS","FIELD_ASSOCIATION_VERTICES","FIELD_ASSOCIATION_EDGES","FIELD_ASSOCIATION_ROWS","NUMBER_OF_ASSOCIATIONS","FieldDataTypes","UNIFORM","DATA_OBJECT_FIELD","COORDINATE","POINT_DATA","POINT","POINT_FIELD_DATA","CELL","CELL_FIELD_DATA","VERTEX","VERTEX_FIELD_DATA","EDGE","EDGE_FIELD_DATA","ROW","ROW_DATA","vtkProp3D","addPosition","deltaXYZ","getOrientationWXYZ","rotation","oaxis","rotateWXYZ","degrees","quatMat","setUserMatrix","matrix","userMatrix","getMatrix","computeMatrix","matrixMTime","isIdentity","getUserMatrix","userMatrixMTime","cachedProp3D","transform","vtkMapper","intColorToUChar","floatColorToUChar","vtkScalarsToColors","setVectorModeToMagnitude","setVectorMode","setVectorModeToComponent","setVectorModeToRGBColors","build","isOpaque","setAnnotations","annotations","annotationArray","annotation","updateAnnotatedValueMap","setAnnotation","checkForAnnotatedValue","getNumberOfAnnotatedValues","getAnnotatedValue","getAnnotation","getAnnotatedValueIndex","removeAnnotation","needToRemove","resetAnnotations","annotatedValueMap","getAnnotationColor","rgba","indexedLookup","getIndexedColor","getColor","parseFloat","getAnnotatedValueIndexInternal","na","mapScalars","scalars","colorMode","componentIn","newColors","convertToRGBA","newscalars","mapVectorsThroughTable","mapScalarsThroughTable","mapVectorsToMagnitude","input","compsToUse","inIncr","outputV","inputV","outputFormat","vectorComponentIn","vectorSizeIn","vectorMode","getVectorMode","vectorSize","vectorComponent","inComponents","getVectorComponent","getVectorSize","inputOffset","magValues","luminanceToRGBA","colors","convtFun","newValues","luminanceAlphaToRGBA","rGBToRGBA","rGBAToRGBA","numComp","numTuples","usingLogScale","getNumberOfAvailableColors","setMappingRange","getMappingRange","mappingRange","vtkPiecewiseFunction","getSize","nodes","getType","prevValue","functionType","getDataPointer","function","getFirstNonZeroValue","allZero","clamping","getNodeValue","midpoint","sharpness","setNodeValue","oldX","sortAndUpdateRange","addPointLong","allowDuplicateScalars","removePoint","node","setNodes","updateRange","oldRange","retVal","modifiedInvoked","removeAllPoints","addSegment","getValue","table","getTable","adjustRange","functionRange","estimateMinNumberOfSamples","findMinimumXDistance","currentDist","xStart","xEnd","numNodes","lastValue","tidx","ss","sss","h1","h2","h3","h4","slope","InterpolationType","NEAREST","LINEAR","FAST_LINEAR","BlendMode","vtkVolumeMapper","static","setBlendModeToComposite","setBlendMode","COMPOSITE_BLEND","setBlendModeToMaximumIntensity","MAXIMUM_INTENSITY_BLEND","setBlendModeToMinimumIntensity","MINIMUM_INTENSITY_BLEND","setBlendModeToAverageIntensity","AVERAGE_INTENSITY_BLEND","getBlendModeAsString","blendMode","sampleDistance","imageSampleDistance","maximumSamplesPerRay","autoAdjustSampleDistances","averageIPScalarRange","ColorSpace","HSV","LAB","DIVERGING","Scale","LOG10","presetMap","vtkColorMaps","RGBPoints","Name","rgbPresetNames","addPreset","preset","removePresetByName","getPresetByName","vtkColorTransferFunctionLabToMsh","msh","L","M","vtkColorTransferFunctionAdjustHue","unsatM","hueSpin","vtkColorTransferFunctionInterpolateDiverging","rgb1","rgb2","lab1","lab2","msh1","msh2","localS","adiff","vtkColorTransferFunctionAngleDiff","Mmid","mshTmp","labTmp","vtkColorTransferFunctionMshToLab","vtkColorTransferFunction","addRGBPoint","addRGBPointLong","addHSVPoint","addHSVPointLong","movePoint","newX","addRGBSegment","r1","g1","r2","g2","addHSVSegment","hsv1","hsv2","mapValue","getNanColor","nodeVal","getRedValue","getGreenValue","getBlueValue","nanColor","lastR","lastG","lastB","tmpVec","logStart","logEnd","logX","log10","getUseAboveRangeColor","aboveRangeColor","getUseBelowRangeColor","belowRangeColor","colorSpace","hSVWrap","hsvTmp","getUint8Table","withAlpha","buildTime","tableSize","tableWithAlpha","nbChannels","tmpTable","buildFunctionFromTable","inc","nodeValue","fillFromDataPointer","nb","ptr","originalRange","shift","outFormat","mapDataIndexed","mapData","getAlpha","applyColorMap","colorMap","NanColor","useAboveRangeColor","useBelowRangeColor","vtkVolumeProperty","time","mTime","componentData","colorChannels","grayTransferFunction","rGBTransferFunction","scalarOpacity","gradientOpacity","disableGradientOpacity","getColorChannels","setGrayTransferFunction","getGrayTransferFunction","setRGBTransferFunction","getRGBTransferFunction","setScalarOpacity","getScalarOpacity","setComponentWeight","componentWeight","getComponentWeight","setInterpolationTypeToNearest","setInterpolationType","setInterpolationTypeToLinear","setInterpolationTypeToFastLinear","getInterpolationTypeAsString","interpolationType","cap","independentComponents","shade","ambient","diffuse","specular","specularPower","useLabelOutline","labelOutlineThickness","scalarOpacityUnitDistance","gradientOpacityMinimumValue","gradientOpacityMinimumOpacity","gradientOpacityMaximumValue","gradientOpacityMaximumOpacity","useGradientOpacity","vtkVolume","makeProperty","getProperty","mapper","bds","mapperBounds","boundsMTime","rows","_","row","tmp4","pt","getInput","getInputAlgorithm","alea","xor128","xorwow","xorshift7","xor4096","tychei","sr","define","Alea","me","mash","charCodeAt","s0","impl","opts","xg","prng","int32","double","quick","XorGen","strseed","X","init","Date","limit","pool","math","nodecrypto","startdenom","significance","overflow","options","shortseed","mixkey","flatten","typ","entropy","tostring","randomBytes","crypto","msCrypto","getRandomValues","browser","navigator","plugins","screen","autoseed","arc4","ARC4","pass","is_math_call","keylen","smear","stringseed","String","fromCharCode"],"mappings":"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","file":"vendors~OHIFVTKViewport~ReactVtkjsViewport.bundle.69840fbc8dc175eab4b4.js","sourcesContent":["import vtk from './vtk';\n\nlet globalMTime = 0;\n\nexport const VOID = Symbol('void');\n\nfunction getCurrentGlobalMTime() {\n  return globalMTime;\n}\n\n// ----------------------------------------------------------------------------\n// Logging function calls\n// ----------------------------------------------------------------------------\n/* eslint-disable no-prototype-builtins                                      */\n\nconst fakeConsole = {};\n\nfunction noOp() {}\n\nconst consoleMethods = [\n  'log',\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'time',\n  'timeEnd',\n  'group',\n  'groupEnd',\n];\nconsoleMethods.forEach((methodName) => {\n  fakeConsole[methodName] = noOp;\n});\n\nglobal.console = console.hasOwnProperty('log') ? console : fakeConsole;\n\nconst loggerFunctions = {\n  debug: noOp, // Don't print debug by default\n  error: global.console.error || noOp,\n  info: global.console.info || noOp,\n  log: global.console.log || noOp,\n  warn: global.console.warn || noOp,\n};\n\nexport function setLoggerFunction(name, fn) {\n  if (loggerFunctions[name]) {\n    loggerFunctions[name] = fn || noOp;\n  }\n}\n\nexport function vtkLogMacro(...args) {\n  loggerFunctions.log(...args);\n}\n\nexport function vtkInfoMacro(...args) {\n  loggerFunctions.info(...args);\n}\n\nexport function vtkDebugMacro(...args) {\n  loggerFunctions.debug(...args);\n}\n\nexport function vtkErrorMacro(...args) {\n  loggerFunctions.error(...args);\n}\n\nexport function vtkWarningMacro(...args) {\n  loggerFunctions.warn(...args);\n}\n\nconst ERROR_ONCE_MAP = {};\nexport function vtkOnceErrorMacro(str) {\n  if (!ERROR_ONCE_MAP[str]) {\n    loggerFunctions.error(str);\n    ERROR_ONCE_MAP[str] = true;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// TypedArray\n// ----------------------------------------------------------------------------\n\nexport const TYPED_ARRAYS = {\n  Float32Array,\n  Float64Array,\n  Uint8Array,\n  Int8Array,\n  Uint16Array,\n  Int16Array,\n  Uint32Array,\n  Int32Array,\n};\n\n// ----------------------------------------------------------------------------\n// capitilze provided string\n// ----------------------------------------------------------------------------\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function uncapitalize(str) {\n  return str.charAt(0).toLowerCase() + str.slice(1);\n}\n\n// ----------------------------------------------------------------------------\n// Convert byte size into a well formatted string\n// ----------------------------------------------------------------------------\n\nexport function formatBytesToProperUnit(size, precision = 2, chunkSize = 1000) {\n  const units = ['TB', 'GB', 'MB', 'KB'];\n  let value = Number(size);\n  let currentUnit = 'B';\n  while (value > chunkSize) {\n    value /= chunkSize;\n    currentUnit = units.pop();\n  }\n  return `${value.toFixed(precision)} ${currentUnit}`;\n}\n// ----------------------------------------------------------------------------\n// Convert thousand number with proper seperator\n// ----------------------------------------------------------------------------\n\nexport function formatNumbersWithThousandSeparator(n, separator = ' ') {\n  const sections = [];\n  let size = n;\n  while (size > 1000) {\n    sections.push(`000${size % 1000}`.slice(-3));\n    size = Math.floor(size / 1000);\n  }\n  if (size > 0) {\n    sections.push(size);\n  }\n  sections.reverse();\n  return sections.join(separator);\n}\n\n// ----------------------------------------------------------------------------\n// Array helper\n// ----------------------------------------------------------------------------\n\nfunction safeArrays(model) {\n  Object.keys(model).forEach((key) => {\n    if (Array.isArray(model[key])) {\n      model[key] = [].concat(model[key]);\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n\nfunction enumToString(e, value) {\n  return Object.keys(e).find((key) => e[key] === value);\n}\n\nfunction getStateArrayMapFunc(item) {\n  if (item.isA) {\n    return item.getState();\n  }\n  return item;\n}\n\n// ----------------------------------------------------------------------------\n// setImmediate\n// ----------------------------------------------------------------------------\n\nexport function setImmediateVTK(fn) {\n  setTimeout(fn, 0);\n}\n\n// ----------------------------------------------------------------------------\n// vtkObject: modified(), onModified(callback), delete()\n// ----------------------------------------------------------------------------\n\nexport function obj(publicAPI = {}, model = {}) {\n  // Ensure each instance as a unique ref of array\n  safeArrays(model);\n\n  const callbacks = [];\n  if (!Number.isInteger(model.mtime)) {\n    model.mtime = ++globalMTime;\n  }\n  model.classHierarchy = ['vtkObject'];\n\n  function off(index) {\n    callbacks[index] = null;\n  }\n\n  function on(index) {\n    function unsubscribe() {\n      off(index);\n    }\n    return Object.freeze({\n      unsubscribe,\n    });\n  }\n\n  publicAPI.isDeleted = () => !!model.deleted;\n\n  publicAPI.modified = (otherMTime) => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (otherMTime && otherMTime < publicAPI.getMTime()) {\n      return;\n    }\n\n    model.mtime = ++globalMTime;\n    callbacks.forEach((callback) => callback && callback(publicAPI));\n  };\n\n  publicAPI.onModified = (callback) => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    const index = callbacks.length;\n    callbacks.push(callback);\n    return on(index);\n  };\n\n  publicAPI.getMTime = () => model.mtime;\n\n  publicAPI.isA = (className) => {\n    let count = model.classHierarchy.length;\n    // we go backwards as that is more likely for\n    // early termination\n    while (count--) {\n      if (model.classHierarchy[count] === className) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  publicAPI.getClassName = (depth = 0) =>\n    model.classHierarchy[model.classHierarchy.length - 1 - depth];\n\n  publicAPI.set = (map = {}, noWarning = false, noFunction = false) => {\n    let ret = false;\n    Object.keys(map).forEach((name) => {\n      const fn = noFunction ? null : publicAPI[`set${capitalize(name)}`];\n      if (fn && Array.isArray(map[name]) && fn.length > 1) {\n        ret = fn(...map[name]) || ret;\n      } else if (fn) {\n        ret = fn(map[name]) || ret;\n      } else {\n        // Set data on model directly\n        if (['mtime'].indexOf(name) === -1 && !noWarning) {\n          vtkWarningMacro(\n            `Warning: Set value to model directly ${name}, ${map[name]}`\n          );\n        }\n        model[name] = map[name];\n        ret = true;\n      }\n    });\n    return ret;\n  };\n\n  publicAPI.get = (...list) => {\n    if (!list.length) {\n      return model;\n    }\n    const subset = {};\n    list.forEach((name) => {\n      subset[name] = model[name];\n    });\n    return subset;\n  };\n\n  publicAPI.getReferenceByName = (val) => model[val];\n\n  publicAPI.delete = () => {\n    Object.keys(model).forEach((field) => delete model[field]);\n    callbacks.forEach((el, index) => off(index));\n\n    // Flag the instance being deleted\n    model.deleted = true;\n  };\n\n  // Add serialization support\n  publicAPI.getState = () => {\n    const jsonArchive = Object.assign({}, model, {\n      vtkClass: publicAPI.getClassName(),\n    });\n\n    // Convert every vtkObject to its serializable form\n    Object.keys(jsonArchive).forEach((keyName) => {\n      if (jsonArchive[keyName] === null || jsonArchive[keyName] === undefined) {\n        delete jsonArchive[keyName];\n      } else if (jsonArchive[keyName].isA) {\n        jsonArchive[keyName] = jsonArchive[keyName].getState();\n      } else if (Array.isArray(jsonArchive[keyName])) {\n        jsonArchive[keyName] = jsonArchive[keyName].map(getStateArrayMapFunc);\n      }\n    });\n\n    // Sort resulting object by key name\n    const sortedObj = {};\n    Object.keys(jsonArchive)\n      .sort()\n      .forEach((name) => {\n        sortedObj[name] = jsonArchive[name];\n      });\n\n    // Remove mtime\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n\n    return sortedObj;\n  };\n\n  // Add shallowCopy(otherInstance) support\n  publicAPI.shallowCopy = (other, debug = false) => {\n    if (other.getClassName() !== publicAPI.getClassName()) {\n      throw new Error(\n        `Cannot ShallowCopy ${other.getClassName()} into ${publicAPI.getClassName()}`\n      );\n    }\n    const otherModel = other.get();\n\n    const keyList = Object.keys(model).sort();\n    const otherKeyList = Object.keys(otherModel).sort();\n\n    otherKeyList.forEach((key) => {\n      const keyIdx = keyList.indexOf(key);\n      if (keyIdx === -1) {\n        if (debug) {\n          vtkDebugMacro(`add ${key} in shallowCopy`);\n        }\n      } else {\n        keyList.splice(keyIdx, 1);\n      }\n      model[key] = otherModel[key];\n    });\n    if (keyList.length && debug) {\n      vtkDebugMacro(`Untouched keys: ${keyList.join(', ')}`);\n    }\n\n    publicAPI.modified();\n  };\n\n  // Allow usage as decorator\n  return publicAPI;\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters\n// ----------------------------------------------------------------------------\n\nexport function get(publicAPI, model, fieldNames) {\n  fieldNames.forEach((field) => {\n    if (typeof field === 'object') {\n      publicAPI[`get${capitalize(field.name)}`] = () => model[field.name];\n    } else {\n      publicAPI[`get${capitalize(field)}`] = () => model[field];\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setters\n// ----------------------------------------------------------------------------\n\nconst objectSetterMap = {\n  enum(publicAPI, model, field) {\n    return (value) => {\n      if (typeof value === 'string') {\n        if (field.enum[value] !== undefined) {\n          if (model[field.name] !== field.enum[value]) {\n            model[field.name] = field.enum[value];\n            publicAPI.modified();\n            return true;\n          }\n          return false;\n        }\n        vtkErrorMacro(`Set Enum with invalid argument ${field}, ${value}`);\n        throw new RangeError('Set Enum with invalid string argument');\n      }\n      if (typeof value === 'number') {\n        if (model[field.name] !== value) {\n          if (\n            Object.keys(field.enum)\n              .map((key) => field.enum[key])\n              .indexOf(value) !== -1\n          ) {\n            model[field.name] = value;\n            publicAPI.modified();\n            return true;\n          }\n          vtkErrorMacro(`Set Enum outside numeric range ${field}, ${value}`);\n          throw new RangeError('Set Enum outside numeric range');\n        }\n        return false;\n      }\n      vtkErrorMacro(\n        `Set Enum with invalid argument (String/Number) ${field}, ${value}`\n      );\n      throw new TypeError('Set Enum with invalid argument (String/Number)');\n    };\n  },\n};\n\nfunction findSetter(field) {\n  if (typeof field === 'object') {\n    const fn = objectSetterMap[field.type];\n    if (fn) {\n      return (publicAPI, model) => fn(publicAPI, model, field);\n    }\n\n    vtkErrorMacro(`No setter for field ${field}`);\n    throw new TypeError('No setter for field');\n  }\n  return function getSetter(publicAPI, model) {\n    return function setter(value) {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n\n      if (model[field] !== value) {\n        model[field] = value;\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  };\n}\n\nexport function set(publicAPI, model, fields) {\n  fields.forEach((field) => {\n    if (typeof field === 'object') {\n      publicAPI[`set${capitalize(field.name)}`] = findSetter(field)(\n        publicAPI,\n        model\n      );\n    } else {\n      publicAPI[`set${capitalize(field)}`] = findSetter(field)(\n        publicAPI,\n        model\n      );\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add both setters and getters\n// ----------------------------------------------------------------------------\n\nexport function setGet(publicAPI, model, fieldNames) {\n  get(publicAPI, model, fieldNames);\n  set(publicAPI, model, fieldNames);\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters for object of type array with copy to be safe\n// getXXXByReference: add getters for object of type array without copy\n// ----------------------------------------------------------------------------\n\nexport function getArray(publicAPI, model, fieldNames) {\n  fieldNames.forEach((field) => {\n    publicAPI[`get${capitalize(field)}`] = () => [].concat(model[field]);\n    publicAPI[`get${capitalize(field)}ByReference`] = () => model[field];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setter for object of type array\n// if 'defaultVal' is supplied, shorter arrays will be padded to 'size' with 'defaultVal'\n// set...From: fast path to copy the content of an array to the current one without call to modified.\n// ----------------------------------------------------------------------------\n\nexport function setArray(\n  publicAPI,\n  model,\n  fieldNames,\n  size,\n  defaultVal = undefined\n) {\n  fieldNames.forEach((field) => {\n    publicAPI[`set${capitalize(field)}`] = (...args) => {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n\n      let array = args;\n      // allow an array passed as a single arg.\n      if (array.length === 1 && Array.isArray(array[0])) {\n        /* eslint-disable prefer-destructuring */\n        array = array[0];\n        /* eslint-enable prefer-destructuring */\n      }\n\n      if (array.length !== size) {\n        if (array.length < size && defaultVal !== undefined) {\n          array = [].concat(array);\n          while (array.length < size) array.push(defaultVal);\n        } else {\n          throw new RangeError('Invalid number of values for array setter');\n        }\n      }\n      let changeDetected = false;\n      model[field].forEach((item, index) => {\n        if (item !== array[index]) {\n          if (changeDetected) {\n            return;\n          }\n          changeDetected = true;\n        }\n      });\n\n      if (changeDetected || model[field].length !== array.length) {\n        model[field] = [].concat(array);\n        publicAPI.modified();\n      }\n      return true;\n    };\n\n    publicAPI[`set${capitalize(field)}From`] = (otherArray) => {\n      const target = model[field];\n      otherArray.forEach((v, i) => {\n        target[i] = v;\n      });\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add setter and getter for object of type array\n// ----------------------------------------------------------------------------\n\nexport function setGetArray(\n  publicAPI,\n  model,\n  fieldNames,\n  size,\n  defaultVal = undefined\n) {\n  getArray(publicAPI, model, fieldNames);\n  setArray(publicAPI, model, fieldNames, size, defaultVal);\n}\n\n// ----------------------------------------------------------------------------\n// vtkAlgorithm: setInputData(), setInputConnection(), getOutputData(), getOutputPort()\n// ----------------------------------------------------------------------------\n\nexport function algo(publicAPI, model, numberOfInputs, numberOfOutputs) {\n  if (model.inputData) {\n    model.inputData = model.inputData.map(vtk);\n  } else {\n    model.inputData = [];\n  }\n\n  if (model.inputConnection) {\n    model.inputConnection = model.inputConnection.map(vtk);\n  } else {\n    model.inputConnection = [];\n  }\n\n  if (model.output) {\n    model.output = model.output.map(vtk);\n  } else {\n    model.output = [];\n  }\n\n  if (model.inputArrayToProcess) {\n    model.inputArrayToProcess = model.inputArrayToProcess.map(vtk);\n  } else {\n    model.inputArrayToProcess = [];\n  }\n\n  // Cache the argument for later manipulation\n  model.numberOfInputs = numberOfInputs;\n\n  // Methods\n  function setInputData(dataset, port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      vtkErrorMacro(\n        `algorithm ${publicAPI.getClassName()} only has ${\n          model.numberOfInputs\n        } input ports. To add more input ports, use addInputData()`\n      );\n      return;\n    }\n    if (model.inputData[port] !== dataset || model.inputConnection[port]) {\n      model.inputData[port] = dataset;\n      model.inputConnection[port] = null;\n      if (publicAPI.modified) {\n        publicAPI.modified();\n      }\n    }\n  }\n\n  function getInputData(port = 0) {\n    if (model.inputConnection[port]) {\n      model.inputData[port] = model.inputConnection[port]();\n    }\n    return model.inputData[port];\n  }\n\n  function setInputConnection(outputPort, port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      let msg = `algorithm ${publicAPI.getClassName()} only has `;\n      msg += `${model.numberOfInputs}`;\n      msg += ' input ports. To add more input ports, use addInputConnection()';\n      vtkErrorMacro(msg);\n      return;\n    }\n    model.inputData[port] = null;\n    model.inputConnection[port] = outputPort;\n  }\n\n  function getInputConnection(port = 0) {\n    return model.inputConnection[port];\n  }\n\n  function addInputConnection(outputPort) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    model.numberOfInputs++;\n    setInputConnection(outputPort, model.numberOfInputs - 1);\n  }\n\n  function addInputData(dataset) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    model.numberOfInputs++;\n    setInputData(dataset, model.numberOfInputs - 1);\n  }\n\n  function getOutputData(port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    if (publicAPI.shouldUpdate()) {\n      publicAPI.update();\n    }\n    return model.output[port];\n  }\n\n  publicAPI.shouldUpdate = () => {\n    const localMTime = publicAPI.getMTime();\n    let count = numberOfOutputs;\n    let minOutputMTime = Infinity;\n    while (count--) {\n      if (!model.output[count]) {\n        return true;\n      }\n      const mt = model.output[count].getMTime();\n      if (mt < localMTime) {\n        return true;\n      }\n      if (mt < minOutputMTime) {\n        minOutputMTime = mt;\n      }\n    }\n\n    count = model.numberOfInputs;\n    while (count--) {\n      if (\n        model.inputConnection[count] &&\n        model.inputConnection[count].filter.shouldUpdate()\n      ) {\n        return true;\n      }\n    }\n\n    count = model.numberOfInputs;\n    while (count--) {\n      if (\n        publicAPI.getInputData(count) &&\n        publicAPI.getInputData(count).getMTime() > minOutputMTime\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  function getOutputPort(port = 0) {\n    const outputPortAccess = () => getOutputData(port);\n    // Add reference to filter\n    outputPortAccess.filter = publicAPI;\n    return outputPortAccess;\n  }\n\n  // Handle input if needed\n  if (model.numberOfInputs) {\n    // Reserve inputs\n    let count = model.numberOfInputs;\n    while (count--) {\n      model.inputData.push(null);\n      model.inputConnection.push(null);\n    }\n\n    // Expose public methods\n    publicAPI.setInputData = setInputData;\n    publicAPI.setInputConnection = setInputConnection;\n    publicAPI.addInputData = addInputData;\n    publicAPI.addInputConnection = addInputConnection;\n    publicAPI.getInputData = getInputData;\n    publicAPI.getInputConnection = getInputConnection;\n  }\n\n  if (numberOfOutputs) {\n    publicAPI.getOutputData = getOutputData;\n    publicAPI.getOutputPort = getOutputPort;\n  }\n\n  publicAPI.update = () => {\n    const ins = [];\n    if (model.numberOfInputs) {\n      let count = 0;\n      while (count < model.numberOfInputs) {\n        ins[count] = publicAPI.getInputData(count);\n        count++;\n      }\n    }\n    if (publicAPI.shouldUpdate() && publicAPI.requestData) {\n      publicAPI.requestData(ins, model.output);\n    }\n  };\n\n  publicAPI.getNumberOfInputPorts = () => model.numberOfInputs;\n  publicAPI.getNumberOfOutputPorts = () =>\n    numberOfOutputs || model.output.length;\n\n  publicAPI.getInputArrayToProcess = (inputPort) => {\n    const arrayDesc = model.inputArrayToProcess[inputPort];\n    const ds = model.inputData[inputPort];\n    if (arrayDesc && ds) {\n      return ds[`get${arrayDesc.fieldAssociation}`]().getArray(\n        arrayDesc.arrayName\n      );\n    }\n    return null;\n  };\n  publicAPI.setInputArrayToProcess = (\n    inputPort,\n    arrayName,\n    fieldAssociation,\n    attributeType = 'Scalars'\n  ) => {\n    while (model.inputArrayToProcess.length < inputPort) {\n      model.inputArrayToProcess.push(null);\n    }\n    model.inputArrayToProcess[inputPort] = {\n      arrayName,\n      fieldAssociation,\n      attributeType,\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Event handling: onXXX(callback), invokeXXX(args...)\n// ----------------------------------------------------------------------------\n\nexport const EVENT_ABORT = Symbol('Event abort');\n\nexport function event(publicAPI, model, eventName) {\n  const callbacks = [];\n  const previousDelete = publicAPI.delete;\n  let curCallbackID = 1;\n\n  function off(callbackID) {\n    for (let i = 0; i < callbacks.length; ++i) {\n      const [cbID] = callbacks[i];\n      if (cbID === callbackID) {\n        callbacks.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  function on(callbackID) {\n    function unsubscribe() {\n      off(callbackID);\n    }\n    return Object.freeze({\n      unsubscribe,\n    });\n  }\n\n  function invoke() {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    /* eslint-disable prefer-rest-params */\n    // Go through a copy of the callbacks array in case new callbacks\n    // get prepended within previous callbacks\n    const currentCallbacks = callbacks.slice();\n    for (let index = 0; index < currentCallbacks.length; ++index) {\n      const [, cb, priority] = currentCallbacks[index];\n\n      if (!cb) {\n        continue; // eslint-disable-line\n      }\n\n      if (priority < 0) {\n        setTimeout(() => cb.apply(publicAPI, arguments), 1 - priority);\n      } else {\n        // Abort only if the callback explicitly returns false\n        const continueNext = cb.apply(publicAPI, arguments);\n        if (continueNext === EVENT_ABORT) {\n          break;\n        }\n      }\n    }\n    /* eslint-enable prefer-rest-params */\n  }\n\n  publicAPI[`invoke${capitalize(eventName)}`] = invoke;\n\n  publicAPI[`on${capitalize(eventName)}`] = (callback, priority = 0.0) => {\n    if (!callback.apply) {\n      console.error(`Invalid callback for event ${eventName}`);\n      return null;\n    }\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    const callbackID = curCallbackID++;\n    callbacks.push([callbackID, callback, priority]);\n    callbacks.sort((cb1, cb2) => cb2[2] - cb1[2]);\n    return on(callbackID);\n  };\n\n  publicAPI.delete = () => {\n    previousDelete();\n    callbacks.forEach(([cbID]) => off(cbID));\n  };\n}\n\n// ----------------------------------------------------------------------------\n// newInstance\n// ----------------------------------------------------------------------------\n\nexport function newInstance(extend, className) {\n  const constructor = (initialValues = {}) => {\n    const model = {};\n    const publicAPI = {};\n    extend(publicAPI, model, initialValues);\n\n    return Object.freeze(publicAPI);\n  };\n\n  // Register constructor to factory\n  if (className) {\n    vtk.register(className, constructor);\n  }\n\n  return constructor;\n}\n\n// ----------------------------------------------------------------------------\n// Chain function calls\n// ----------------------------------------------------------------------------\n\nexport function chain(...fn) {\n  return (...args) => fn.filter((i) => !!i).map((i) => i(...args));\n}\n\n// ----------------------------------------------------------------------------\n// Some utility methods for vtk objects\n// ----------------------------------------------------------------------------\n\nexport function isVtkObject(instance) {\n  return instance && instance.isA && instance.isA('vtkObject');\n}\n\nexport function traverseInstanceTree(\n  instance,\n  extractFunction,\n  accumulator = [],\n  visitedInstances = []\n) {\n  if (isVtkObject(instance)) {\n    if (visitedInstances.indexOf(instance) >= 0) {\n      // avoid cycles\n      return accumulator;\n    }\n\n    visitedInstances.push(instance);\n    const result = extractFunction(instance);\n    if (result !== undefined) {\n      accumulator.push(result);\n    }\n\n    // Now go through this instance's model\n    const model = instance.get();\n    Object.keys(model).forEach((key) => {\n      const modelObj = model[key];\n      if (Array.isArray(modelObj)) {\n        modelObj.forEach((subObj) => {\n          traverseInstanceTree(\n            subObj,\n            extractFunction,\n            accumulator,\n            visitedInstances\n          );\n        });\n      } else {\n        traverseInstanceTree(\n          modelObj,\n          extractFunction,\n          accumulator,\n          visitedInstances\n        );\n      }\n    });\n  }\n\n  return accumulator;\n}\n\n// ----------------------------------------------------------------------------\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n\nexport function debounce(func, wait, immediate) {\n  let timeout;\n  return (...args) => {\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Creates a throttled function that only invokes `func` at most once per\n// every `wait` milliseconds.\n\nexport function throttle(callback, delay) {\n  let isThrottled = false;\n  let argsToUse = null;\n\n  function next() {\n    isThrottled = false;\n    if (argsToUse !== null) {\n      wrapper(...argsToUse); // eslint-disable-line\n      argsToUse = null;\n    }\n  }\n\n  function wrapper(...args) {\n    if (isThrottled) {\n      argsToUse = args;\n      return;\n    }\n    isThrottled = true;\n    callback(...args);\n    setTimeout(next, delay);\n  }\n\n  return wrapper;\n}\n\n// ----------------------------------------------------------------------------\n// keystore(publicAPI, model, initialKeystore)\n//\n//    - initialKeystore: Initial keystore. This can be either a Map or an\n//      object.\n//\n// Generated API\n//  setKey(key, value) : mixed (returns value)\n//  getKey(key) : mixed\n//  getAllKeys() : [mixed]\n//  deleteKey(key) : Boolean\n// ----------------------------------------------------------------------------\n\nexport function keystore(publicAPI, model, initialKeystore = {}) {\n  model.keystore = Object.assign(model.keystore || {}, initialKeystore);\n\n  publicAPI.setKey = (key, value) => {\n    model.keystore[key] = value;\n  };\n  publicAPI.getKey = (key, value) => model.keystore[key];\n  publicAPI.getAllKeys = (key, value) => Object.keys(model.keystore);\n  publicAPI.deleteKey = (key, value) => delete model.keystore[key];\n  publicAPI.clearKeystore = () =>\n    publicAPI.getAllKeys().forEach((key) => delete model.keystore[key]);\n}\n\n// ----------------------------------------------------------------------------\n// proxy(publicAPI, model, sectionName, propertyUI)\n//\n//    - sectionName: Name of the section for UI\n//    - propertyUI: List of props with their UI description\n//\n// Generated API\n//  getProxyId() : String\n//  listProxyProperties() : [string]\n//  updateProxyProperty(name, prop)\n//  getProxySection() => List of properties for UI generation\n// ----------------------------------------------------------------------------\nlet nextProxyId = 1;\nconst ROOT_GROUP_NAME = '__root__';\n\nexport function proxy(publicAPI, model) {\n  // Proxies are keystores\n  keystore(publicAPI, model);\n\n  const parentDelete = publicAPI.delete;\n\n  // getProxyId\n  model.proxyId = `${nextProxyId++}`;\n\n  // ui handling\n  model.ui = JSON.parse(JSON.stringify(model.ui || [])); // deep copy\n  get(publicAPI, model, ['proxyId', 'proxyGroup', 'proxyName']);\n  setGet(publicAPI, model, ['proxyManager']);\n\n  // group properties\n  const propertyMap = {};\n  const groupChildrenNames = {};\n\n  function registerProperties(descriptionList, currentGroupName) {\n    if (!groupChildrenNames[currentGroupName]) {\n      groupChildrenNames[currentGroupName] = [];\n    }\n    const childrenNames = groupChildrenNames[currentGroupName];\n\n    for (let i = 0; i < descriptionList.length; i++) {\n      childrenNames.push(descriptionList[i].name);\n      propertyMap[descriptionList[i].name] = descriptionList[i];\n      if (descriptionList[i].children && descriptionList[i].children.length) {\n        registerProperties(\n          descriptionList[i].children,\n          descriptionList[i].name\n        );\n      }\n    }\n  }\n  registerProperties(model.ui, ROOT_GROUP_NAME);\n\n  publicAPI.updateUI = (ui) => {\n    model.ui = JSON.parse(JSON.stringify(ui || [])); // deep copy\n    Object.keys(propertyMap).forEach((k) => delete propertyMap[k]);\n    Object.keys(groupChildrenNames).forEach(\n      (k) => delete groupChildrenNames[k]\n    );\n    registerProperties(model.ui, ROOT_GROUP_NAME);\n    publicAPI.modified();\n  };\n\n  function listProxyProperties(gName = ROOT_GROUP_NAME) {\n    return groupChildrenNames[gName];\n  }\n\n  publicAPI.updateProxyProperty = (propertyName, propUI) => {\n    const prop = propertyMap[propertyName];\n    if (prop) {\n      Object.assign(prop, propUI);\n    } else {\n      propertyMap[propertyName] = Object.assign({}, propUI);\n    }\n  };\n\n  publicAPI.activate = () => {\n    if (model.proxyManager) {\n      const setActiveMethod = `setActive${capitalize(\n        publicAPI.getProxyGroup().slice(0, -1)\n      )}`;\n      if (model.proxyManager[setActiveMethod]) {\n        model.proxyManager[setActiveMethod](publicAPI);\n      }\n    }\n  };\n\n  // property link\n  model.propertyLinkSubscribers = {};\n  publicAPI.registerPropertyLinkForGC = (otherLink, type) => {\n    if (!(type in model.propertyLinkSubscribers)) {\n      model.propertyLinkSubscribers[type] = [];\n    }\n    model.propertyLinkSubscribers[type].push(otherLink);\n  };\n\n  publicAPI.gcPropertyLinks = (type) => {\n    const subscribers = model.propertyLinkSubscribers[type] || [];\n    while (subscribers.length) {\n      subscribers.pop().unbind(publicAPI);\n    }\n  };\n\n  model.propertyLinkMap = {};\n  publicAPI.getPropertyLink = (id, persistent = false) => {\n    if (model.propertyLinkMap[id]) {\n      return model.propertyLinkMap[id];\n    }\n    let value = null;\n    const links = [];\n    let count = 0;\n    let updateInProgress = false;\n\n    function update(source, force = false) {\n      if (updateInProgress) {\n        return null;\n      }\n\n      const needUpdate = [];\n      let sourceLink = null;\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (link.instance === source) {\n          sourceLink = link;\n        } else {\n          needUpdate.push(link);\n        }\n      }\n\n      if (!sourceLink) {\n        return null;\n      }\n\n      const newValue = sourceLink.instance[\n        `get${capitalize(sourceLink.propertyName)}`\n      ]();\n      if (newValue !== value || force) {\n        value = newValue;\n        updateInProgress = true;\n        while (needUpdate.length) {\n          const linkToUpdate = needUpdate.pop();\n          linkToUpdate.instance.set({\n            [linkToUpdate.propertyName]: value,\n          });\n        }\n        updateInProgress = false;\n      }\n\n      if (model.propertyLinkMap[id].persistent) {\n        model.propertyLinkMap[id].value = newValue;\n      }\n\n      return newValue;\n    }\n\n    function unbind(instance, propertyName) {\n      const indexToDelete = [];\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (\n          link.instance === instance &&\n          (link.propertyName === propertyName || propertyName === undefined)\n        ) {\n          link.subscription.unsubscribe();\n          indexToDelete.push(count);\n        }\n      }\n      while (indexToDelete.length) {\n        links.splice(indexToDelete.pop(), 1);\n      }\n    }\n\n    function bind(instance, propertyName, updateMe = false) {\n      const subscription = instance.onModified(update);\n      const other = links[0];\n      links.push({\n        instance,\n        propertyName,\n        subscription,\n      });\n      if (updateMe) {\n        if (\n          model.propertyLinkMap[id].persistent &&\n          model.propertyLinkMap[id].value !== undefined\n        ) {\n          instance.set({\n            [propertyName]: model.propertyLinkMap[id].value,\n          });\n        } else if (other) {\n          update(other.instance, true);\n        }\n      }\n      return {\n        unsubscribe: () => unbind(instance, propertyName),\n      };\n    }\n\n    function unsubscribe() {\n      while (links.length) {\n        links.pop().subscription.unsubscribe();\n      }\n    }\n\n    const linkHandler = {\n      bind,\n      unbind,\n      unsubscribe,\n      persistent,\n    };\n    model.propertyLinkMap[id] = linkHandler;\n    return linkHandler;\n  };\n\n  // extract values\n  function getProperties(groupName = ROOT_GROUP_NAME) {\n    const values = [];\n    const id = model.proxyId;\n    const propertyNames = listProxyProperties(groupName) || [];\n    for (let i = 0; i < propertyNames.length; i++) {\n      const name = propertyNames[i];\n      const method = publicAPI[`get${capitalize(name)}`];\n      const value = method ? method() : undefined;\n      const prop = {\n        id,\n        name,\n        value,\n      };\n      const children = getProperties(name);\n      if (children.length) {\n        prop.children = children;\n      }\n      values.push(prop);\n    }\n    return values;\n  }\n\n  publicAPI.listPropertyNames = () => getProperties().map((p) => p.name);\n\n  publicAPI.getPropertyByName = (name) =>\n    getProperties().find((p) => p.name === name);\n\n  publicAPI.getPropertyDomainByName = (name) => propertyMap[name].domain;\n\n  // ui section\n  publicAPI.getProxySection = () => ({\n    id: model.proxyId,\n    name: model.proxyGroup,\n    ui: model.ui,\n    properties: getProperties(),\n  });\n\n  // free resources\n  publicAPI.delete = () => {\n    const list = Object.keys(model.propertyLinkMap);\n    let count = list.length;\n    while (count--) {\n      model.propertyLinkMap[list[count]].unsubscribe();\n    }\n    Object.keys(model.propertyLinkSubscribers).forEach(\n      publicAPI.gcPropertyLinks\n    );\n    parentDelete();\n  };\n\n  function registerLinks() {\n    // Allow dynamic registration of links at the application level\n    if (model.links) {\n      for (let i = 0; i < model.links.length; i++) {\n        const { link, property, persistent, updateOnBind, type } = model.links[\n          i\n        ];\n        if (type === 'application') {\n          const sLink = model.proxyManager.getPropertyLink(link, persistent);\n          publicAPI.registerPropertyLinkForGC(sLink, 'application');\n          sLink.bind(publicAPI, property, updateOnBind);\n        }\n      }\n    }\n  }\n  setImmediateVTK(registerLinks);\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyMapping(publicAPI, model, map)\n//\n//   map = {\n//      opacity: { modelKey: 'property', property: 'opacity' },\n//   }\n//\n// Generated API:\n//  Elevate set/get methods from internal object stored in the model to current one\n// ----------------------------------------------------------------------------\n\nexport function proxyPropertyMapping(publicAPI, model, map) {\n  const parentDelete = publicAPI.delete;\n  const subscriptions = [];\n\n  const propertyNames = Object.keys(map);\n  let count = propertyNames.length;\n  while (count--) {\n    const propertyName = propertyNames[count];\n    const { modelKey, property, modified = true } = map[propertyName];\n    const methodSrc = capitalize(property);\n    const methodDst = capitalize(propertyName);\n    publicAPI[`get${methodDst}`] = model[modelKey][`get${methodSrc}`];\n    publicAPI[`set${methodDst}`] = model[modelKey][`set${methodSrc}`];\n    if (modified) {\n      subscriptions.push(model[modelKey].onModified(publicAPI.modified));\n    }\n  }\n\n  publicAPI.delete = () => {\n    while (subscriptions.length) {\n      subscriptions.pop().unsubscribe();\n    }\n    parentDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyState(publicAPI, model, state, defaults)\n//\n//   state = {\n//     representation: {\n//       'Surface with edges': { property: { edgeVisibility: true, representation: 2 } },\n//       Surface: { property: { edgeVisibility: false, representation: 2 } },\n//       Wireframe: { property: { edgeVisibility: false, representation: 1 } },\n//       Points: { property: { edgeVisibility: false, representation: 0 } },\n//     },\n//   }\n//\n//   defaults = {\n//      representation: 'Surface',\n//   }\n//\n// Generated API\n//   get / set Representation ( string ) => push state to various internal objects\n// ----------------------------------------------------------------------------\n\nexport function proxyPropertyState(\n  publicAPI,\n  model,\n  state = {},\n  defaults = {}\n) {\n  model.this = publicAPI;\n\n  function applyState(map) {\n    const modelKeys = Object.keys(map);\n    let count = modelKeys.length;\n    while (count--) {\n      const modelKey = modelKeys[count];\n      model[modelKey].set(map[modelKey]);\n    }\n  }\n\n  const modelKeys = Object.keys(defaults);\n  let count = modelKeys.length;\n  while (count--) {\n    // Add default\n    const key = modelKeys[count];\n    model[key] = defaults[key];\n\n    // Add set method\n    const mapping = state[key];\n    publicAPI[`set${capitalize(key)}`] = (value) => {\n      if (value !== model[key]) {\n        model[key] = value;\n        const propValues = mapping[value];\n        applyState(propValues);\n        publicAPI.modified();\n      }\n    };\n  }\n\n  // Add getter\n  if (modelKeys.length) {\n    get(publicAPI, model, modelKeys);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// From : https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n//\n//\n// Copyright (c) 2015, Facebook, Inc.\n// All rights reserved.\n//\n// This source code is licensed under the BSD-style license found in the\n// LICENSE file in the root directory of this source tree. An additional grant\n// of patent rights can be found in the PATENTS file in the same directory.\n//\n//\n// Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n// complicated, thus this doc is long and (hopefully) detailed enough to answer\n// your questions.\n//\n// If you need to react to the mouse wheel in a predictable way, this code is\n// like your bestest friend.// hugs//\n//\n// As of today, there are 4 DOM event types you can listen to:\n//\n//   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n//   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n//   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n//   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n//\n// So what to do?  The is the best:\n//\n//   normalizeWheel.getEventType();\n//\n// In your event callback, use this code to get sane interpretation of the\n// deltas.  This code will return an object with properties:\n//\n//   spinX   -- normalized spin speed (use for zoom) - x plane\n//   spinY   -- \" - y plane\n//   pixelX  -- normalized distance (to pixels) - x plane\n//   pixelY  -- \" - y plane\n//\n// Wheel values are provided by the browser assuming you are using the wheel to\n// scroll a web page by a number of lines or pixels (or pages).  Values can vary\n// significantly on different platforms and browsers, forgetting that you can\n// scroll at different speeds.  Some devices (like trackpads) emit more events\n// at smaller increments with fine granularity, and some emit massive jumps with\n// linear speed or acceleration.\n//\n// This code does its best to normalize the deltas for you:\n//\n//   - spin is trying to normalize how far the wheel was spun (or trackpad\n//     dragged).  This is super useful for zoom support where you want to\n//     throw away the chunky scroll steps on the PC and make those equal to\n//     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n//     resolve a single slow step on a wheel to 1.\n//\n//   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n//     get the crazy differences between browsers, but at least it'll be in\n//     pixels!\n//\n//   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n//     should translate to positive value zooming IN, negative zooming OUT.\n//     This matches the newer 'wheel' event.\n//\n// Why are there spinX, spinY (or pixels)?\n//\n//   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n//     with a mouse.  It results in side-scrolling in the browser by default.\n//\n//   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n//\n//   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n//     probably is by browsers in conjunction with fancy 3D controllers .. but\n//     you know.\n//\n// Implementation info:\n//\n// Examples of 'wheel' event if you scroll slowly (down) by one step with an\n// average mouse:\n//\n//   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n//   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n//   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n//   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n//   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n//\n// On the trackpad:\n//\n//   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n//   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n//\n// On other/older browsers.. it's more complicated as there can be multiple and\n// also missing delta values.\n//\n// The 'wheel' event is more standard:\n//\n// http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n//\n// The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n// deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n// backward compatibility with older events.  Those other values help us\n// better normalize spin speed.  Example of what the browsers provide:\n//\n//                          | event.wheelDelta | event.detail\n//        ------------------+------------------+--------------\n//          Safari v5/OS X  |       -120       |       0\n//          Safari v5/Win7  |       -120       |       0\n//         Chrome v17/OS X  |       -120       |       0\n//         Chrome v17/Win7  |       -120       |       0\n//                IE9/Win7  |       -120       |   undefined\n//         Firefox v4/OS X  |     undefined    |       1\n//         Firefox v4/Win7  |     undefined    |       3\n//\n// ----------------------------------------------------------------------------\n\n// Reasonable defaults\nconst PIXEL_STEP = 10;\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\n\nexport function normalizeWheel(wheelEvent) {\n  let sX = 0; // spinX\n  let sY = 0; // spinY\n  let pX = 0; // pixelX\n  let pY = 0; // pixelY\n\n  // Legacy\n  if ('detail' in wheelEvent) {\n    sY = wheelEvent.detail;\n  }\n  if ('wheelDelta' in wheelEvent) {\n    sY = -wheelEvent.wheelDelta / 120;\n  }\n  if ('wheelDeltaY' in wheelEvent) {\n    sY = -wheelEvent.wheelDeltaY / 120;\n  }\n  if ('wheelDeltaX' in wheelEvent) {\n    sX = -wheelEvent.wheelDeltaX / 120;\n  }\n\n  // side scrolling on FF with DOMMouseScroll\n  if ('axis' in wheelEvent && wheelEvent.axis === wheelEvent.HORIZONTAL_AXIS) {\n    sX = sY;\n    sY = 0;\n  }\n\n  pX = sX * PIXEL_STEP;\n  pY = sY * PIXEL_STEP;\n\n  if ('deltaY' in wheelEvent) {\n    pY = wheelEvent.deltaY;\n  }\n  if ('deltaX' in wheelEvent) {\n    pX = wheelEvent.deltaX;\n  }\n\n  if ((pX || pY) && wheelEvent.deltaMode) {\n    if (wheelEvent.deltaMode === 1) {\n      // delta in LINE units\n      pX *= LINE_HEIGHT;\n      pY *= LINE_HEIGHT;\n    } else {\n      // delta in PAGE units\n      pX *= PAGE_HEIGHT;\n      pY *= PAGE_HEIGHT;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1;\n  }\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1;\n  }\n\n  return {\n    spinX: sX,\n    spinY: sY,\n    pixelX: pX,\n    pixelY: pY,\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Default export\n// ----------------------------------------------------------------------------\n\nexport default {\n  algo,\n  capitalize,\n  chain,\n  debounce,\n  enumToString,\n  event,\n  EVENT_ABORT,\n  formatBytesToProperUnit,\n  formatNumbersWithThousandSeparator,\n  get,\n  getArray,\n  getCurrentGlobalMTime,\n  getStateArrayMapFunc,\n  isVtkObject,\n  keystore,\n  newInstance,\n  normalizeWheel,\n  obj,\n  proxy,\n  proxyPropertyMapping,\n  proxyPropertyState,\n  safeArrays,\n  set,\n  setArray,\n  setGet,\n  setGetArray,\n  setImmediate: setImmediateVTK,\n  setLoggerFunction,\n  throttle,\n  traverseInstanceTree,\n  TYPED_ARRAYS,\n  uncapitalize,\n  VOID,\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkInfoMacro,\n  vtkLogMacro,\n  vtkOnceErrorMacro,\n  vtkWarningMacro,\n};\n","import seedrandom from 'seedrandom';\nimport macro from 'vtk.js/Sources/macro';\n\nconst { vtkErrorMacro, vtkWarningMacro } = macro;\n\n// ----------------------------------------------------------------------------\n/* eslint-disable camelcase                                                  */\n/* eslint-disable no-cond-assign                                             */\n/* eslint-disable no-bitwise                                                 */\n/* eslint-disable no-multi-assign                                            */\n// ----------------------------------------------------------------------------\nlet randomSeedValue = 0;\nconst VTK_MAX_ROTATIONS = 20;\nconst VTK_SMALL_NUMBER = 1.0e-12;\n\nfunction notImplemented(method) {\n  return () => vtkErrorMacro(`vtkMath::${method} - NOT IMPLEMENTED`);\n}\n\nfunction vtkSwapVectors3(v1, v2) {\n  for (let i = 0; i < 3; i++) {\n    const tmp = v1[i];\n    v1[i] = v2[i];\n    v2[i] = tmp;\n  }\n}\n\nfunction createArray(size = 3) {\n  const array = [];\n  while (array.length < size) {\n    array.push(0);\n  }\n  return array;\n}\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nexport const Pi = () => Math.PI;\n\nexport function radiansFromDegrees(deg) {\n  return (deg / 180) * Math.PI;\n}\n\nexport function degreesFromRadians(rad) {\n  return (rad * 180) / Math.PI;\n}\n\nexport const { round, floor, ceil, min, max } = Math;\n\nexport function arrayMin(arr, offset = 0, stride = 1) {\n  let minValue = Infinity;\n  for (let i = offset, len = arr.length; i < len; i += stride) {\n    if (arr[i] < minValue) {\n      minValue = arr[i];\n    }\n  }\n\n  return minValue;\n}\n\nexport function arrayMax(arr, offset = 0, stride = 1) {\n  let maxValue = -Infinity;\n  for (let i = offset, len = arr.length; i < len; i += stride) {\n    if (maxValue < arr[i]) {\n      maxValue = arr[i];\n    }\n  }\n\n  return maxValue;\n}\n\nexport function arrayRange(arr, offset = 0, stride = 1) {\n  let minValue = Infinity;\n  let maxValue = -Infinity;\n  for (let i = offset, len = arr.length; i < len; i += stride) {\n    if (arr[i] < minValue) {\n      minValue = arr[i];\n    }\n    if (maxValue < arr[i]) {\n      maxValue = arr[i];\n    }\n  }\n\n  return [minValue, maxValue];\n}\n\nexport const ceilLog2 = notImplemented('ceilLog2');\nexport const factorial = notImplemented('factorial');\n\nexport function nearestPowerOfTwo(xi) {\n  let v = 1;\n  while (v < xi) {\n    v *= 2;\n  }\n  return v;\n}\n\nexport function isPowerOfTwo(x) {\n  return x === nearestPowerOfTwo(x);\n}\n\nexport function binomial(m, n) {\n  let r = 1;\n  for (let i = 1; i <= n; ++i) {\n    r *= (m - i + 1) / i;\n  }\n  return Math.floor(r);\n}\n\nexport function beginCombination(m, n) {\n  if (m < n) {\n    return 0;\n  }\n\n  const r = createArray(n);\n  for (let i = 0; i < n; ++i) {\n    r[i] = i;\n  }\n  return r;\n}\n\nexport function nextCombination(m, n, r) {\n  let status = 0;\n  for (let i = n - 1; i >= 0; --i) {\n    if (r[i] < m - n + i) {\n      let j = r[i] + 1;\n      while (i < n) {\n        r[i++] = j++;\n      }\n      status = 1;\n      break;\n    }\n  }\n  return status;\n}\n\nexport function randomSeed(seed) {\n  seedrandom(`${seed}`, { global: true });\n  randomSeedValue = seed;\n}\n\nexport function getSeed() {\n  return randomSeedValue;\n}\n\nexport function random(minValue = 0, maxValue = 1) {\n  const delta = maxValue - minValue;\n  return minValue + delta * Math.random();\n}\n\nexport const gaussian = notImplemented('gaussian');\n\n// Vect3 operations\nexport function add(a, b, out) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n}\n\nexport function subtract(a, b, out) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n}\n\nexport function multiplyScalar(vec, scalar) {\n  vec[0] *= scalar;\n  vec[1] *= scalar;\n  vec[2] *= scalar;\n}\n\nexport function multiplyScalar2D(vec, scalar) {\n  vec[0] *= scalar;\n  vec[1] *= scalar;\n}\n\nexport function dot(x, y) {\n  return x[0] * y[0] + x[1] * y[1] + x[2] * y[2];\n}\n\nexport function outer(x, y, out_3x3) {\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      out_3x3[i][j] = x[i] * y[j];\n    }\n  }\n}\n\nexport function cross(x, y, out) {\n  const Zx = x[1] * y[2] - x[2] * y[1];\n  const Zy = x[2] * y[0] - x[0] * y[2];\n  const Zz = x[0] * y[1] - x[1] * y[0];\n  out[0] = Zx;\n  out[1] = Zy;\n  out[2] = Zz;\n}\n\nexport function norm(x, n = 3) {\n  switch (n) {\n    case 1:\n      return Math.abs(x);\n    case 2:\n      return Math.sqrt(x[0] * x[0] + x[1] * x[1]);\n    case 3:\n      return Math.sqrt(x[0] * x[0] + x[1] * x[1] + x[2] * x[2]);\n    default: {\n      let sum = 0;\n      for (let i = 0; i < n; i++) {\n        sum += x[i] * x[i];\n      }\n      return Math.sqrt(sum);\n    }\n  }\n}\n\nexport function normalize(x) {\n  const den = norm(x);\n  if (den !== 0.0) {\n    x[0] /= den;\n    x[1] /= den;\n    x[2] /= den;\n  }\n  return den;\n}\n\nexport function perpendiculars(x, y, z, theta) {\n  const x2 = x[0] * x[0];\n  const y2 = x[1] * x[1];\n  const z2 = x[2] * x[2];\n  const r = Math.sqrt(x2 + y2 + z2);\n\n  let dx;\n  let dy;\n  let dz;\n\n  // transpose the vector to avoid divide-by-zero error\n  if (x2 > y2 && x2 > z2) {\n    dx = 0;\n    dy = 1;\n    dz = 2;\n  } else if (y2 > z2) {\n    dx = 1;\n    dy = 2;\n    dz = 0;\n  } else {\n    dx = 2;\n    dy = 0;\n    dz = 1;\n  }\n\n  const a = x[dx] / r;\n  const b = x[dy] / r;\n  const c = x[dz] / r;\n  const tmp = Math.sqrt(a * a + c * c);\n\n  if (theta !== 0) {\n    const sintheta = Math.sin(theta);\n    const costheta = Math.cos(theta);\n\n    if (y) {\n      y[dx] = (c * costheta - a * b * sintheta) / tmp;\n      y[dy] = sintheta * tmp;\n      y[dz] = (-(a * costheta) - b * c * sintheta) / tmp;\n    }\n\n    if (z) {\n      z[dx] = (-(c * sintheta) - a * b * costheta) / tmp;\n      z[dy] = costheta * tmp;\n      z[dz] = (a * sintheta - b * c * costheta) / tmp;\n    }\n  } else {\n    if (y) {\n      y[dx] = c / tmp;\n      y[dy] = 0;\n      y[dz] = -a / tmp;\n    }\n\n    if (z) {\n      z[dx] = (-a * b) / tmp;\n      z[dy] = tmp;\n      z[dz] = (-b * c) / tmp;\n    }\n  }\n}\n\nexport function projectVector(a, b, projection) {\n  const bSquared = dot(b, b);\n\n  if (bSquared === 0) {\n    projection[0] = 0;\n    projection[1] = 0;\n    projection[2] = 0;\n    return false;\n  }\n\n  const scale = dot(a, b) / bSquared;\n\n  for (let i = 0; i < 3; i++) {\n    projection[i] = b[i];\n  }\n  multiplyScalar(projection, scale);\n\n  return true;\n}\n\nexport function dot2D(x, y) {\n  return x[0] * y[0] + x[1] * y[1];\n}\n\nexport function projectVector2D(a, b, projection) {\n  const bSquared = dot2D(b, b);\n\n  if (bSquared === 0) {\n    projection[0] = 0;\n    projection[1] = 0;\n    return false;\n  }\n\n  const scale = dot2D(a, b) / bSquared;\n\n  for (let i = 0; i < 2; i++) {\n    projection[i] = b[i];\n  }\n  multiplyScalar2D(projection, scale);\n\n  return true;\n}\n\nexport function distance2BetweenPoints(x, y) {\n  return (\n    (x[0] - y[0]) * (x[0] - y[0]) +\n    (x[1] - y[1]) * (x[1] - y[1]) +\n    (x[2] - y[2]) * (x[2] - y[2])\n  );\n}\n\nexport function angleBetweenVectors(v1, v2) {\n  const crossVect = [0, 0, 0];\n  cross(v1, v2, crossVect);\n  return Math.atan2(norm(crossVect), dot(v1, v2));\n}\n\nexport function gaussianAmplitude(mean, variance, position) {\n  const distanceFromMean = Math.abs(mean - position);\n  return (\n    (1 / Math.sqrt(2 * Math.PI * variance)) *\n    Math.exp(-(distanceFromMean ** 2) / (2 * variance))\n  );\n}\n\nexport function gaussianWeight(mean, variance, position) {\n  const distanceFromMean = Math.abs(mean - position);\n  return Math.exp(-(distanceFromMean ** 2) / (2 * variance));\n}\n\nexport function outer2D(x, y, out_2x2) {\n  for (let i = 0; i < 2; i++) {\n    for (let j = 0; j < 2; j++) {\n      out_2x2[i][j] = x[i] * y[j];\n    }\n  }\n}\n\nexport function norm2D(x2D) {\n  return Math.sqrt(x2D[0] * x2D[0] + x2D[1] * x2D[1]);\n}\n\nexport function normalize2D(x) {\n  const den = norm2D(x);\n  if (den !== 0.0) {\n    x[0] /= den;\n    x[1] /= den;\n  }\n  return den;\n}\n\nexport function determinant2x2(...args) {\n  if (args.length === 2) {\n    return args[0][0] * args[1][1] - args[1][0] * args[0][1];\n  }\n  if (args.length === 4) {\n    return args[0] * args[3] - args[1] * args[2];\n  }\n  return Number.NaN;\n}\n\nexport function LUFactor3x3(mat_3x3, index_3) {\n  let maxI;\n  let tmp;\n  let largest;\n  const scale = [0, 0, 0];\n\n  // Loop over rows to get implicit scaling information\n  for (let i = 0; i < 3; i++) {\n    largest = Math.abs(mat_3x3[i][0]);\n    if ((tmp = Math.abs(mat_3x3[i][1])) > largest) {\n      largest = tmp;\n    }\n    if ((tmp = Math.abs(mat_3x3[i][2])) > largest) {\n      largest = tmp;\n    }\n    scale[i] = 1 / largest;\n  }\n\n  // Loop over all columns using Crout's method\n\n  // first column\n  largest = scale[0] * Math.abs(mat_3x3[0][0]);\n  maxI = 0;\n  if ((tmp = scale[1] * Math.abs(mat_3x3[1][0])) >= largest) {\n    largest = tmp;\n    maxI = 1;\n  }\n  if ((tmp = scale[2] * Math.abs(mat_3x3[2][0])) >= largest) {\n    maxI = 2;\n  }\n  if (maxI !== 0) {\n    vtkSwapVectors3(mat_3x3[maxI], mat_3x3[0]);\n    scale[maxI] = scale[0];\n  }\n  index_3[0] = maxI;\n\n  mat_3x3[1][0] /= mat_3x3[0][0];\n  mat_3x3[2][0] /= mat_3x3[0][0];\n\n  // second column\n  mat_3x3[1][1] -= mat_3x3[1][0] * mat_3x3[0][1];\n  mat_3x3[2][1] -= mat_3x3[2][0] * mat_3x3[0][1];\n  largest = scale[1] * Math.abs(mat_3x3[1][1]);\n  maxI = 1;\n  if ((tmp = scale[2] * Math.abs(mat_3x3[2][1])) >= largest) {\n    maxI = 2;\n    vtkSwapVectors3(mat_3x3[2], mat_3x3[1]);\n    scale[2] = scale[1];\n  }\n  index_3[1] = maxI;\n  mat_3x3[2][1] /= mat_3x3[1][1];\n\n  // third column\n  mat_3x3[1][2] -= mat_3x3[1][0] * mat_3x3[0][2];\n  mat_3x3[2][2] -=\n    mat_3x3[2][0] * mat_3x3[0][2] + mat_3x3[2][1] * mat_3x3[1][2];\n  index_3[2] = 2;\n}\n\nexport function LUSolve3x3(mat_3x3, index_3, x_3) {\n  // forward substitution\n  let sum = x_3[index_3[0]];\n  x_3[index_3[0]] = x_3[0];\n  x_3[0] = sum;\n\n  sum = x_3[index_3[1]];\n  x_3[index_3[1]] = x_3[1];\n  x_3[1] = sum - mat_3x3[1][0] * x_3[0];\n\n  sum = x_3[index_3[2]];\n  x_3[index_3[2]] = x_3[2];\n  x_3[2] = sum - mat_3x3[2][0] * x_3[0] - mat_3x3[2][1] * x_3[1];\n\n  // back substitution\n  x_3[2] /= mat_3x3[2][2];\n  x_3[1] = (x_3[1] - mat_3x3[1][2] * x_3[2]) / mat_3x3[1][1];\n  x_3[0] =\n    (x_3[0] - mat_3x3[0][1] * x_3[1] - mat_3x3[0][2] * x_3[2]) / mat_3x3[0][0];\n}\n\nexport function linearSolve3x3(mat_3x3, x_3, y_3) {\n  const a1 = mat_3x3[0][0];\n  const b1 = mat_3x3[0][1];\n  const c1 = mat_3x3[0][2];\n  const a2 = mat_3x3[1][0];\n  const b2 = mat_3x3[1][1];\n  const c2 = mat_3x3[1][2];\n  const a3 = mat_3x3[2][0];\n  const b3 = mat_3x3[2][1];\n  const c3 = mat_3x3[2][2];\n\n  // Compute the adjoint\n  const d1 = +determinant2x2(b2, b3, c2, c3);\n  const d2 = -determinant2x2(a2, a3, c2, c3);\n  const d3 = +determinant2x2(a2, a3, b2, b3);\n\n  const e1 = -determinant2x2(b1, b3, c1, c3);\n  const e2 = +determinant2x2(a1, a3, c1, c3);\n  const e3 = -determinant2x2(a1, a3, b1, b3);\n\n  const f1 = +determinant2x2(b1, b2, c1, c2);\n  const f2 = -determinant2x2(a1, a2, c1, c2);\n  const f3 = +determinant2x2(a1, a2, b1, b2);\n\n  // Compute the determinant\n  const det = a1 * d1 + b1 * d2 + c1 * d3;\n\n  // Multiply by the adjoint\n  const v1 = d1 * x_3[0] + e1 * x_3[1] + f1 * x_3[2];\n  const v2 = d2 * x_3[0] + e2 * x_3[1] + f2 * x_3[2];\n  const v3 = d3 * x_3[0] + e3 * x_3[1] + f3 * x_3[2];\n\n  // Divide by the determinant\n  y_3[0] = v1 / det;\n  y_3[1] = v2 / det;\n  y_3[2] = v3 / det;\n}\n\nexport function multiply3x3_vect3(mat_3x3, in_3, out_3) {\n  const x =\n    mat_3x3[0][0] * in_3[0] + mat_3x3[0][1] * in_3[1] + mat_3x3[0][2] * in_3[2];\n  const y =\n    mat_3x3[1][0] * in_3[0] + mat_3x3[1][1] * in_3[1] + mat_3x3[1][2] * in_3[2];\n  const z =\n    mat_3x3[2][0] * in_3[0] + mat_3x3[2][1] * in_3[1] + mat_3x3[2][2] * in_3[2];\n\n  out_3[0] = x;\n  out_3[1] = y;\n  out_3[2] = z;\n}\n\nexport function multiply3x3_mat3(a_3x3, b_3x3, out_3x3) {\n  const tmp = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n\n  for (let i = 0; i < 3; i++) {\n    tmp[0][i] =\n      a_3x3[0][0] * b_3x3[0][i] +\n      a_3x3[0][1] * b_3x3[1][i] +\n      a_3x3[0][2] * b_3x3[2][i];\n    tmp[1][i] =\n      a_3x3[1][0] * b_3x3[0][i] +\n      a_3x3[1][1] * b_3x3[1][i] +\n      a_3x3[1][2] * b_3x3[2][i];\n    tmp[2][i] =\n      a_3x3[2][0] * b_3x3[0][i] +\n      a_3x3[2][1] * b_3x3[1][i] +\n      a_3x3[2][2] * b_3x3[2][i];\n  }\n\n  for (let j = 0; j < 3; j++) {\n    out_3x3[j][0] = tmp[j][0];\n    out_3x3[j][1] = tmp[j][1];\n    out_3x3[j][2] = tmp[j][2];\n  }\n}\n\nexport function multiplyMatrix(a, b, rowA, colA, rowB, colB, out_rowXcol) {\n  // we need colA == rowB\n  if (colA !== rowB) {\n    vtkErrorMacro('Number of columns of A must match number of rows of B.');\n  }\n\n  // output matrix is rowA*colB\n  // output row\n  for (let i = 0; i < rowA; i++) {\n    // output col\n    for (let j = 0; j < colB; j++) {\n      out_rowXcol[i][j] = 0;\n      // sum for this point\n      for (let k = 0; k < colA; k++) {\n        out_rowXcol[i][j] += a[i][k] * b[k][j];\n      }\n    }\n  }\n}\n\nexport function transpose3x3(in_3x3, outT_3x3) {\n  let tmp;\n  tmp = in_3x3[1][0];\n  outT_3x3[1][0] = in_3x3[0][1];\n  outT_3x3[0][1] = tmp;\n  tmp = in_3x3[2][0];\n  outT_3x3[2][0] = in_3x3[0][2];\n  outT_3x3[0][2] = tmp;\n  tmp = in_3x3[2][1];\n  outT_3x3[2][1] = in_3x3[1][2];\n  outT_3x3[1][2] = tmp;\n\n  outT_3x3[0][0] = in_3x3[0][0];\n  outT_3x3[1][1] = in_3x3[1][1];\n  outT_3x3[2][2] = in_3x3[2][2];\n}\n\nexport function invert3x3(in_3x3, outI_3x3) {\n  const a1 = in_3x3[0][0];\n  const b1 = in_3x3[0][1];\n  const c1 = in_3x3[0][2];\n  const a2 = in_3x3[1][0];\n  const b2 = in_3x3[1][1];\n  const c2 = in_3x3[1][2];\n  const a3 = in_3x3[2][0];\n  const b3 = in_3x3[2][1];\n  const c3 = in_3x3[2][2];\n\n  // Compute the adjoint\n  const d1 = +determinant2x2(b2, b3, c2, c3);\n  const d2 = -determinant2x2(a2, a3, c2, c3);\n  const d3 = +determinant2x2(a2, a3, b2, b3);\n\n  const e1 = -determinant2x2(b1, b3, c1, c3);\n  const e2 = +determinant2x2(a1, a3, c1, c3);\n  const e3 = -determinant2x2(a1, a3, b1, b3);\n\n  const f1 = +determinant2x2(b1, b2, c1, c2);\n  const f2 = -determinant2x2(a1, a2, c1, c2);\n  const f3 = +determinant2x2(a1, a2, b1, b2);\n\n  // Divide by the determinant\n  const det = a1 * d1 + b1 * d2 + c1 * d3;\n\n  outI_3x3[0][0] = d1 / det;\n  outI_3x3[1][0] = d2 / det;\n  outI_3x3[2][0] = d3 / det;\n\n  outI_3x3[0][1] = e1 / det;\n  outI_3x3[1][1] = e2 / det;\n  outI_3x3[2][1] = e3 / det;\n\n  outI_3x3[0][2] = f1 / det;\n  outI_3x3[1][2] = f2 / det;\n  outI_3x3[2][2] = f3 / det;\n}\n\nexport function identity3x3(mat_3x3) {\n  for (let i = 0; i < 3; i++) {\n    mat_3x3[i][0] = mat_3x3[i][1] = mat_3x3[i][2] = 0;\n    mat_3x3[i][i] = 1;\n  }\n}\n\nexport function determinant3x3(mat_3x3) {\n  return (\n    mat_3x3[0][0] * mat_3x3[1][1] * mat_3x3[2][2] +\n    mat_3x3[1][0] * mat_3x3[2][1] * mat_3x3[0][2] +\n    mat_3x3[2][0] * mat_3x3[0][1] * mat_3x3[1][2] -\n    mat_3x3[0][0] * mat_3x3[2][1] * mat_3x3[1][2] -\n    mat_3x3[1][0] * mat_3x3[0][1] * mat_3x3[2][2] -\n    mat_3x3[2][0] * mat_3x3[1][1] * mat_3x3[0][2]\n  );\n}\n\nexport function quaternionToMatrix3x3(quat_4, mat_3x3) {\n  const ww = quat_4[0] * quat_4[0];\n  const wx = quat_4[0] * quat_4[1];\n  const wy = quat_4[0] * quat_4[2];\n  const wz = quat_4[0] * quat_4[3];\n\n  const xx = quat_4[1] * quat_4[1];\n  const yy = quat_4[2] * quat_4[2];\n  const zz = quat_4[3] * quat_4[3];\n\n  const xy = quat_4[1] * quat_4[2];\n  const xz = quat_4[1] * quat_4[3];\n  const yz = quat_4[2] * quat_4[3];\n\n  const rr = xx + yy + zz;\n  // normalization factor, just in case quaternion was not normalized\n  let f = 1 / (ww + rr);\n  const s = (ww - rr) * f;\n  f *= 2;\n\n  mat_3x3[0][0] = xx * f + s;\n  mat_3x3[1][0] = (xy + wz) * f;\n  mat_3x3[2][0] = (xz - wy) * f;\n\n  mat_3x3[0][1] = (xy - wz) * f;\n  mat_3x3[1][1] = yy * f + s;\n  mat_3x3[2][1] = (yz + wx) * f;\n\n  mat_3x3[0][2] = (xz + wy) * f;\n  mat_3x3[1][2] = (yz - wx) * f;\n  mat_3x3[2][2] = zz * f + s;\n}\n\nexport function areMatricesEqual(matA, matB) {\n  if (!matA.length === matB.length) {\n    return false;\n  }\n\n  function isEqual(element, index) {\n    return element === matB[index];\n  }\n  return matA.every(isEqual);\n}\n\nexport function jacobiN(a, n, w, v) {\n  let i;\n  let j;\n  let k;\n  let iq;\n  let ip;\n  let numPos;\n  let tresh;\n  let theta;\n  let t;\n  let tau;\n  let sm;\n  let s;\n  let h;\n  let g;\n  let c;\n  let tmp;\n  const b = createArray(n);\n  const z = createArray(n);\n\n  const vtkROTATE = (aa, ii, jj, kk, ll) => {\n    g = aa[ii][jj];\n    h = aa[kk][ll];\n    aa[ii][jj] = g - s * (h + g * tau);\n    aa[kk][ll] = h + s * (g - h * tau);\n  };\n\n  // initialize\n  for (ip = 0; ip < n; ip++) {\n    for (iq = 0; iq < n; iq++) {\n      v[ip][iq] = 0.0;\n    }\n    v[ip][ip] = 1.0;\n  }\n  for (ip = 0; ip < n; ip++) {\n    b[ip] = w[ip] = a[ip][ip];\n    z[ip] = 0.0;\n  }\n\n  // begin rotation sequence\n  for (i = 0; i < VTK_MAX_ROTATIONS; i++) {\n    sm = 0.0;\n    for (ip = 0; ip < n - 1; ip++) {\n      for (iq = ip + 1; iq < n; iq++) {\n        sm += Math.abs(a[ip][iq]);\n      }\n    }\n    if (sm === 0.0) {\n      break;\n    }\n\n    // first 3 sweeps\n    if (i < 3) {\n      tresh = (0.2 * sm) / (n * n);\n    } else {\n      tresh = 0.0;\n    }\n\n    for (ip = 0; ip < n - 1; ip++) {\n      for (iq = ip + 1; iq < n; iq++) {\n        g = 100.0 * Math.abs(a[ip][iq]);\n\n        // after 4 sweeps\n        if (\n          i > 3 &&\n          Math.abs(w[ip]) + g === Math.abs(w[ip]) &&\n          Math.abs(w[iq]) + g === Math.abs(w[iq])\n        ) {\n          a[ip][iq] = 0.0;\n        } else if (Math.abs(a[ip][iq]) > tresh) {\n          h = w[iq] - w[ip];\n          if (Math.abs(h) + g === Math.abs(h)) {\n            t = a[ip][iq] / h;\n          } else {\n            theta = (0.5 * h) / a[ip][iq];\n            t = 1.0 / (Math.abs(theta) + Math.sqrt(1.0 + theta * theta));\n            if (theta < 0.0) {\n              t = -t;\n            }\n          }\n          c = 1.0 / Math.sqrt(1 + t * t);\n          s = t * c;\n          tau = s / (1.0 + c);\n          h = t * a[ip][iq];\n          z[ip] -= h;\n          z[iq] += h;\n          w[ip] -= h;\n          w[iq] += h;\n          a[ip][iq] = 0.0;\n\n          // ip already shifted left by 1 unit\n          for (j = 0; j <= ip - 1; j++) {\n            vtkROTATE(a, j, ip, j, iq);\n          }\n          // ip and iq already shifted left by 1 unit\n          for (j = ip + 1; j <= iq - 1; j++) {\n            vtkROTATE(a, ip, j, j, iq);\n          }\n          // iq already shifted left by 1 unit\n          for (j = iq + 1; j < n; j++) {\n            vtkROTATE(a, ip, j, iq, j);\n          }\n          for (j = 0; j < n; j++) {\n            vtkROTATE(v, j, ip, j, iq);\n          }\n        }\n      }\n    }\n\n    for (ip = 0; ip < n; ip++) {\n      b[ip] += z[ip];\n      w[ip] = b[ip];\n      z[ip] = 0.0;\n    }\n  }\n\n  // this is NEVER called\n  if (i >= VTK_MAX_ROTATIONS) {\n    vtkWarningMacro('vtkMath::Jacobi: Error extracting eigenfunctions');\n    return 0;\n  }\n\n  // sort eigenfunctions: these changes do not affect accuracy\n  for (j = 0; j < n - 1; j++) {\n    // boundary incorrect\n    k = j;\n    tmp = w[k];\n    for (i = j + 1; i < n; i++) {\n      // boundary incorrect, shifted already\n      if (w[i] >= tmp) {\n        // why exchange if same?\n        k = i;\n        tmp = w[k];\n      }\n    }\n    if (k !== j) {\n      w[k] = w[j];\n      w[j] = tmp;\n      for (i = 0; i < n; i++) {\n        tmp = v[i][j];\n        v[i][j] = v[i][k];\n        v[i][k] = tmp;\n      }\n    }\n  }\n  // ensure eigenvector consistency (i.e., Jacobi can compute vectors that\n  // are negative of one another (.707,.707,0) and (-.707,-.707,0). This can\n  // reek havoc in hyperstreamline/other stuff. We will select the most\n  // positive eigenvector.\n  const ceil_half_n = (n >> 1) + (n & 1);\n  for (j = 0; j < n; j++) {\n    for (numPos = 0, i = 0; i < n; i++) {\n      if (v[i][j] >= 0.0) {\n        numPos++;\n      }\n    }\n    //    if ( numPos < ceil(double(n)/double(2.0)) )\n    if (numPos < ceil_half_n) {\n      for (i = 0; i < n; i++) {\n        v[i][j] *= -1.0;\n      }\n    }\n  }\n  return 1;\n}\n\nexport function matrix3x3ToQuaternion(mat_3x3, quat_4) {\n  const tmp = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n\n  // on-diagonal elements\n  tmp[0][0] = mat_3x3[0][0] + mat_3x3[1][1] + mat_3x3[2][2];\n  tmp[1][1] = mat_3x3[0][0] - mat_3x3[1][1] - mat_3x3[2][2];\n  tmp[2][2] = -mat_3x3[0][0] + mat_3x3[1][1] - mat_3x3[2][2];\n  tmp[3][3] = -mat_3x3[0][0] - mat_3x3[1][1] + mat_3x3[2][2];\n\n  // off-diagonal elements\n  tmp[0][1] = tmp[1][0] = mat_3x3[2][1] - mat_3x3[1][2];\n  tmp[0][2] = tmp[2][0] = mat_3x3[0][2] - mat_3x3[2][0];\n  tmp[0][3] = tmp[3][0] = mat_3x3[1][0] - mat_3x3[0][1];\n\n  tmp[1][2] = tmp[2][1] = mat_3x3[1][0] + mat_3x3[0][1];\n  tmp[1][3] = tmp[3][1] = mat_3x3[0][2] + mat_3x3[2][0];\n  tmp[2][3] = tmp[3][2] = mat_3x3[2][1] + mat_3x3[1][2];\n\n  const eigenvectors = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n  const eigenvalues = [0, 0, 0, 0];\n\n  // convert into format that JacobiN can use,\n  // then use Jacobi to find eigenvalues and eigenvectors\n  const NTemp = [0, 0, 0, 0];\n  const eigenvectorsTemp = [0, 0, 0, 0];\n  for (let i = 0; i < 4; i++) {\n    NTemp[i] = tmp[i];\n    eigenvectorsTemp[i] = eigenvectors[i];\n  }\n  jacobiN(NTemp, 4, eigenvalues, eigenvectorsTemp);\n\n  // the first eigenvector is the one we want\n  quat_4[0] = eigenvectors[0][0];\n  quat_4[1] = eigenvectors[1][0];\n  quat_4[2] = eigenvectors[2][0];\n  quat_4[3] = eigenvectors[3][0];\n}\n\nexport function multiplyQuaternion(quat_1, quat_2, quat_out) {\n  const ww = quat_1[0] * quat_2[0];\n  const wx = quat_1[0] * quat_2[1];\n  const wy = quat_1[0] * quat_2[2];\n  const wz = quat_1[0] * quat_2[3];\n\n  const xw = quat_1[1] * quat_2[0];\n  const xx = quat_1[1] * quat_2[1];\n  const xy = quat_1[1] * quat_2[2];\n  const xz = quat_1[1] * quat_2[3];\n\n  const yw = quat_1[2] * quat_2[0];\n  const yx = quat_1[2] * quat_2[1];\n  const yy = quat_1[2] * quat_2[2];\n  const yz = quat_1[2] * quat_2[3];\n\n  const zw = quat_1[3] * quat_2[0];\n  const zx = quat_1[3] * quat_2[1];\n  const zy = quat_1[3] * quat_2[2];\n  const zz = quat_1[3] * quat_2[3];\n\n  quat_out[0] = ww - xx - yy - zz;\n  quat_out[1] = wx + xw + yz - zy;\n  quat_out[2] = wy - xz + yw + zx;\n  quat_out[3] = wz + xy - yx + zw;\n}\n\nexport function orthogonalize3x3(a_3x3, out_3x3) {\n  // copy the matrix\n  for (let i = 0; i < 3; i++) {\n    out_3x3[0][i] = a_3x3[0][i];\n    out_3x3[1][i] = a_3x3[1][i];\n    out_3x3[2][i] = a_3x3[2][i];\n  }\n\n  // Pivot the matrix to improve accuracy\n  const scale = createArray(3);\n  const index = createArray(3);\n  let largest;\n\n  // Loop over rows to get implicit scaling information\n  for (let i = 0; i < 3; i++) {\n    const x1 = Math.abs(out_3x3[i][0]);\n    const x2 = Math.abs(out_3x3[i][1]);\n    const x3 = Math.abs(out_3x3[i][2]);\n    largest = x2 > x1 ? x2 : x1;\n    largest = x3 > largest ? x3 : largest;\n    scale[i] = 1;\n    if (largest !== 0) {\n      scale[i] /= largest;\n    }\n  }\n\n  // first column\n  const x1 = Math.abs(out_3x3[0][0]) * scale[0];\n  const x2 = Math.abs(out_3x3[1][0]) * scale[1];\n  const x3 = Math.abs(out_3x3[2][0]) * scale[2];\n  index[0] = 0;\n  largest = x1;\n  if (x2 >= largest) {\n    largest = x2;\n    index[0] = 1;\n  }\n  if (x3 >= largest) {\n    index[0] = 2;\n  }\n  if (index[0] !== 0) {\n    vtkSwapVectors3(out_3x3[index[0]], out_3x3[0]);\n    scale[index[0]] = scale[0];\n  }\n\n  // second column\n  const y2 = Math.abs(out_3x3[1][1]) * scale[1];\n  const y3 = Math.abs(out_3x3[2][1]) * scale[2];\n  index[1] = 1;\n  largest = y2;\n  if (y3 >= largest) {\n    index[1] = 2;\n    vtkSwapVectors3(out_3x3[2], out_3x3[1]);\n  }\n\n  // third column\n  index[2] = 2;\n\n  // A quaternion can only describe a pure rotation, not\n  // a rotation with a flip, therefore the flip must be\n  // removed before the matrix is converted to a quaternion.\n  let flip = 0;\n  if (determinant3x3(out_3x3) < 0) {\n    flip = 1;\n    for (let i = 0; i < 3; i++) {\n      out_3x3[0][i] = -out_3x3[0][i];\n      out_3x3[1][i] = -out_3x3[1][i];\n      out_3x3[2][i] = -out_3x3[2][i];\n    }\n  }\n\n  // Do orthogonalization using a quaternion intermediate\n  // (this, essentially, does the orthogonalization via\n  // diagonalization of an appropriately constructed symmetric\n  // 4x4 matrix rather than by doing SVD of the 3x3 matrix)\n  const quat = createArray(4);\n  matrix3x3ToQuaternion(out_3x3, quat);\n  quaternionToMatrix3x3(quat, out_3x3);\n\n  // Put the flip back into the orthogonalized matrix.\n  if (flip) {\n    for (let i = 0; i < 3; i++) {\n      out_3x3[0][i] = -out_3x3[0][i];\n      out_3x3[1][i] = -out_3x3[1][i];\n      out_3x3[2][i] = -out_3x3[2][i];\n    }\n  }\n\n  // Undo the pivoting\n  if (index[1] !== 1) {\n    vtkSwapVectors3(out_3x3[index[1]], out_3x3[1]);\n  }\n  if (index[0] !== 0) {\n    vtkSwapVectors3(out_3x3[index[0]], out_3x3[0]);\n  }\n}\n\nexport function diagonalize3x3(a_3x3, w_3, v_3x3) {\n  let i;\n  let j;\n  let k;\n  let maxI;\n  let tmp;\n  let maxVal;\n\n  // do the matrix[3][3] to **matrix conversion for Jacobi\n  const C = [createArray(3), createArray(3), createArray(3)];\n  const ATemp = createArray(3);\n  const VTemp = createArray(3);\n  for (i = 0; i < 3; i++) {\n    C[i][0] = a_3x3[i][0];\n    C[i][1] = a_3x3[i][1];\n    C[i][2] = a_3x3[i][2];\n    ATemp[i] = C[i];\n    VTemp[i] = v_3x3[i];\n  }\n\n  // diagonalize using Jacobi\n  jacobiN(ATemp, 3, w_3, VTemp);\n\n  // if all the eigenvalues are the same, return identity matrix\n  if (w_3[0] === w_3[1] && w_3[0] === w_3[2]) {\n    identity3x3(v_3x3);\n    return;\n  }\n\n  // transpose temporarily, it makes it easier to sort the eigenvectors\n  transpose3x3(v_3x3, v_3x3);\n\n  // if two eigenvalues are the same, re-orthogonalize to optimally line\n  // up the eigenvectors with the x, y, and z axes\n  for (i = 0; i < 3; i++) {\n    // two eigenvalues are the same\n    if (w_3[(i + 1) % 3] === w_3[(i + 2) % 3]) {\n      // find maximum element of the independent eigenvector\n      maxVal = Math.abs(v_3x3[i][0]);\n      maxI = 0;\n      for (j = 1; j < 3; j++) {\n        if (maxVal < (tmp = Math.abs(v_3x3[i][j]))) {\n          maxVal = tmp;\n          maxI = j;\n        }\n      }\n      // swap the eigenvector into its proper position\n      if (maxI !== i) {\n        tmp = w_3[maxI];\n        w_3[maxI] = w_3[i];\n        w_3[i] = tmp;\n        vtkSwapVectors3(v_3x3[i], v_3x3[maxI]);\n      }\n      // maximum element of eigenvector should be positive\n      if (v_3x3[maxI][maxI] < 0) {\n        v_3x3[maxI][0] = -v_3x3[maxI][0];\n        v_3x3[maxI][1] = -v_3x3[maxI][1];\n        v_3x3[maxI][2] = -v_3x3[maxI][2];\n      }\n\n      // re-orthogonalize the other two eigenvectors\n      j = (maxI + 1) % 3;\n      k = (maxI + 2) % 3;\n\n      v_3x3[j][0] = 0.0;\n      v_3x3[j][1] = 0.0;\n      v_3x3[j][2] = 0.0;\n      v_3x3[j][j] = 1.0;\n      cross(v_3x3[maxI], v_3x3[j], v_3x3[k]);\n      normalize(v_3x3[k]);\n      cross(v_3x3[k], v_3x3[maxI], v_3x3[j]);\n\n      // transpose vectors back to columns\n      transpose3x3(v_3x3, v_3x3);\n      return;\n    }\n  }\n\n  // the three eigenvalues are different, just sort the eigenvectors\n  // to align them with the x, y, and z axes\n\n  // find the vector with the largest x element, make that vector\n  // the first vector\n  maxVal = Math.abs(v_3x3[0][0]);\n  maxI = 0;\n  for (i = 1; i < 3; i++) {\n    if (maxVal < (tmp = Math.abs(v_3x3[i][0]))) {\n      maxVal = tmp;\n      maxI = i;\n    }\n  }\n  // swap eigenvalue and eigenvector\n  if (maxI !== 0) {\n    tmp = w_3[maxI];\n    w_3[maxI] = w_3[0];\n    w_3[0] = tmp;\n    vtkSwapVectors3(v_3x3[maxI], v_3x3[0]);\n  }\n  // do the same for the y element\n  if (Math.abs(v_3x3[1][1]) < Math.abs(v_3x3[2][1])) {\n    tmp = w_3[2];\n    w_3[2] = w_3[1];\n    w_3[1] = tmp;\n    vtkSwapVectors3(v_3x3[2], v_3x3[1]);\n  }\n\n  // ensure that the sign of the eigenvectors is correct\n  for (i = 0; i < 2; i++) {\n    if (v_3x3[i][i] < 0) {\n      v_3x3[i][0] = -v_3x3[i][0];\n      v_3x3[i][1] = -v_3x3[i][1];\n      v_3x3[i][2] = -v_3x3[i][2];\n    }\n  }\n  // set sign of final eigenvector to ensure that determinant is positive\n  if (determinant3x3(v_3x3) < 0) {\n    v_3x3[2][0] = -v_3x3[2][0];\n    v_3x3[2][1] = -v_3x3[2][1];\n    v_3x3[2][2] = -v_3x3[2][2];\n  }\n\n  // transpose the eigenvectors back again\n  transpose3x3(v_3x3, v_3x3);\n}\n\nexport function singularValueDecomposition3x3(a_3x3, u_3x3, w_3, vT_3x3) {\n  let i;\n  const B = [createArray(3), createArray(3), createArray(3)];\n\n  // copy so that A can be used for U or VT without risk\n  for (i = 0; i < 3; i++) {\n    B[0][i] = a_3x3[0][i];\n    B[1][i] = a_3x3[1][i];\n    B[2][i] = a_3x3[2][i];\n  }\n\n  // temporarily flip if determinant is negative\n  const d = determinant3x3(B);\n  if (d < 0) {\n    for (i = 0; i < 3; i++) {\n      B[0][i] = -B[0][i];\n      B[1][i] = -B[1][i];\n      B[2][i] = -B[2][i];\n    }\n  }\n\n  // orthogonalize, diagonalize, etc.\n  orthogonalize3x3(B, u_3x3);\n  transpose3x3(B, B);\n  multiply3x3_mat3(B, u_3x3, vT_3x3);\n  diagonalize3x3(vT_3x3, w_3, vT_3x3);\n  multiply3x3_mat3(u_3x3, vT_3x3, u_3x3);\n  transpose3x3(vT_3x3, vT_3x3);\n\n  // re-create the flip\n  if (d < 0) {\n    w_3[0] = -w_3[0];\n    w_3[1] = -w_3[1];\n    w_3[2] = -w_3[2];\n  }\n}\n\nexport function luFactorLinearSystem(A, index, size) {\n  let i;\n  let j;\n  let k;\n  let largest;\n  let maxI = 0;\n  let sum;\n  let temp1;\n  let temp2;\n  const scale = createArray(size);\n\n  //\n  // Loop over rows to get implicit scaling information\n  //\n  for (i = 0; i < size; i++) {\n    for (largest = 0.0, j = 0; j < size; j++) {\n      if ((temp2 = Math.abs(A[i][j])) > largest) {\n        largest = temp2;\n      }\n    }\n\n    if (largest === 0.0) {\n      vtkWarningMacro('Unable to factor linear system');\n      return 0;\n    }\n    scale[i] = 1.0 / largest;\n  }\n  //\n  // Loop over all columns using Crout's method\n  //\n  for (j = 0; j < size; j++) {\n    for (i = 0; i < j; i++) {\n      sum = A[i][j];\n      for (k = 0; k < i; k++) {\n        sum -= A[i][k] * A[k][j];\n      }\n      A[i][j] = sum;\n    }\n    //\n    // Begin search for largest pivot element\n    //\n    for (largest = 0.0, i = j; i < size; i++) {\n      sum = A[i][j];\n      for (k = 0; k < j; k++) {\n        sum -= A[i][k] * A[k][j];\n      }\n      A[i][j] = sum;\n\n      if ((temp1 = scale[i] * Math.abs(sum)) >= largest) {\n        largest = temp1;\n        maxI = i;\n      }\n    }\n    //\n    // Check for row interchange\n    //\n    if (j !== maxI) {\n      for (k = 0; k < size; k++) {\n        temp1 = A[maxI][k];\n        A[maxI][k] = A[j][k];\n        A[j][k] = temp1;\n      }\n      scale[maxI] = scale[j];\n    }\n    //\n    // Divide by pivot element and perform elimination\n    //\n    index[j] = maxI;\n\n    if (Math.abs(A[j][j]) <= VTK_SMALL_NUMBER) {\n      vtkWarningMacro('Unable to factor linear system');\n      return 0;\n    }\n\n    if (j !== size - 1) {\n      temp1 = 1.0 / A[j][j];\n      for (i = j + 1; i < size; i++) {\n        A[i][j] *= temp1;\n      }\n    }\n  }\n  return 1;\n}\n\nexport function luSolveLinearSystem(A, index, x, size) {\n  let i;\n  let j;\n  let ii;\n  let idx;\n  let sum;\n  //\n  // Proceed with forward and backsubstitution for L and U\n  // matrices.  First, forward substitution.\n  //\n  for (ii = -1, i = 0; i < size; i++) {\n    idx = index[i];\n    sum = x[idx];\n    x[idx] = x[i];\n\n    if (ii >= 0) {\n      for (j = ii; j <= i - 1; j++) {\n        sum -= A[i][j] * x[j];\n      }\n    } else if (sum !== 0.0) {\n      ii = i;\n    }\n\n    x[i] = sum;\n  }\n  //\n  // Now, back substitution\n  //\n  for (i = size - 1; i >= 0; i--) {\n    sum = x[i];\n    for (j = i + 1; j < size; j++) {\n      sum -= A[i][j] * x[j];\n    }\n    x[i] = sum / A[i][i];\n  }\n}\n\nexport function solveLinearSystem(A, x, size) {\n  // if we solving something simple, just solve it\n  if (size === 2) {\n    const y = createArray(2);\n    const det = determinant2x2(A[0][0], A[0][1], A[1][0], A[1][1]);\n\n    if (det === 0.0) {\n      // Unable to solve linear system\n      return 0;\n    }\n\n    y[0] = (A[1][1] * x[0] - A[0][1] * x[1]) / det;\n    y[1] = (-(A[1][0] * x[0]) + A[0][0] * x[1]) / det;\n\n    x[0] = y[0];\n    x[1] = y[1];\n    return 1;\n  }\n\n  if (size === 1) {\n    if (A[0][0] === 0.0) {\n      // Unable to solve linear system\n      return 0;\n    }\n\n    x[0] /= A[0][0];\n    return 1;\n  }\n\n  //\n  // System of equations is not trivial, use Crout's method\n  //\n\n  // Check on allocation of working vectors\n  const index = createArray(size);\n\n  // Factor and solve matrix\n  if (luFactorLinearSystem(A, index, size) === 0) {\n    return 0;\n  }\n  luSolveLinearSystem(A, index, x, size);\n\n  return 1;\n}\n\nexport function invertMatrix(A, AI, size, index = null, column = null) {\n  const tmp1Size = index || createArray(size);\n  const tmp2Size = column || createArray(size);\n\n  // Factor matrix; then begin solving for inverse one column at a time.\n  // Note: tmp1Size returned value is used later, tmp2Size is just working\n  // memory whose values are not used in LUSolveLinearSystem\n  if (luFactorLinearSystem(A, tmp1Size, size, tmp2Size) === 0) {\n    return 0;\n  }\n\n  for (let j = 0; j < size; j++) {\n    for (let i = 0; i < size; i++) {\n      tmp2Size[i] = 0.0;\n    }\n    tmp2Size[j] = 1.0;\n\n    luSolveLinearSystem(A, tmp1Size, tmp2Size, size);\n\n    for (let i = 0; i < size; i++) {\n      AI[i][j] = tmp2Size[i];\n    }\n  }\n\n  return 1;\n}\n\nexport function estimateMatrixCondition(A, size) {\n  let minValue = +Number.MAX_VALUE;\n  let maxValue = -Number.MAX_VALUE;\n\n  // find the maximum value\n  for (let i = 0; i < size; i++) {\n    for (let j = i; j < size; j++) {\n      if (Math.abs(A[i][j]) > max) {\n        maxValue = Math.abs(A[i][j]);\n      }\n    }\n  }\n\n  // find the minimum diagonal value\n  for (let i = 0; i < size; i++) {\n    if (Math.abs(A[i][i]) < min) {\n      minValue = Math.abs(A[i][i]);\n    }\n  }\n\n  if (minValue === 0.0) {\n    return Number.MAX_VALUE;\n  }\n  return maxValue / minValue;\n}\n\nexport function jacobi(a_3x3, w, v) {\n  return jacobiN(a_3x3, 3, w, v);\n}\n\nexport function solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, mt) {\n  // check dimensional consistency\n  if (numberOfSamples < xOrder) {\n    vtkWarningMacro('Insufficient number of samples. Underdetermined.');\n    return 0;\n  }\n\n  let i;\n  let j;\n  let k;\n\n  // set up intermediate variables\n  // Allocate matrix to hold X times transpose of X\n  const XXt = createArray(xOrder); // size x by x\n  // Allocate the array of eigenvalues and eigenvectors\n  const eigenvals = createArray(xOrder);\n  const eigenvecs = createArray(xOrder);\n\n  // Clear the upper triangular region (and btw, allocate the eigenvecs as well)\n  for (i = 0; i < xOrder; i++) {\n    eigenvecs[i] = createArray(xOrder);\n    XXt[i] = createArray(xOrder);\n    for (j = 0; j < xOrder; j++) {\n      XXt[i][j] = 0.0;\n    }\n  }\n\n  // Calculate XXt upper half only, due to symmetry\n  for (k = 0; k < numberOfSamples; k++) {\n    for (i = 0; i < xOrder; i++) {\n      for (j = i; j < xOrder; j++) {\n        XXt[i][j] += xt[k][i] * xt[k][j];\n      }\n    }\n  }\n\n  // now fill in the lower half of the XXt matrix\n  for (i = 0; i < xOrder; i++) {\n    for (j = 0; j < i; j++) {\n      XXt[i][j] = XXt[j][i];\n    }\n  }\n\n  // Compute the eigenvectors and eigenvalues\n  jacobiN(XXt, xOrder, eigenvals, eigenvecs);\n\n  // Smallest eigenval is at the end of the list (xOrder-1), and solution is\n  // corresponding eigenvec.\n  for (i = 0; i < xOrder; i++) {\n    mt[i][0] = eigenvecs[i][xOrder - 1];\n  }\n\n  return 1;\n}\n\nexport function solveLeastSquares(\n  numberOfSamples,\n  xt,\n  xOrder,\n  yt,\n  yOrder,\n  mt,\n  checkHomogeneous = true\n) {\n  // check dimensional consistency\n  if (numberOfSamples < xOrder || numberOfSamples < yOrder) {\n    vtkWarningMacro('Insufficient number of samples. Underdetermined.');\n    return 0;\n  }\n\n  const homogenFlags = createArray(yOrder);\n  let allHomogeneous = 1;\n  let hmt;\n  let homogRC = 0;\n  let i;\n  let j;\n  let k;\n  let someHomogeneous = 0;\n\n  // Ok, first init some flags check and see if all the systems are homogeneous\n  if (checkHomogeneous) {\n    // If Y' is zero, it's a homogeneous system and can't be solved via\n    // the pseudoinverse method. Detect this case, warn the user, and\n    // invoke SolveHomogeneousLeastSquares instead. Note that it doesn't\n    // really make much sense for yOrder to be greater than one in this case,\n    // since that's just yOrder occurrences of a 0 vector on the RHS, but\n    // we allow it anyway. N\n\n    // Initialize homogeneous flags on a per-right-hand-side basis\n    for (j = 0; j < yOrder; j++) {\n      homogenFlags[j] = 1;\n    }\n    for (i = 0; i < numberOfSamples; i++) {\n      for (j = 0; j < yOrder; j++) {\n        if (Math.abs(yt[i][j]) > VTK_SMALL_NUMBER) {\n          allHomogeneous = 0;\n          homogenFlags[j] = 0;\n        }\n      }\n    }\n\n    // If we've got one system, and it's homogeneous, do it and bail out quickly.\n    if (allHomogeneous && yOrder === 1) {\n      vtkWarningMacro(\n        'Detected homogeneous system (Y=0), calling SolveHomogeneousLeastSquares()'\n      );\n      return solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, mt);\n    }\n\n    // Ok, we've got more than one system of equations.\n    // Figure out if we need to calculate the homogeneous equation solution for\n    // any of them.\n    if (allHomogeneous) {\n      someHomogeneous = 1;\n    } else {\n      for (j = 0; j < yOrder; j++) {\n        if (homogenFlags[j]) {\n          someHomogeneous = 1;\n        }\n      }\n    }\n  }\n\n  // If necessary, solve the homogeneous problem\n  if (someHomogeneous) {\n    // hmt is the homogeneous equation version of mt, the general solution.\n    hmt = createArray(xOrder);\n    for (j = 0; j < xOrder; j++) {\n      // Only allocate 1 here, not yOrder, because here we're going to solve\n      // just the one homogeneous equation subset of the entire problem\n      hmt[j] = [0];\n    }\n\n    // Ok, solve the homogeneous problem\n    homogRC = solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, hmt);\n  }\n\n  // set up intermediate variables\n  const XXt = createArray(xOrder); // size x by x\n  const XXtI = createArray(xOrder); // size x by x\n  const XYt = createArray(xOrder); // size x by y\n  for (i = 0; i < xOrder; i++) {\n    XXt[i] = createArray(xOrder);\n    XXtI[i] = createArray(xOrder);\n\n    for (j = 0; j < xOrder; j++) {\n      XXt[i][j] = 0.0;\n      XXtI[i][j] = 0.0;\n    }\n\n    XYt[i] = createArray(yOrder);\n    for (j = 0; j < yOrder; j++) {\n      XYt[i][j] = 0.0;\n    }\n  }\n\n  // first find the pseudoinverse matrix\n  for (k = 0; k < numberOfSamples; k++) {\n    for (i = 0; i < xOrder; i++) {\n      // first calculate the XXt matrix, only do the upper half (symmetrical)\n      for (j = i; j < xOrder; j++) {\n        XXt[i][j] += xt[k][i] * xt[k][j];\n      }\n\n      // now calculate the XYt matrix\n      for (j = 0; j < yOrder; j++) {\n        XYt[i][j] += xt[k][i] * yt[k][j];\n      }\n    }\n  }\n\n  // now fill in the lower half of the XXt matrix\n  for (i = 0; i < xOrder; i++) {\n    for (j = 0; j < i; j++) {\n      XXt[i][j] = XXt[j][i];\n    }\n  }\n\n  const successFlag = invertMatrix(XXt, XXtI, xOrder);\n\n  // next get the inverse of XXt\n  if (successFlag) {\n    for (i = 0; i < xOrder; i++) {\n      for (j = 0; j < yOrder; j++) {\n        mt[i][j] = 0.0;\n        for (k = 0; k < xOrder; k++) {\n          mt[i][j] += XXtI[i][k] * XYt[k][j];\n        }\n      }\n    }\n  }\n\n  // Fix up any of the solutions that correspond to the homogeneous equation\n  // problem.\n  if (someHomogeneous) {\n    for (j = 0; j < yOrder; j++) {\n      if (homogenFlags[j]) {\n        // Fix this one\n        for (i = 0; i < xOrder; i++) {\n          mt[i][j] = hmt[i][0];\n        }\n      }\n    }\n  }\n\n  if (someHomogeneous) {\n    return homogRC && successFlag;\n  }\n\n  return successFlag;\n}\n\nexport function hex2float(hexStr, outFloatArray = [0, 0.5, 1]) {\n  switch (hexStr.length) {\n    case 3: // abc => #aabbcc\n      outFloatArray[0] = (parseInt(hexStr[0], 16) * 17) / 255;\n      outFloatArray[1] = (parseInt(hexStr[1], 16) * 17) / 255;\n      outFloatArray[2] = (parseInt(hexStr[2], 16) * 17) / 255;\n      return outFloatArray;\n    case 4: // #abc => #aabbcc\n      outFloatArray[0] = (parseInt(hexStr[1], 16) * 17) / 255;\n      outFloatArray[1] = (parseInt(hexStr[2], 16) * 17) / 255;\n      outFloatArray[2] = (parseInt(hexStr[3], 16) * 17) / 255;\n      return outFloatArray;\n    case 6: // ab01df => #ab01df\n      outFloatArray[0] = parseInt(hexStr.substr(0, 2), 16) / 255;\n      outFloatArray[1] = parseInt(hexStr.substr(2, 2), 16) / 255;\n      outFloatArray[2] = parseInt(hexStr.substr(4, 2), 16) / 255;\n      return outFloatArray;\n    case 7: // #ab01df\n      outFloatArray[0] = parseInt(hexStr.substr(1, 2), 16) / 255;\n      outFloatArray[1] = parseInt(hexStr.substr(3, 2), 16) / 255;\n      outFloatArray[2] = parseInt(hexStr.substr(5, 2), 16) / 255;\n      return outFloatArray;\n    case 9: // #ab01df00\n      outFloatArray[0] = parseInt(hexStr.substr(1, 2), 16) / 255;\n      outFloatArray[1] = parseInt(hexStr.substr(3, 2), 16) / 255;\n      outFloatArray[2] = parseInt(hexStr.substr(5, 2), 16) / 255;\n      outFloatArray[3] = parseInt(hexStr.substr(7, 2), 16) / 255;\n      return outFloatArray;\n    default:\n      return outFloatArray;\n  }\n}\n\nexport function rgb2hsv(rgb, hsv) {\n  let h;\n  let s;\n  const [r, g, b] = rgb;\n  const onethird = 1.0 / 3.0;\n  const onesixth = 1.0 / 6.0;\n  const twothird = 2.0 / 3.0;\n\n  let cmax = r;\n  let cmin = r;\n\n  if (g > cmax) {\n    cmax = g;\n  } else if (g < cmin) {\n    cmin = g;\n  }\n  if (b > cmax) {\n    cmax = b;\n  } else if (b < cmin) {\n    cmin = b;\n  }\n  const v = cmax;\n\n  if (v > 0.0) {\n    s = (cmax - cmin) / cmax;\n  } else {\n    s = 0.0;\n  }\n  if (s > 0) {\n    if (r === cmax) {\n      h = (onesixth * (g - b)) / (cmax - cmin);\n    } else if (g === cmax) {\n      h = onethird + (onesixth * (b - r)) / (cmax - cmin);\n    } else {\n      h = twothird + (onesixth * (r - g)) / (cmax - cmin);\n    }\n    if (h < 0.0) {\n      h += 1.0;\n    }\n  } else {\n    h = 0.0;\n  }\n\n  // Set the values back to the array\n  hsv[0] = h;\n  hsv[1] = s;\n  hsv[2] = v;\n}\n\nexport function hsv2rgb(hsv, rgb) {\n  const [h, s, v] = hsv;\n  const onethird = 1.0 / 3.0;\n  const onesixth = 1.0 / 6.0;\n  const twothird = 2.0 / 3.0;\n  const fivesixth = 5.0 / 6.0;\n  let r;\n  let g;\n  let b;\n\n  // compute RGB from HSV\n  if (h > onesixth && h <= onethird) {\n    // green/red\n    g = 1.0;\n    r = (onethird - h) / onesixth;\n    b = 0.0;\n  } else if (h > onethird && h <= 0.5) {\n    // green/blue\n    g = 1.0;\n    b = (h - onethird) / onesixth;\n    r = 0.0;\n  } else if (h > 0.5 && h <= twothird) {\n    // blue/green\n    b = 1.0;\n    g = (twothird - h) / onesixth;\n    r = 0.0;\n  } else if (h > twothird && h <= fivesixth) {\n    // blue/red\n    b = 1.0;\n    r = (h - twothird) / onesixth;\n    g = 0.0;\n  } else if (h > fivesixth && h <= 1.0) {\n    // red/blue\n    r = 1.0;\n    b = (1.0 - h) / onesixth;\n    g = 0.0;\n  } else {\n    // red/green\n    r = 1.0;\n    g = h / onesixth;\n    b = 0.0;\n  }\n\n  // add Saturation to the equation.\n  r = s * r + (1.0 - s);\n  g = s * g + (1.0 - s);\n  b = s * b + (1.0 - s);\n\n  r *= v;\n  g *= v;\n  b *= v;\n\n  // Assign back to the array\n  rgb[0] = r;\n  rgb[1] = g;\n  rgb[2] = b;\n}\n\nexport function lab2xyz(lab, xyz) {\n  // LAB to XYZ\n  const [L, a, b] = lab;\n  let var_Y = (L + 16) / 116;\n  let var_X = a / 500 + var_Y;\n  let var_Z = var_Y - b / 200;\n\n  if (var_Y ** 3 > 0.008856) {\n    var_Y **= 3;\n  } else {\n    var_Y = (var_Y - 16.0 / 116.0) / 7.787;\n  }\n\n  if (var_X ** 3 > 0.008856) {\n    var_X **= 3;\n  } else {\n    var_X = (var_X - 16.0 / 116.0) / 7.787;\n  }\n\n  if (var_Z ** 3 > 0.008856) {\n    var_Z **= 3;\n  } else {\n    var_Z = (var_Z - 16.0 / 116.0) / 7.787;\n  }\n  const ref_X = 0.9505;\n  const ref_Y = 1.0;\n  const ref_Z = 1.089;\n  xyz[0] = ref_X * var_X; // ref_X = 0.9505  Observer= 2 deg Illuminant= D65\n  xyz[1] = ref_Y * var_Y; // ref_Y = 1.000\n  xyz[2] = ref_Z * var_Z; // ref_Z = 1.089\n}\n\nexport function xyz2lab(xyz, lab) {\n  const [x, y, z] = xyz;\n  const ref_X = 0.9505;\n  const ref_Y = 1.0;\n  const ref_Z = 1.089;\n  let var_X = x / ref_X; // ref_X = 0.9505  Observer= 2 deg, Illuminant= D65\n  let var_Y = y / ref_Y; // ref_Y = 1.000\n  let var_Z = z / ref_Z; // ref_Z = 1.089\n\n  if (var_X > 0.008856) var_X **= 1.0 / 3.0;\n  else var_X = 7.787 * var_X + 16.0 / 116.0;\n  if (var_Y > 0.008856) var_Y **= 1.0 / 3.0;\n  else var_Y = 7.787 * var_Y + 16.0 / 116.0;\n  if (var_Z > 0.008856) var_Z **= 1.0 / 3.0;\n  else var_Z = 7.787 * var_Z + 16.0 / 116.0;\n\n  lab[0] = 116 * var_Y - 16;\n  lab[1] = 500 * (var_X - var_Y);\n  lab[2] = 200 * (var_Y - var_Z);\n}\n\nexport function xyz2rgb(xyz, rgb) {\n  const [x, y, z] = xyz;\n  let r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  let g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  let b = x * 0.0557 + y * -0.204 + z * 1.057;\n\n  // The following performs a \"gamma correction\" specified by the sRGB color\n  // space.  sRGB is defined by a canonical definition of a display monitor and\n  // has been standardized by the International Electrotechnical Commission (IEC\n  // 61966-2-1).  The nonlinearity of the correction is designed to make the\n  // colors more perceptually uniform.  This color space has been adopted by\n  // several applications including Adobe Photoshop and Microsoft Windows color\n  // management.  OpenGL is agnostic on its RGB color space, but it is reasonable\n  // to assume it is close to this one.\n  if (r > 0.0031308) r = 1.055 * r ** (1 / 2.4) - 0.055;\n  else r *= 12.92;\n  if (g > 0.0031308) g = 1.055 * g ** (1 / 2.4) - 0.055;\n  else g *= 12.92;\n  if (b > 0.0031308) b = 1.055 * b ** (1 / 2.4) - 0.055;\n  else b *= 12.92;\n\n  // Clip colors. ideally we would do something that is perceptually closest\n  // (since we can see colors outside of the display gamut), but this seems to\n  // work well enough.\n  let maxVal = r;\n  if (maxVal < g) maxVal = g;\n  if (maxVal < b) maxVal = b;\n  if (maxVal > 1.0) {\n    r /= maxVal;\n    g /= maxVal;\n    b /= maxVal;\n  }\n  if (r < 0) r = 0;\n  if (g < 0) g = 0;\n  if (b < 0) b = 0;\n\n  // Push values back to array\n  rgb[0] = r;\n  rgb[1] = g;\n  rgb[2] = b;\n}\n\nexport function rgb2xyz(rgb, xyz) {\n  let [r, g, b] = rgb;\n  // The following performs a \"gamma correction\" specified by the sRGB color\n  // space.  sRGB is defined by a canonical definition of a display monitor and\n  // has been standardized by the International Electrotechnical Commission (IEC\n  // 61966-2-1).  The nonlinearity of the correction is designed to make the\n  // colors more perceptually uniform.  This color space has been adopted by\n  // several applications including Adobe Photoshop and Microsoft Windows color\n  // management.  OpenGL is agnostic on its RGB color space, but it is reasonable\n  // to assume it is close to this one.\n  if (r > 0.04045) r = ((r + 0.055) / 1.055) ** 2.4;\n  else r /= 12.92;\n  if (g > 0.04045) g = ((g + 0.055) / 1.055) ** 2.4;\n  else g /= 12.92;\n  if (b > 0.04045) b = ((b + 0.055) / 1.055) ** 2.4;\n  else b /= 12.92;\n\n  // Observer. = 2 deg, Illuminant = D65\n  xyz[0] = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  xyz[1] = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  xyz[2] = r * 0.0193 + g * 0.1192 + b * 0.9505;\n}\n\nexport function rgb2lab(rgb, lab) {\n  const xyz = [0, 0, 0];\n  rgb2xyz(rgb, xyz);\n  xyz2lab(xyz, lab);\n}\n\nexport function lab2rgb(lab, rgb) {\n  const xyz = [0, 0, 0];\n  lab2xyz(lab, xyz);\n  xyz2rgb(xyz, rgb);\n}\n\nexport function uninitializeBounds(bounds) {\n  bounds[0] = 1.0;\n  bounds[1] = -1.0;\n  bounds[2] = 1.0;\n  bounds[3] = -1.0;\n  bounds[4] = 1.0;\n  bounds[5] = -1.0;\n}\n\nexport function areBoundsInitialized(bounds) {\n  return !(bounds[1] - bounds[0] < 0.0);\n}\n\nexport function computeBoundsFromPoints(point1, point2, bounds) {\n  bounds[0] = Math.min(point1[0], point2[0]);\n  bounds[1] = Math.max(point1[0], point2[0]);\n  bounds[2] = Math.min(point1[1], point2[1]);\n  bounds[3] = Math.max(point1[1], point2[1]);\n  bounds[4] = Math.min(point1[2], point2[2]);\n  bounds[5] = Math.max(point1[2], point2[2]);\n}\n\nexport function clampValue(value, minValue, maxValue) {\n  if (value < minValue) {\n    return minValue;\n  }\n  if (value > maxValue) {\n    return maxValue;\n  }\n  return value;\n}\n\nexport function clampVector(vector, minVector, maxVector, out = []) {\n  out[0] = clampValue(vector[0], minVector[0], maxVector[0]);\n  out[1] = clampValue(vector[1], minVector[1], maxVector[1]);\n  out[2] = clampValue(vector[2], minVector[2], maxVector[2]);\n\n  return out;\n}\n\nexport function roundVector(vector, out = []) {\n  out[0] = Math.round(vector[0]);\n  out[1] = Math.round(vector[1]);\n  out[2] = Math.round(vector[2]);\n\n  return out;\n}\n\nexport function clampAndNormalizeValue(value, range) {\n  let result = 0;\n  if (range[0] !== range[1]) {\n    // clamp\n    if (value < range[0]) {\n      result = range[0];\n    } else if (value > range[1]) {\n      result = range[1];\n    } else {\n      result = value;\n    }\n    // normalize\n    result = (result - range[0]) / (range[1] - range[0]);\n  }\n\n  return result;\n}\n\nexport const getScalarTypeFittingRange = notImplemented(\n  'GetScalarTypeFittingRange'\n);\nexport const getAdjustedScalarRange = notImplemented('GetAdjustedScalarRange');\n\nexport function extentIsWithinOtherExtent(extent1, extent2) {\n  if (!extent1 || !extent2) {\n    return 0;\n  }\n\n  for (let i = 0; i < 6; i += 2) {\n    if (\n      extent1[i] < extent2[i] ||\n      extent1[i] > extent2[i + 1] ||\n      extent1[i + 1] < extent2[i] ||\n      extent1[i + 1] > extent2[i + 1]\n    ) {\n      return 0;\n    }\n  }\n\n  return 1;\n}\n\nexport function boundsIsWithinOtherBounds(bounds1_6, bounds2_6, delta_3) {\n  if (!bounds1_6 || !bounds2_6) {\n    return 0;\n  }\n  for (let i = 0; i < 6; i += 2) {\n    if (\n      bounds1_6[i] + delta_3[i / 2] < bounds2_6[i] ||\n      bounds1_6[i] - delta_3[i / 2] > bounds2_6[i + 1] ||\n      bounds1_6[i + 1] + delta_3[i / 2] < bounds2_6[i] ||\n      bounds1_6[i + 1] - delta_3[i / 2] > bounds2_6[i + 1]\n    ) {\n      return 0;\n    }\n  }\n  return 1;\n}\n\nexport function pointIsWithinBounds(point_3, bounds_6, delta_3) {\n  if (!point_3 || !bounds_6 || !delta_3) {\n    return 0;\n  }\n  for (let i = 0; i < 3; i++) {\n    if (\n      point_3[i] + delta_3[i] < bounds_6[2 * i] ||\n      point_3[i] - delta_3[i] > bounds_6[2 * i + 1]\n    ) {\n      return 0;\n    }\n  }\n  return 1;\n}\n\nexport function solve3PointCircle(p1, p2, p3, center) {\n  const v21 = createArray(3);\n  const v32 = createArray(3);\n  const v13 = createArray(3);\n  const v12 = createArray(3);\n  const v23 = createArray(3);\n  const v31 = createArray(3);\n\n  for (let i = 0; i < 3; ++i) {\n    v21[i] = p1[i] - p2[i];\n    v32[i] = p2[i] - p3[i];\n    v13[i] = p3[i] - p1[i];\n    v12[i] = -v21[i];\n    v23[i] = -v32[i];\n    v31[i] = -v13[i];\n  }\n\n  const norm12 = norm(v12);\n  const norm23 = norm(v23);\n  const norm13 = norm(v13);\n\n  const crossv21v32 = createArray(3);\n  cross(v21, v32, crossv21v32);\n  const normCross = norm(crossv21v32);\n\n  const radius = (norm12 * norm23 * norm13) / (2 * normCross);\n\n  const normCross22 = 2 * normCross * normCross;\n  const alpha = (norm23 * norm23 * dot(v21, v31)) / normCross22;\n  const beta = (norm13 * norm13 * dot(v12, v32)) / normCross22;\n  const gamma = (norm12 * norm12 * dot(v13, v23)) / normCross22;\n\n  for (let i = 0; i < 3; ++i) {\n    center[i] = alpha * p1[i] + beta * p2[i] + gamma * p3[i];\n  }\n  return radius;\n}\n\nexport const inf = Infinity;\nexport const negInf = -Infinity;\n\nexport const isInf = (value) => !Number.isFinite(value);\nexport const { isFinite, isNaN } = Number;\nexport const isNan = isNaN;\n\n// JavaScript - add-on ----------------------\n\nexport function createUninitializedBounds() {\n  return [].concat([\n    Number.MAX_VALUE,\n    -Number.MAX_VALUE, // X\n    Number.MAX_VALUE,\n    -Number.MAX_VALUE, // Y\n    Number.MAX_VALUE,\n    -Number.MAX_VALUE, // Z\n  ]);\n}\n\nexport function getMajorAxisIndex(vector) {\n  let maxValue = -1;\n  let axisIndex = -1;\n  for (let i = 0; i < vector.length; i++) {\n    const value = Math.abs(vector[i]);\n    if (value > maxValue) {\n      axisIndex = i;\n      maxValue = value;\n    }\n  }\n\n  return axisIndex;\n}\n\nexport function floatToHex2(value) {\n  const integer = Math.floor(value * 255);\n  if (integer > 15) {\n    return integer.toString(16);\n  }\n  return `0${integer.toString(16)}`;\n}\n\nexport function floatRGB2HexCode(rgbArray, prefix = '#') {\n  return `${prefix}${rgbArray.map(floatToHex2).join('')}`;\n}\n\nfunction floatToChar(f) {\n  return Math.round(f * 255);\n}\n\nexport function float2CssRGBA(rgbArray) {\n  if (rgbArray.length === 3) {\n    return `rgb(${rgbArray.map(floatToChar).join(', ')})`;\n  }\n  return `rgba(${floatToChar(rgbArray[0] || 0)}, ${floatToChar(\n    rgbArray[1] || 0\n  )}, ${floatToChar(rgbArray[2] || 0)}, ${rgbArray[3] || 0})`;\n}\n\n// ----------------------------------------------------------------------------\n// Only Static API\n// ----------------------------------------------------------------------------\n\nexport default {\n  Pi,\n  radiansFromDegrees,\n  degreesFromRadians,\n  round,\n  floor,\n  ceil,\n  ceilLog2,\n  min,\n  max,\n  arrayMin,\n  arrayMax,\n  arrayRange,\n  isPowerOfTwo,\n  nearestPowerOfTwo,\n  factorial,\n  binomial,\n  beginCombination,\n  nextCombination,\n  randomSeed,\n  getSeed,\n  random,\n  gaussian,\n  add,\n  subtract,\n  multiplyScalar,\n  multiplyScalar2D,\n  dot,\n  outer,\n  cross,\n  norm,\n  normalize,\n  perpendiculars,\n  projectVector,\n  projectVector2D,\n  distance2BetweenPoints,\n  angleBetweenVectors,\n  gaussianAmplitude,\n  gaussianWeight,\n  dot2D,\n  outer2D,\n  norm2D,\n  normalize2D,\n  determinant2x2,\n  LUFactor3x3,\n  LUSolve3x3,\n  linearSolve3x3,\n  multiply3x3_vect3,\n  multiply3x3_mat3,\n  multiplyMatrix,\n  transpose3x3,\n  invert3x3,\n  identity3x3,\n  determinant3x3,\n  quaternionToMatrix3x3,\n  areMatricesEqual,\n  matrix3x3ToQuaternion,\n  multiplyQuaternion,\n  orthogonalize3x3,\n  diagonalize3x3,\n  singularValueDecomposition3x3,\n  solveLinearSystem,\n  invertMatrix,\n  luFactorLinearSystem,\n  luSolveLinearSystem,\n  estimateMatrixCondition,\n  jacobi,\n  jacobiN,\n  solveHomogeneousLeastSquares,\n  solveLeastSquares,\n  hex2float,\n  rgb2hsv,\n  hsv2rgb,\n  lab2xyz,\n  xyz2lab,\n  xyz2rgb,\n  rgb2xyz,\n  rgb2lab,\n  lab2rgb,\n  uninitializeBounds,\n  areBoundsInitialized,\n  computeBoundsFromPoints,\n  clampValue,\n  clampVector,\n  clampAndNormalizeValue,\n  getScalarTypeFittingRange,\n  getAdjustedScalarRange,\n  extentIsWithinOtherExtent,\n  boundsIsWithinOtherBounds,\n  pointIsWithinBounds,\n  solve3PointCircle,\n  inf,\n  negInf,\n  isInf,\n  isNan: isNaN,\n  isNaN,\n  isFinite,\n\n  // JS add-on\n  createUninitializedBounds,\n  getMajorAxisIndex,\n  floatToHex2,\n  floatRGB2HexCode,\n  float2CssRGBA,\n};\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import Constants from 'vtk.js/Sources/Common/Core/DataArray/Constants';\nimport macro from 'vtk.js/Sources/macro';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\n\nconst { DefaultDataType } = Constants;\nconst TUPLE_HOLDER = [];\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction createRangeHelper() {\n  let min = Number.MAX_VALUE;\n  let max = -Number.MAX_VALUE;\n  let count = 0;\n  let sum = 0;\n\n  return {\n    add(value) {\n      if (min > value) {\n        min = value;\n      }\n      if (max < value) {\n        max = value;\n      }\n      count++;\n      sum += value;\n    },\n    get() {\n      return { min, max, count, sum, mean: sum / count };\n    },\n    getRange() {\n      return { min, max };\n    },\n  };\n}\n\nfunction computeRange(values, component = 0, numberOfComponents = 1) {\n  const helper = createRangeHelper();\n  const size = values.length;\n  let value = 0;\n\n  if (component < 0 && numberOfComponents > 1) {\n    // Compute magnitude\n    for (let i = 0; i < size; i += numberOfComponents) {\n      value = 0;\n      for (let j = 0; j < numberOfComponents; j++) {\n        value += values[i + j] * values[i + j];\n      }\n      value **= 0.5;\n      helper.add(value);\n    }\n    return helper.getRange();\n  }\n\n  const offset = component < 0 ? 0 : component;\n  for (let i = offset; i < size; i += numberOfComponents) {\n    helper.add(values[i]);\n  }\n\n  return helper.getRange();\n}\n\nfunction ensureRangeSize(rangeArray, size = 0) {\n  const ranges = rangeArray || [];\n  // Pad ranges with null value to get the\n  while (ranges.length <= size) {\n    ranges.push(null);\n  }\n  return ranges;\n}\n\nfunction getDataType(typedArray) {\n  // Expects toString() to return \"[object ...Array]\"\n  return Object.prototype.toString.call(typedArray).slice(8, -1);\n}\n\nfunction getMaxNorm(normArray) {\n  const numComps = normArray.getNumberOfComponents();\n  let maxNorm = 0.0;\n  for (let i = 0; i < normArray.getNumberOfTuples(); ++i) {\n    const norm = vtkMath.norm(normArray.getTuple(i), numComps);\n    if (norm > maxNorm) {\n      maxNorm = norm;\n    }\n  }\n  return maxNorm;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  computeRange,\n  createRangeHelper,\n  getDataType,\n  getMaxNorm,\n};\n\n// ----------------------------------------------------------------------------\n// vtkDataArray methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataArray(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkDataArray');\n\n  function dataChange() {\n    model.ranges = null;\n    publicAPI.modified();\n  }\n\n  publicAPI.getElementComponentSize = () => model.values.BYTES_PER_ELEMENT;\n\n  // Description:\n  // Return the data component at the location specified by tupleIdx and\n  // compIdx.\n  publicAPI.getComponent = (tupleIdx, compIdx = 0) =>\n    model.values[tupleIdx * model.numberOfComponents + compIdx];\n\n  // Description:\n  // Set the data component at the location specified by tupleIdx and compIdx\n  // to value.\n  // Note that i is less than NumberOfTuples and j is less than\n  //  NumberOfComponents. Make sure enough memory has been allocated\n  // (use SetNumberOfTuples() and SetNumberOfComponents()).\n  publicAPI.setComponent = (tupleIdx, compIdx, value) => {\n    if (value !== model.values[tupleIdx * model.numberOfComponents + compIdx]) {\n      model.values[tupleIdx * model.numberOfComponents + compIdx] = value;\n      dataChange();\n    }\n  };\n\n  publicAPI.getData = () => model.values;\n\n  publicAPI.getRange = (componentIndex = -1) => {\n    const rangeIdx =\n      componentIndex < 0 ? model.numberOfComponents : componentIndex;\n    let range = null;\n\n    if (!model.ranges) {\n      model.ranges = ensureRangeSize(model.ranges, model.numberOfComponents);\n    }\n    range = model.ranges[rangeIdx];\n\n    if (range) {\n      model.rangeTuple[0] = range.min;\n      model.rangeTuple[1] = range.max;\n      return model.rangeTuple;\n    }\n\n    // Need to compute ranges...\n    range = computeRange(\n      model.values,\n      componentIndex,\n      model.numberOfComponents\n    );\n    model.ranges[rangeIdx] = range;\n    model.rangeTuple[0] = range.min;\n    model.rangeTuple[1] = range.max;\n    return model.rangeTuple;\n  };\n\n  publicAPI.setRange = (rangeValue, componentIndex) => {\n    if (!model.ranges) {\n      model.ranges = ensureRangeSize(model.ranges, model.numberOfComponents);\n    }\n    const range = { min: rangeValue.min, max: rangeValue.max };\n\n    model.ranges[componentIndex] = range;\n    model.rangeTuple[0] = range.min;\n    model.rangeTuple[1] = range.max;\n\n    return model.rangeTuple;\n  };\n\n  publicAPI.setTuple = (idx, tuple) => {\n    const offset = idx * model.numberOfComponents;\n    for (let i = 0; i < model.numberOfComponents; i++) {\n      model.values[offset + i] = tuple[i];\n    }\n  };\n\n  publicAPI.getTuple = (idx, tupleToFill = TUPLE_HOLDER) => {\n    const numberOfComponents = model.numberOfComponents || 1;\n    if (tupleToFill.length !== numberOfComponents) {\n      tupleToFill.length = numberOfComponents;\n    }\n    const offset = idx * numberOfComponents;\n    // Check most common component sizes first\n    // to avoid doing a for loop if possible\n    if (numberOfComponents === 1) {\n      tupleToFill[0] = model.values[offset];\n    } else if (numberOfComponents === 2) {\n      tupleToFill[0] = model.values[offset];\n      tupleToFill[1] = model.values[offset + 1];\n    } else if (numberOfComponents === 3) {\n      tupleToFill[0] = model.values[offset];\n      tupleToFill[1] = model.values[offset + 1];\n      tupleToFill[2] = model.values[offset + 2];\n    } else if (numberOfComponents === 4) {\n      tupleToFill[0] = model.values[offset];\n      tupleToFill[1] = model.values[offset + 1];\n      tupleToFill[2] = model.values[offset + 2];\n      tupleToFill[3] = model.values[offset + 3];\n    } else {\n      for (let i = 0; i < numberOfComponents; i++) {\n        tupleToFill[i] = model.values[offset + i];\n      }\n    }\n    return tupleToFill;\n  };\n\n  publicAPI.getTupleLocation = (idx = 1) => idx * model.numberOfComponents;\n  publicAPI.getNumberOfComponents = () => model.numberOfComponents;\n  publicAPI.getNumberOfValues = () => model.values.length;\n  publicAPI.getNumberOfTuples = () =>\n    model.values.length / model.numberOfComponents;\n  publicAPI.getDataType = () => model.dataType;\n  /* eslint-disable no-use-before-define */\n  publicAPI.newClone = () =>\n    newInstance({\n      empty: true,\n      name: model.name,\n      dataType: model.dataType,\n      numberOfComponents: model.numberOfComponents,\n    });\n  /* eslint-enable no-use-before-define */\n\n  publicAPI.getName = () => {\n    if (!model.name) {\n      publicAPI.modified();\n      model.name = `vtkDataArray${publicAPI.getMTime()}`;\n    }\n    return model.name;\n  };\n\n  publicAPI.setData = (typedArray, numberOfComponents) => {\n    model.values = typedArray;\n    model.size = typedArray.length;\n    model.dataType = getDataType(typedArray);\n    if (numberOfComponents) {\n      model.numberOfComponents = numberOfComponents;\n    }\n    if (model.size % model.numberOfComponents !== 0) {\n      model.numberOfComponents = 1;\n    }\n    dataChange();\n  };\n\n  // Override serialization support\n  publicAPI.getState = () => {\n    const jsonArchive = Object.assign({}, model, {\n      vtkClass: publicAPI.getClassName(),\n    });\n\n    // Convert typed array to regular array\n    jsonArchive.values = Array.from(jsonArchive.values);\n    delete jsonArchive.buffer;\n\n    // Clean any empty data\n    Object.keys(jsonArchive).forEach((keyName) => {\n      if (!jsonArchive[keyName]) {\n        delete jsonArchive[keyName];\n      }\n    });\n\n    // Sort resulting object by key name\n    const sortedObj = {};\n    Object.keys(jsonArchive)\n      .sort()\n      .forEach((name) => {\n        sortedObj[name] = jsonArchive[name];\n      });\n\n    // Remove mtime\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n\n    return sortedObj;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  name: '',\n  numberOfComponents: 1,\n  size: 0,\n  dataType: DefaultDataType,\n  rangeTuple: [0, 0],\n  // values: null,\n  // ranges: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  if (!model.empty && !model.values && !model.size) {\n    throw new TypeError(\n      'Cannot create vtkDataArray object without: size > 0, values'\n    );\n  }\n\n  if (!model.values) {\n    model.values = new window[model.dataType](model.size);\n  } else if (Array.isArray(model.values)) {\n    model.values = window[model.dataType].from(model.values);\n  }\n\n  if (model.values) {\n    model.size = model.values.length;\n    model.dataType = getDataType(model.values);\n  }\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.set(publicAPI, model, ['name', 'numberOfComponents']);\n\n  // Object specific methods\n  vtkDataArray(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkDataArray');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, STATIC, Constants);\n","export const DataTypeByteSize = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8,\n};\n\nexport const VtkDataTypes = {\n  VOID: '', // not sure to know what that shoud be\n  CHAR: 'Int8Array',\n  SIGNED_CHAR: 'Int8Array',\n  UNSIGNED_CHAR: 'Uint8Array',\n  SHORT: 'Int16Array',\n  UNSIGNED_SHORT: 'Uint16Array',\n  INT: 'Int32Array',\n  UNSIGNED_INT: 'Uint32Array',\n  FLOAT: 'Float32Array',\n  DOUBLE: 'Float64Array',\n};\n\nexport const DefaultDataType = VtkDataTypes.FLOAT;\n\nexport default {\n  DefaultDataType,\n  DataTypeByteSize,\n  VtkDataTypes,\n};\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","const factoryMapping = {\n  vtkObject: () => null,\n};\n\nexport default function vtk(obj) {\n  if (obj === null || obj === undefined) {\n    return obj;\n  }\n  if (obj.isA) {\n    return obj;\n  }\n  if (!obj.vtkClass) {\n    if (global.console && global.console.error) {\n      global.console.error('Invalid VTK object');\n    }\n    return null;\n  }\n  const constructor = factoryMapping[obj.vtkClass];\n  if (!constructor) {\n    if (global.console && global.console.error) {\n      global.console.error(\n        `No vtk class found for Object of type ${obj.vtkClass}`\n      );\n    }\n    return null;\n  }\n\n  // Shallow copy object\n  const model = Object.assign({}, obj);\n\n  // Convert into vtkObject any nested key\n  Object.keys(model).forEach((keyName) => {\n    if (\n      model[keyName] &&\n      typeof model[keyName] === 'object' &&\n      model[keyName].vtkClass\n    ) {\n      model[keyName] = vtk(model[keyName]);\n    }\n  });\n\n  // Return the root\n  const newInst = constructor(model);\n  if (newInst && newInst.modified) {\n    newInst.modified();\n  }\n  return newInst;\n}\n\nfunction register(vtkClassName, constructor) {\n  factoryMapping[vtkClassName] = constructor;\n}\n\n// Nest register method under the vtk function\nvtk.register = register;\n","import macro from 'vtk.js/Sources/macro';\nimport vtkPlane from 'vtk.js/Sources/Common/DataModel/Plane';\n\nconst INIT_BOUNDS = [\n  Number.MAX_VALUE,\n  -Number.MAX_VALUE, // X\n  Number.MAX_VALUE,\n  -Number.MAX_VALUE, // Y\n  Number.MAX_VALUE,\n  -Number.MAX_VALUE, // Z\n];\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction isValid(bounds) {\n  return (\n    bounds[0] <= bounds[1] && bounds[2] <= bounds[3] && bounds[4] <= bounds[5]\n  );\n}\n\nfunction getCenter(bounds) {\n  return [\n    0.5 * (bounds[0] + bounds[1]),\n    0.5 * (bounds[2] + bounds[3]),\n    0.5 * (bounds[4] + bounds[5]),\n  ];\n}\n\nfunction getLength(bounds, index) {\n  return bounds[index * 2 + 1] - bounds[index * 2];\n}\n\nfunction getLengths(bounds) {\n  return [getLength(bounds, 0), getLength(bounds, 1), getLength(bounds, 2)];\n}\n\nfunction getXRange(bounds) {\n  return bounds.slice(0, 2);\n}\n\nfunction getYRange(bounds) {\n  return bounds.slice(2, 4);\n}\n\nfunction getZRange(bounds) {\n  return bounds.slice(4, 6);\n}\n\nfunction getMaxLength(bounds) {\n  const l = getLengths(bounds);\n  if (l[0] > l[1]) {\n    if (l[0] > l[2]) {\n      return l[0];\n    }\n    return l[2];\n  }\n\n  if (l[1] > l[2]) {\n    return l[1];\n  }\n\n  return l[2];\n}\n\nfunction getDiagonalLength(bounds) {\n  if (isValid(bounds)) {\n    const l = getLengths(bounds);\n    return Math.sqrt(l[0] * l[0] + l[1] * l[1] + l[2] * l[2]);\n  }\n  return null;\n}\n\nfunction oppositeSign(a, b) {\n  return (a <= 0 && b >= 0) || (a >= 0 && b <= 0);\n}\n\nfunction getCorners(bounds, corners) {\n  let count = 0;\n  for (let ix = 0; ix < 2; ix++) {\n    for (let iy = 2; iy < 4; iy++) {\n      for (let iz = 4; iz < 6; iz++) {\n        corners[count] = [bounds[ix], bounds[iy], bounds[iz]];\n        count++;\n      }\n    }\n  }\n}\n\n// Computes the two corners with minimal and miximal coordinates\nfunction computeCornerPoints(point1, point2, bounds) {\n  point1[0] = bounds[0];\n  point1[1] = bounds[2];\n  point1[2] = bounds[4];\n\n  point2[0] = bounds[1];\n  point2[1] = bounds[3];\n  point2[2] = bounds[5];\n}\n\nfunction computeScale3(bounds, scale3 = []) {\n  const center = getCenter(bounds);\n  scale3[0] = bounds[1] - center[0];\n  scale3[1] = bounds[3] - center[1];\n  scale3[2] = bounds[5] - center[2];\n\n  return scale3;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  isValid,\n  getCenter,\n  getLength,\n  getLengths,\n  getMaxLength,\n  getDiagonalLength,\n  getXRange,\n  getYRange,\n  getZRange,\n  getCorners,\n  computeCornerPoints,\n  computeScale3,\n  INIT_BOUNDS,\n};\n\n// ----------------------------------------------------------------------------\n// vtkBoundingBox methods\n// ----------------------------------------------------------------------------\n\nfunction vtkBoundingBox(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkBoundingBox');\n\n  publicAPI.clone = () => {\n    const bounds = [].concat(model.bounds);\n    /* eslint-disable no-use-before-define */\n    return newInstance({ bounds });\n    /* eslint-enable no-use-before-define */\n  };\n\n  publicAPI.equals = (other) => {\n    const a = model.bounds;\n    const b = other.getBounds();\n    return (\n      a[0] === b[0] &&\n      a[1] === b[1] &&\n      a[2] === b[2] &&\n      a[3] === b[3] &&\n      a[4] === b[4] &&\n      a[5] === b[5]\n    );\n  };\n\n  publicAPI.setMinPoint = (x, y, z) => {\n    const [xMin, xMax, yMin, yMax, zMin, zMax] = model.bounds;\n    model.bounds = [\n      x,\n      x > xMax ? x : xMax,\n      y,\n      y > yMax ? y : yMax,\n      z,\n      z > zMax ? z : zMax,\n    ];\n\n    return xMin !== x || yMin !== y || zMin !== z;\n  };\n\n  publicAPI.setMaxPoint = (x, y, z) => {\n    const [xMin, xMax, yMin, yMax, zMin, zMax] = model.bounds;\n    model.bounds = [\n      x < xMin ? x : xMin,\n      x,\n      y < yMin ? y : yMin,\n      y,\n      z < zMin ? z : zMin,\n      z,\n    ];\n\n    return xMax !== x || yMax !== y || zMax !== z;\n  };\n\n  publicAPI.addPoint = (...xyz) => {\n    model.bounds = model.bounds.map((value, index) => {\n      if (index % 2 === 0) {\n        const idx = index / 2;\n        return value < xyz[idx] ? value : xyz[idx];\n      }\n      const idx = (index - 1) / 2;\n      return value > xyz[idx] ? value : xyz[idx];\n    });\n  };\n\n  publicAPI.addBounds = (xMin, xMax, yMin, yMax, zMin, zMax) => {\n    const [_xMin, _xMax, _yMin, _yMax, _zMin, _zMax] = model.bounds;\n    if (zMax === undefined) {\n      model.bounds = [\n        Math.min(xMin[0], _xMin),\n        Math.max(xMin[1], _xMax),\n        Math.min(xMin[2], _yMin),\n        Math.max(xMin[3], _yMax),\n        Math.min(xMin[4], _zMin),\n        Math.max(xMin[5], _zMax),\n      ];\n    } else {\n      model.bounds = [\n        Math.min(xMin, _xMin),\n        Math.max(xMax, _xMax),\n        Math.min(yMin, _yMin),\n        Math.max(yMax, _yMax),\n        Math.min(zMin, _zMin),\n        Math.max(zMax, _zMax),\n      ];\n    }\n  };\n\n  publicAPI.addBox = (other) => {\n    publicAPI.addBounds(other.getBounds());\n  };\n\n  publicAPI.isValid = () => isValid(model.bounds);\n\n  publicAPI.intersect = (bbox) => {\n    if (!(publicAPI.isValid() && bbox.isValid())) {\n      return false;\n    }\n\n    const newBounds = [0, 0, 0, 0, 0, 0];\n    const bBounds = bbox.getBounds();\n    let intersects;\n    for (let i = 0; i < 3; i++) {\n      intersects = false;\n      if (\n        bBounds[i * 2] >= model.bounds[i * 2] &&\n        bBounds[i * 2] <= model.bounds[i * 2 + 1]\n      ) {\n        intersects = true;\n        newBounds[i * 2] = bBounds[i * 2];\n      } else if (\n        model.bounds[i * 2] >= bBounds[i * 2] &&\n        model.bounds[i * 2] <= bBounds[i * 2 + 1]\n      ) {\n        intersects = true;\n        newBounds[i * 2] = model.bounds[i * 2];\n      }\n\n      if (\n        bBounds[i * 2 + 1] >= model.bounds[i * 2] &&\n        bBounds[i * 2 + 1] <= model.bounds[i * 2 + 1]\n      ) {\n        intersects = true;\n        newBounds[i * 2 + 1] = bbox.MaxPnt[i];\n      } else if (\n        model.bounds[i * 2 + 1] >= bbox.MinPnt[i * 2] &&\n        model.bounds[i * 2 + 1] <= bbox.MaxPnt[i * 2 + 1]\n      ) {\n        intersects = true;\n        newBounds[i * 2 + 1] = model.bounds[i * 2 + 1];\n      }\n\n      if (!intersects) {\n        return false;\n      }\n    }\n\n    // OK they did intersect - set the box to be the result\n    model.bounds = newBounds;\n    return true;\n  };\n\n  publicAPI.intersects = (bbox) => {\n    if (!(publicAPI.isValid() && bbox.isValid())) {\n      return false;\n    }\n    const bBounds = bbox.getBounds();\n    /* eslint-disable no-continue */\n    for (let i = 0; i < 3; i++) {\n      if (\n        bBounds[i * 2] >= model.bounds[i * 2] &&\n        bBounds[i * 2] <= model.bounds[i * 2 + 1]\n      ) {\n        continue;\n      } else if (\n        model.bounds[i * 2] >= bBounds[i * 2] &&\n        model.bounds[i * 2] <= bBounds[i * 2 + 1]\n      ) {\n        continue;\n      }\n\n      if (\n        bBounds[i * 2 + 1] >= model.bounds[i * 2] &&\n        bBounds[i * 2 + 1] <= model.bounds[i * 2 + 1]\n      ) {\n        continue;\n      } else if (\n        model.bounds[i * 2 + 1] >= bbox.MinPnt[i * 2] &&\n        model.bounds[i * 2 + 1] <= bbox.MaxPnt[i * 2 + 1]\n      ) {\n        continue;\n      }\n      return false;\n    }\n    /* eslint-enable no-continue */\n\n    return true;\n  };\n\n  publicAPI.intersectPlane = (origin, normal) => {\n    // Index[0..2] represents the order of traversing the corners of a cube\n    // in (x,y,z), (y,x,z) and (z,x,y) ordering, respectively\n    const index = [\n      [0, 1, 2, 3, 4, 5, 6, 7],\n      [0, 1, 4, 5, 2, 3, 6, 7],\n      [0, 2, 4, 6, 1, 3, 5, 7],\n    ];\n\n    // stores the signed distance to a plane\n    const d = [0, 0, 0, 0, 0, 0, 0, 0];\n    let idx = 0;\n    for (let ix = 0; ix < 2; ix++) {\n      for (let iy = 2; iy < 4; iy++) {\n        for (let iz = 4; iz < 6; iz++) {\n          const x = [model.bounds[ix], model.bounds[iy], model.bounds[iz]];\n          d[idx++] = vtkPlane.evaluate(normal, origin, x);\n        }\n      }\n    }\n\n    let dir = 2;\n    while (dir--) {\n      // in each direction, we test if the vertices of two orthogonal faces\n      // are on either side of the plane\n      if (\n        oppositeSign(d[index[dir][0]], d[index[dir][4]]) &&\n        oppositeSign(d[index[dir][1]], d[index[dir][5]]) &&\n        oppositeSign(d[index[dir][2]], d[index[dir][6]]) &&\n        oppositeSign(d[index[dir][3]], d[index[dir][7]])\n      ) {\n        break;\n      }\n    }\n\n    if (dir < 0) {\n      return false;\n    }\n\n    const sign = Math.sign(normal[dir]);\n    const size = Math.abs(\n      (model.bounds[dir * 2 + 1] - model.bounds[dir * 2]) * normal[dir]\n    );\n    let t = sign > 0 ? 1 : 0;\n    /* eslint-disable no-continue */\n    for (let i = 0; i < 4; i++) {\n      if (size === 0) {\n        continue; // shouldn't happen\n      }\n      const ti = Math.abs(d[index[dir][i]]) / size;\n      if (sign > 0 && ti < t) {\n        t = ti;\n      }\n\n      if (sign < 0 && ti > t) {\n        t = ti;\n      }\n    }\n    /* eslint-enable no-continue */\n    const bound =\n      (1.0 - t) * model.bounds[dir * 2] + t * model.bounds[dir * 2 + 1];\n\n    if (sign > 0) {\n      model.bounds[dir * 2] = bound;\n    } else {\n      model.bounds[dir * 2 + 1] = bound;\n    }\n\n    return true;\n  };\n\n  publicAPI.containsPoint = (x, y, z) => {\n    if (x < model.bounds[0] || x > model.bounds[1]) {\n      return false;\n    }\n\n    if (y < model.bounds[2] || y > model.bounds[3]) {\n      return false;\n    }\n\n    if (z < model.bounds[4] || z > model.bounds[5]) {\n      return false;\n    }\n\n    return true;\n  };\n\n  publicAPI.getMinPoint = () => [\n    model.bounds[0],\n    model.bounds[2],\n    model.bounds[4],\n  ];\n  publicAPI.getMaxPoint = () => [\n    model.bounds[1],\n    model.bounds[3],\n    model.bounds[5],\n  ];\n  publicAPI.getBound = (index) => model.bound[index];\n\n  publicAPI.contains = (bbox) => {\n    // if either box is not valid or they don't intersect\n    if (!publicAPI.intersects(bbox)) {\n      return false;\n    }\n\n    if (!publicAPI.containsPoint(...bbox.getMinPoint())) {\n      return false;\n    }\n\n    if (!publicAPI.containsPoint(...bbox.getMaxPoint())) {\n      return 0;\n    }\n\n    return true;\n  };\n\n  publicAPI.getCenter = () => getCenter(model.bounds);\n  publicAPI.getLength = (index) => getLength(model.bounds, index);\n  publicAPI.getLengths = () => getLengths(model.bounds);\n  publicAPI.getMaxLength = () => getMaxLength(model.bounds);\n  publicAPI.getDiagonalLength = () => getDiagonalLength(model.bounds);\n\n  publicAPI.reset = () => publicAPI.setBounds([].concat(INIT_BOUNDS));\n\n  publicAPI.inflate = (delta) => {\n    model.bounds = model.bounds.map((value, index) => {\n      if (index % 2 === 0) {\n        return value - delta;\n      }\n      return value + delta;\n    });\n  };\n\n  publicAPI.getCorners = () => {\n    getCorners(model.bounds, model.corners);\n    return model.corners;\n  };\n\n  publicAPI.scale = (sx, sy, sz) => {\n    if (publicAPI.isValid()) {\n      const newBounds = [].concat(model.bounds);\n      if (sx >= 0.0) {\n        newBounds[0] *= sx;\n        newBounds[1] *= sx;\n      } else {\n        newBounds[0] = sx * model.bounds[1];\n        newBounds[1] = sx * model.bounds[0];\n      }\n\n      if (sy >= 0.0) {\n        newBounds[2] *= sy;\n        newBounds[3] *= sy;\n      } else {\n        newBounds[2] = sy * model.bounds[3];\n        newBounds[3] = sy * model.bounds[2];\n      }\n\n      if (sz >= 0.0) {\n        newBounds[4] *= sz;\n        newBounds[5] *= sz;\n      } else {\n        newBounds[4] = sz * model.bounds[5];\n        newBounds[5] = sz * model.bounds[4];\n      }\n\n      model.bounds = newBounds;\n      return true;\n    }\n    return false;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  type: 'vtkBoundingBox',\n  bounds: [].concat(INIT_BOUNDS),\n  corners: [],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['bounds']);\n  vtkBoundingBox(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkBoundingBox');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, STATIC);\n","import * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport macro from 'vtk.js/Sources/macro';\n\nconst PLANE_TOLERANCE = 1.0e-6;\nconst COINCIDE = 'coincide';\nconst DISJOINT = 'disjoint';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction evaluate(normal, origin, x) {\n  return (\n    normal[0] * (x[0] - origin[0]) +\n    normal[1] * (x[1] - origin[1]) +\n    normal[2] * (x[2] - origin[2])\n  );\n}\n\nfunction distanceToPlane(x, origin, normal) {\n  const distance =\n    normal[0] * (x[0] - origin[0]) +\n    normal[1] * (x[1] - origin[1]) +\n    normal[2] * (x[2] - origin[2]);\n\n  return Math.abs(distance);\n}\n\nfunction projectPoint(x, origin, normal, xproj) {\n  const xo = [];\n  vtkMath.subtract(x, origin, xo);\n\n  const t = vtkMath.dot(normal, xo);\n\n  xproj[0] = x[0] - t * normal[0];\n  xproj[1] = x[1] - t * normal[1];\n  xproj[2] = x[2] - t * normal[2];\n}\n\nfunction projectVector(v, normal, vproj) {\n  const t = vtkMath.dot(v, normal);\n\n  let n2 = vtkMath.dot(normal, normal);\n  if (n2 === 0) {\n    n2 = 1.0;\n  }\n\n  vproj[0] = v[0] - (t * normal[0]) / n2;\n  vproj[1] = v[1] - (t * normal[1]) / n2;\n  vproj[2] = v[2] - (t * normal[2]) / n2;\n}\n\nfunction generalizedProjectPoint(x, origin, normal, xproj) {\n  const xo = [];\n  vtkMath.subtract(x, origin, xo);\n\n  const t = vtkMath.dot(normal, xo);\n  const n2 = vtkMath.dot(normal, normal);\n\n  if (n2 !== 0) {\n    xproj[0] = x[0] - (t * normal[0]) / n2;\n    xproj[1] = x[1] - (t * normal[1]) / n2;\n    xproj[2] = x[2] - (t * normal[2]) / n2;\n  } else {\n    xproj[0] = x[0];\n    xproj[1] = x[1];\n    xproj[2] = x[2];\n  }\n}\n\nfunction intersectWithLine(p1, p2, origin, normal) {\n  const outObj = {\n    intersection: false,\n    betweenPoints: false,\n    t: Number.MAX_VALUE,\n    x: [],\n  };\n\n  const p21 = [];\n  const p1Origin = [];\n  // Compute line vector\n  vtkMath.subtract(p2, p1, p21);\n  vtkMath.subtract(origin, p1, p1Origin);\n\n  // Compute denominator.  If ~0, line and plane are parallel.\n  // const num = vtkMath.dot(normal, origin) - vtkMath.dot(normal, p1);\n  const num = vtkMath.dot(normal, p1Origin);\n  const den = vtkMath.dot(normal, p21);\n\n  // If denominator with respect to numerator is \"zero\", then the line and\n  // plane are considered parallel.\n  let fabsden;\n  let fabstolerance;\n\n  // Trying to avoid an expensive call to fabs()\n  if (den < 0.0) {\n    fabsden = -den;\n  } else {\n    fabsden = den;\n  }\n  if (num < 0.0) {\n    fabstolerance = -num * PLANE_TOLERANCE;\n  } else {\n    fabstolerance = num * PLANE_TOLERANCE;\n  }\n  if (fabsden <= fabstolerance) {\n    return outObj;\n  }\n\n  // Where on the line between p1 and p2 is the intersection\n  // If between 0 and 1, it is between the two points. If < 0 it's before p1, if > 1 it's after p2\n  outObj.t = num / den;\n\n  outObj.x[0] = p1[0] + outObj.t * p21[0];\n  outObj.x[1] = p1[1] + outObj.t * p21[1];\n  outObj.x[2] = p1[2] + outObj.t * p21[2];\n\n  outObj.intersection = true;\n  outObj.betweenPoints = outObj.t >= 0.0 && outObj.t <= 1.0;\n  return outObj;\n}\n\nfunction intersectWithPlane(\n  plane1Origin,\n  plane1Normal,\n  plane2Origin,\n  plane2Normal\n) {\n  const outObj = {\n    intersection: false,\n    l0: [],\n    l1: [],\n    error: null,\n  };\n\n  const cross = [];\n  vtkMath.cross(plane1Normal, plane2Normal, cross);\n  const absCross = cross.map((n) => Math.abs(n));\n\n  // test if the two planes are parallel\n  if (absCross[0] + absCross[1] + absCross[2] < PLANE_TOLERANCE) {\n    // test if disjoint or coincide\n    const v = [];\n    vtkMath.subtract(plane1Origin, plane2Origin, v);\n    if (vtkMath.dot(plane1Normal, v) === 0) {\n      outObj.error = COINCIDE;\n    } else {\n      outObj.error = DISJOINT;\n    }\n    return outObj;\n  }\n\n  // Plane1 and Plane2 intersect in a line\n  // first determine max abs coordinate of the cross product\n  let maxc;\n  if (absCross[0] > absCross[1] && absCross[0] > absCross[2]) {\n    maxc = 'x';\n  } else if (absCross[1] > absCross[2]) {\n    maxc = 'y';\n  } else {\n    maxc = 'z';\n  }\n\n  // To get a point on the intersect line, zero the max coord, and solve for the other two\n  const iP = []; // intersectionPoint\n  // the constants in the 2 plane equations\n  const d1 = -vtkMath.dot(plane1Normal, plane1Origin);\n  const d2 = -vtkMath.dot(plane2Normal, plane2Origin);\n\n  // eslint-disable-next-line default-case\n  switch (maxc) {\n    case 'x': // intersect with x=0\n      iP[0] = 0;\n      iP[1] = (d2 * plane1Normal[2] - d1 * plane2Normal[2]) / cross[0];\n      iP[2] = (d1 * plane2Normal[1] - d2 * plane1Normal[1]) / cross[0];\n      break;\n    case 'y': // intersect with y=0\n      iP[0] = (d1 * plane2Normal[2] - d2 * plane1Normal[2]) / cross[1];\n      iP[1] = 0;\n      iP[2] = (d2 * plane1Normal[0] - d1 * plane2Normal[0]) / cross[1];\n      break;\n    case 'z': // intersect with z=0\n      iP[0] = (d2 * plane1Normal[1] - d1 * plane2Normal[1]) / cross[2];\n      iP[1] = (d1 * plane2Normal[0] - d2 * plane1Normal[0]) / cross[2];\n      iP[2] = 0;\n      break;\n  }\n\n  outObj.l0 = iP;\n  vtkMath.add(iP, cross, outObj.l1);\n  outObj.intersection = true;\n\n  return outObj;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  evaluate,\n  distanceToPlane,\n  projectPoint,\n  projectVector,\n  generalizedProjectPoint,\n  intersectWithLine,\n  intersectWithPlane,\n  DISJOINT,\n  COINCIDE,\n};\n\n// ----------------------------------------------------------------------------\n// vtkPlane methods\n// ----------------------------------------------------------------------------\n\nexport function vtkPlane(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPlane');\n\n  publicAPI.distanceToPlane = (x) =>\n    distanceToPlane(x, model.origin, model.normal);\n\n  publicAPI.projectPoint = (x, xproj) => {\n    projectPoint(x, model.origin, model.normal, xproj);\n  };\n\n  publicAPI.projectVector = (v, vproj) => {\n    projectVector(v, model.normal, vproj);\n  };\n\n  publicAPI.push = (distance) => {\n    if (distance === 0.0) {\n      return;\n    }\n    for (let i = 0; i < 3; i++) {\n      model.origin[i] += distance * model.normal[i];\n    }\n  };\n\n  publicAPI.generalizedProjectPoint = (x, xproj) => {\n    generalizedProjectPoint(x, model.origin, model.normal, xproj);\n  };\n\n  publicAPI.evaluateFunction = (x, y, z) => {\n    if (!Array.isArray(x)) {\n      return (\n        model.normal[0] * (x - model.origin[0]) +\n        model.normal[1] * (y - model.origin[1]) +\n        model.normal[2] * (z - model.origin[2])\n      );\n    }\n    return (\n      model.normal[0] * (x[0] - model.origin[0]) +\n      model.normal[1] * (x[1] - model.origin[1]) +\n      model.normal[2] * (x[2] - model.origin[2])\n    );\n  };\n\n  publicAPI.evaluateGradient = (xyz) => {\n    const retVal = [model.normal[0], model.normal[1], model.normal[2]];\n    return retVal;\n  };\n\n  publicAPI.intersectWithLine = (p1, p2) =>\n    intersectWithLine(p1, p2, model.origin, model.normal);\n\n  publicAPI.intersectWithPlane = (planeOrigin, planeNormal) =>\n    intersectWithPlane(planeOrigin, planeNormal, model.origin, model.normal);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  normal: [0.0, 0.0, 1.0],\n  origin: [0.0, 0.0, 0.0],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  macro.setGetArray(publicAPI, model, ['normal', 'origin'], 3);\n\n  vtkPlane(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkPlane');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, STATIC);\n","export const ColorMode = {\n  DEFAULT: 0,\n  MAP_SCALARS: 1,\n  DIRECT_SCALARS: 2,\n};\n\nexport const ScalarMode = {\n  DEFAULT: 0,\n  USE_POINT_DATA: 1,\n  USE_CELL_DATA: 2,\n  USE_POINT_FIELD_DATA: 3,\n  USE_CELL_FIELD_DATA: 4,\n  USE_FIELD_DATA: 5,\n};\n\nexport const GetArray = {\n  BY_ID: 0,\n  BY_NAME: 1,\n};\n\nexport default {\n  ColorMode,\n  GetArray,\n  ScalarMode,\n};\n","export const StructuredType = {\n  UNCHANGED: 0,\n  SINGLE_POINT: 1,\n  X_LINE: 2,\n  Y_LINE: 3,\n  Z_LINE: 4,\n  XY_PLANE: 5,\n  YZ_PLANE: 6,\n  XZ_PLANE: 7,\n  XYZ_GRID: 8,\n  EMPTY: 9,\n};\n\nexport default {\n  StructuredType,\n};\n","import Constants from 'vtk.js/Sources/Common/DataModel/StructuredData/Constants';\n\nconst { StructuredType } = Constants;\n\nexport function getDataDescriptionFromExtent(inExt) {\n  let dataDim = 0;\n  for (let i = 0; i < 3; ++i) {\n    if (inExt[i * 2] < inExt[i * 2 + 1]) {\n      dataDim++;\n    }\n  }\n\n  if (inExt[0] > inExt[1] || inExt[2] > inExt[3] || inExt[4] > inExt[5]) {\n    return StructuredType.EMPTY;\n  }\n\n  if (dataDim === 3) {\n    return StructuredType.XYZ_GRID;\n  }\n\n  if (dataDim === 2) {\n    if (inExt[0] === inExt[1]) {\n      return StructuredType.YZ_PLANE;\n    }\n\n    if (inExt[2] === inExt[3]) {\n      return StructuredType.XZ_PLANE;\n    }\n    return StructuredType.XY_PLANE;\n  }\n\n  if (dataDim === 1) {\n    if (inExt[0] < inExt[1]) {\n      return StructuredType.X_LINE;\n    }\n\n    if (inExt[2] < inExt[3]) {\n      return StructuredType.Y_LINE;\n    }\n\n    return StructuredType.Z_LINE;\n  }\n\n  return StructuredType.SINGLE_POINT;\n}\n\nexport default Object.assign({ getDataDescriptionFromExtent }, Constants);\n","import macro from 'vtk.js/Sources/macro';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkBoundingBox from 'vtk.js/Sources/Common/DataModel/BoundingBox';\nimport vtkDataSet from 'vtk.js/Sources/Common/DataModel/DataSet';\nimport vtkStructuredData from 'vtk.js/Sources/Common/DataModel/StructuredData';\nimport { StructuredType } from 'vtk.js/Sources/Common/DataModel/StructuredData/Constants';\nimport { vec3, mat3, mat4 } from 'gl-matrix';\n\nconst { vtkErrorMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageData(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageData');\n\n  publicAPI.setExtent = (...inExtent) => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (!inExtent || inExtent.length !== 6) {\n      return;\n    }\n\n    let changeDetected = false;\n    model.extent.forEach((item, index) => {\n      if (item !== inExtent[index]) {\n        if (changeDetected) {\n          return;\n        }\n        changeDetected = true;\n      }\n    });\n\n    if (changeDetected) {\n      model.extent = [].concat(inExtent);\n      model.dataDescription = vtkStructuredData.getDataDescriptionFromExtent(\n        model.extent\n      );\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.setDimensions = (...dims) => {\n    let i;\n    let j;\n    let k;\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (dims.length === 1) {\n      const array = dims[0];\n      i = array[0];\n      j = array[1];\n      k = array[2];\n    } else if (dims.length === 3) {\n      i = dims[0];\n      j = dims[1];\n      k = dims[2];\n    } else {\n      vtkErrorMacro('Bad dimension specification');\n      return;\n    }\n\n    publicAPI.setExtent(0, i - 1, 0, j - 1, 0, k - 1);\n  };\n\n  publicAPI.getDimensions = () => [\n    model.extent[1] - model.extent[0] + 1,\n    model.extent[3] - model.extent[2] + 1,\n    model.extent[5] - model.extent[4] + 1,\n  ];\n\n  publicAPI.getNumberOfCells = () => {\n    const dims = publicAPI.getDimensions();\n    let nCells = 1;\n\n    for (let i = 0; i < 3; i++) {\n      if (dims[i] === 0) {\n        return 0;\n      }\n      if (dims[i] > 1) {\n        nCells *= dims[i] - 1;\n      }\n    }\n\n    return nCells;\n  };\n\n  publicAPI.getNumberOfPoints = () => {\n    const dims = publicAPI.getDimensions();\n    return dims[0] * dims[1] * dims[2];\n  };\n\n  publicAPI.getPoint = (index) => {\n    const dims = publicAPI.getDimensions();\n    const ijk = vec3.fromValues(0, 0, 0);\n    const coords = [0, 0, 0];\n\n    if (dims[0] === 0 || dims[1] === 0 || dims[2] === 0) {\n      vtkErrorMacro('Requesting a point from an empty image.');\n      return null;\n    }\n\n    switch (model.dataDescription) {\n      case StructuredType.EMPTY:\n        return null;\n\n      case StructuredType.SINGLE_POINT:\n        break;\n\n      case StructuredType.X_LINE:\n        ijk[0] = index;\n        break;\n\n      case StructuredType.Y_LINE:\n        ijk[1] = index;\n        break;\n\n      case StructuredType.Z_LINE:\n        ijk[2] = index;\n        break;\n\n      case StructuredType.XY_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[1] = index / dims[0];\n        break;\n\n      case StructuredType.YZ_PLANE:\n        ijk[1] = index % dims[1];\n        ijk[2] = index / dims[1];\n        break;\n\n      case StructuredType.XZ_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[2] = index / dims[0];\n        break;\n\n      case StructuredType.XYZ_GRID:\n        ijk[0] = index % dims[0];\n        ijk[1] = (index / dims[0]) % dims[1];\n        ijk[2] = index / (dims[0] * dims[1]);\n        break;\n\n      default:\n        vtkErrorMacro('Invalid dataDescription');\n        break;\n    }\n\n    const vout = vec3.create();\n    publicAPI.indexToWorldVec3(ijk, vout);\n    vec3.copy(coords, vout);\n    return coords;\n  };\n\n  // vtkCell *GetCell(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCell(vtkIdType cellId, vtkGenericCell *cell) VTK_OVERRIDE;\n  // void GetCellBounds(vtkIdType cellId, double bounds[6]) VTK_OVERRIDE;\n  // virtual vtkIdType FindPoint(double x, double y, double z)\n  // {\n  //   return this->vtkDataSet::FindPoint(x, y, z);\n  // }\n  // vtkIdType FindPoint(double x[3]) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkIdType cellId, double tol2,\n  //   int& subId, double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkGenericCell *gencell,\n  //   vtkIdType cellId, double tol2, int& subId,\n  //   double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkCell *FindAndGetCell(double x[3], vtkCell *cell, vtkIdType cellId,\n  //                                 double tol2, int& subId, double pcoords[3],\n  //                                 double *weights) VTK_OVERRIDE;\n  // int GetCellType(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCellPoints(vtkIdType cellId, vtkIdList *ptIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetCellPoints(cellId,ptIds,this->DataDescription,\n  //                                     this->GetDimensions());}\n  // void GetPointCells(vtkIdType ptId, vtkIdList *cellIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetPointCells(ptId,cellIds,this->GetDimensions());}\n  // void ComputeBounds() VTK_OVERRIDE;\n  // int GetMaxCellSize() VTK_OVERRIDE {return 8;}; //voxel is the largest\n\n  publicAPI.getBounds = () => publicAPI.extentToBounds(model.extent);\n\n  publicAPI.extentToBounds = (ex) => {\n    // prettier-ignore\n    const corners = [\n      ex[0], ex[2], ex[4],\n      ex[1], ex[2], ex[4],\n      ex[0], ex[3], ex[4],\n      ex[1], ex[3], ex[4],\n      ex[0], ex[2], ex[5],\n      ex[1], ex[2], ex[5],\n      ex[0], ex[3], ex[5],\n      ex[1], ex[3], ex[5]];\n\n    const idx = vec3.fromValues(corners[0], corners[1], corners[2]);\n    const vout = vec3.create();\n    publicAPI.indexToWorldVec3(idx, vout);\n    const bounds = [vout[0], vout[0], vout[1], vout[1], vout[2], vout[2]];\n    for (let i = 3; i < 24; i += 3) {\n      vec3.set(idx, corners[i], corners[i + 1], corners[i + 2]);\n      publicAPI.indexToWorldVec3(idx, vout);\n      if (vout[0] < bounds[0]) {\n        bounds[0] = vout[0];\n      }\n      if (vout[1] < bounds[2]) {\n        bounds[2] = vout[1];\n      }\n      if (vout[2] < bounds[4]) {\n        bounds[4] = vout[2];\n      }\n      if (vout[0] > bounds[1]) {\n        bounds[1] = vout[0];\n      }\n      if (vout[1] > bounds[3]) {\n        bounds[3] = vout[1];\n      }\n      if (vout[2] > bounds[5]) {\n        bounds[5] = vout[2];\n      }\n    }\n\n    return bounds;\n  };\n\n  publicAPI.computeTransforms = () => {\n    const trans = vec3.fromValues(\n      model.origin[0],\n      model.origin[1],\n      model.origin[2]\n    );\n    mat4.fromTranslation(model.indexToWorld, trans);\n\n    model.indexToWorld[0] = model.direction[0];\n    model.indexToWorld[1] = model.direction[1];\n    model.indexToWorld[2] = model.direction[2];\n\n    model.indexToWorld[4] = model.direction[3];\n    model.indexToWorld[5] = model.direction[4];\n    model.indexToWorld[6] = model.direction[5];\n\n    model.indexToWorld[8] = model.direction[6];\n    model.indexToWorld[9] = model.direction[7];\n    model.indexToWorld[10] = model.direction[8];\n\n    const scale = vec3.fromValues(\n      model.spacing[0],\n      model.spacing[1],\n      model.spacing[2]\n    );\n    mat4.scale(model.indexToWorld, model.indexToWorld, scale);\n\n    mat4.invert(model.worldToIndex, model.indexToWorld);\n  };\n\n  //\n  // The direction matrix is a 3x3 basis for the I, J, K axes\n  // of the image. The rows of the matrix correspond to the\n  // axes directions in world coordinates. Direction must\n  // form an orthonormal basis, results are undefined if\n  // it is not.\n  //\n  publicAPI.setDirection = (...args) => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return false;\n    }\n\n    let array = args;\n    // allow an array passed as a single arg.\n    if (array.length === 1 && Array.isArray(array[0])) {\n      array = array[0];\n    }\n\n    if (array.length !== 9) {\n      throw new RangeError('Invalid number of values for array setter');\n    }\n    let changeDetected = false;\n    model.direction.forEach((item, index) => {\n      if (item !== array[index]) {\n        if (changeDetected) {\n          return;\n        }\n        changeDetected = true;\n      }\n    });\n\n    if (changeDetected) {\n      for (let i = 0; i < 9; ++i) {\n        model.direction[i] = array[i];\n      }\n      publicAPI.modified();\n    }\n    return true;\n  };\n\n  // this is the fast version, requires vec3 arguments\n  publicAPI.indexToWorldVec3 = (vin, vout) => {\n    vec3.transformMat4(vout, vin, model.indexToWorld);\n  };\n\n  publicAPI.indexToWorldBounds = (bin, bout = []) => {\n    const in1 = [0, 0, 0];\n    const in2 = [0, 0, 0];\n    vtkBoundingBox.computeCornerPoints(in1, in2, bin);\n\n    const out1 = [0, 0, 0];\n    const out2 = [0, 0, 0];\n    vec3.transformMat4(out1, in1, model.indexToWorld);\n    vec3.transformMat4(out2, in2, model.indexToWorld);\n\n    vtkMath.computeBoundsFromPoints(out1, out2, bout);\n\n    return bout;\n  };\n\n  // slow version for generic arrays\n  publicAPI.indexToWorld = (ain, aout) => {\n    const vin = vec3.fromValues(ain[0], ain[1], ain[2]);\n    const vout = vec3.create();\n    vec3.transformMat4(vout, vin, model.indexToWorld);\n    vec3.copy(aout, vout);\n  };\n\n  // this is the fast version, requires vec3 arguments\n  publicAPI.worldToIndexVec3 = (vin, vout) => {\n    vec3.transformMat4(vout, vin, model.worldToIndex);\n  };\n\n  publicAPI.worldToIndexBounds = (bin, bout = []) => {\n    const in1 = [0, 0, 0];\n    const in2 = [0, 0, 0];\n    vtkBoundingBox.computeCornerPoints(in1, in2, bin);\n\n    const out1 = [0, 0, 0];\n    const out2 = [0, 0, 0];\n    vec3.transformMat4(out1, in1, model.worldToIndex);\n    vec3.transformMat4(out2, in2, model.worldToIndex);\n\n    vtkMath.computeBoundsFromPoints(out1, out2, bout);\n\n    return bout;\n  };\n\n  // slow version for generic arrays\n  publicAPI.worldToIndex = (ain, aout) => {\n    const vin = vec3.fromValues(ain[0], ain[1], ain[2]);\n    const vout = vec3.create();\n    vec3.transformMat4(vout, vin, model.worldToIndex);\n    vec3.copy(aout, vout);\n  };\n\n  // Make sure the transform is correct\n  publicAPI.onModified(publicAPI.computeTransforms);\n  publicAPI.computeTransforms();\n\n  publicAPI.getCenter = () => {\n    const bounds = publicAPI.getBounds();\n    const center = [];\n\n    for (let i = 0; i < 3; i++) {\n      center[i] = (bounds[2 * i + 1] + bounds[2 * i]) / 2;\n    }\n\n    return center;\n  };\n\n  publicAPI.computeHistogram = (worldBounds, voxelFunc = null) => {\n    const bounds = [0, 0, 0, 0, 0, 0];\n    publicAPI.worldToIndexBounds(worldBounds, bounds);\n\n    const point1 = [0, 0, 0];\n    const point2 = [0, 0, 0];\n    vtkBoundingBox.computeCornerPoints(point1, point2, bounds);\n\n    vtkMath.roundVector(point1, point1);\n    vtkMath.roundVector(point2, point2);\n\n    const dimensions = publicAPI.getDimensions();\n\n    vtkMath.clampVector(\n      point1,\n      [0, 0, 0],\n      [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1],\n      point1\n    );\n    vtkMath.clampVector(\n      point2,\n      [0, 0, 0],\n      [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1],\n      point2\n    );\n\n    const yStride = dimensions[0];\n    const zStride = dimensions[0] * dimensions[1];\n\n    const pixels = publicAPI\n      .getPointData()\n      .getScalars()\n      .getData();\n\n    let maximum = -Infinity;\n    let minimum = Infinity;\n    let sumOfSquares = 0;\n    let isum = 0;\n    let inum = 0;\n\n    for (let z = point1[2]; z <= point2[2]; z++) {\n      for (let y = point1[1]; y <= point2[1]; y++) {\n        let index = point1[0] + y * yStride + z * zStride;\n        for (let x = point1[0]; x <= point2[0]; x++) {\n          if (!voxelFunc || voxelFunc([x, y, z], bounds)) {\n            const pixel = pixels[index];\n\n            if (pixel > maximum) maximum = pixel;\n            if (pixel < minimum) minimum = pixel;\n            sumOfSquares += pixel * pixel;\n            isum += pixel;\n            inum += 1;\n          }\n\n          ++index;\n        }\n      }\n    }\n\n    const average = inum > 0 ? isum / inum : 0;\n    const variance = sumOfSquares - average * average;\n    const sigma = Math.sqrt(variance);\n\n    return {\n      minimum,\n      maximum,\n      average,\n      variance,\n      sigma,\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  direction: null, // a mat3\n  indexToWorld: null, // a mat4\n  worldToIndex: null, // a mat4\n  spacing: [1.0, 1.0, 1.0],\n  origin: [0.0, 0.0, 0.0],\n  extent: [0, -1, 0, -1, 0, -1],\n  dataDescription: StructuredType.EMPTY,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkDataSet.extend(publicAPI, model, initialValues);\n\n  if (!model.direction) {\n    model.direction = mat3.create();\n  } else if (Array.isArray(model.direction)) {\n    const dvals = model.direction.slice(0);\n    model.direction = mat3.create();\n    for (let i = 0; i < 9; ++i) {\n      model.direction[i] = dvals[i];\n    }\n  }\n\n  model.indexToWorld = new Float64Array(16);\n  model.worldToIndex = new Float64Array(16);\n\n  // Set/Get methods\n  macro.get(publicAPI, model, ['direction', 'indexToWorld', 'worldToIndex']);\n  macro.setGetArray(publicAPI, model, ['origin', 'spacing'], 3);\n  macro.getArray(publicAPI, model, ['extent'], 6);\n\n  // Object specific methods\n  vtkImageData(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkImageData');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\n\nfunction notImplemented(method) {\n  return () => macro.vtkErrorMacro(`vtkProp::${method} - NOT IMPLEMENTED`);\n}\n\n// ----------------------------------------------------------------------------\n// vtkProp methods\n// ----------------------------------------------------------------------------\n\nfunction vtkProp(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProp');\n\n  publicAPI.getMTime = () => {\n    let m1 = model.mtime;\n    for (let index = 0; index < model.textures.length; ++index) {\n      const m2 = model.textures[index].getMTime();\n      if (m2 > m1) {\n        m1 = m2;\n      }\n    }\n    return m1;\n  };\n\n  publicAPI.getNestedProps = () => null;\n  publicAPI.getActors = () => [];\n  publicAPI.getActors2D = () => [];\n  publicAPI.getVolumes = () => [];\n\n  publicAPI.pick = notImplemented('pick');\n  publicAPI.hasKey = notImplemented('hasKey');\n\n  publicAPI.getRedrawMTime = () => model.mtime;\n\n  publicAPI.setEstimatedRenderTime = (t) => {\n    model.estimatedRenderTime = t;\n    model.savedEstimatedRenderTime = t;\n  };\n\n  publicAPI.restoreEstimatedRenderTime = () => {\n    model.estimatedRenderTime = model.savedEstimatedRenderTime;\n  };\n\n  publicAPI.addEstimatedRenderTime = (t) => {\n    model.estimatedRenderTime += t;\n  };\n\n  publicAPI.setAllocatedRenderTime = (t) => {\n    model.allocatedRenderTime = t;\n    model.savedEstimatedRenderTime = model.estimatedRenderTime;\n    model.estimatedRenderTime = 0;\n  };\n\n  publicAPI.getSupportsSelection = () => false;\n\n  publicAPI.getTextures = () => model.textures;\n  publicAPI.hasTexture = (texture) => model.textures.indexOf(texture) !== -1;\n  publicAPI.addTexture = (texture) => {\n    if (texture && !publicAPI.hasTexture(texture)) {\n      model.textures = model.textures.concat(texture);\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.removeTexture = (texture) => {\n    const newTextureList = model.textures.filter((item) => item !== texture);\n    if (model.textures.length !== newTextureList.length) {\n      model.textures = newTextureList;\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.removeAllTextures = () => {\n    model.textures = [];\n    publicAPI.modified();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  visibility: true,\n  pickable: true,\n  dragable: true,\n  useBounds: true,\n  allocatedRenderTime: 10,\n  estimatedRenderTime: 0,\n  savedEstimatedRenderTime: 0,\n  renderTimeMultiplier: 1,\n  paths: null,\n  textures: [],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['estimatedRenderTime', 'allocatedRenderTime']);\n  macro.setGet(publicAPI, model, [\n    'visibility',\n    'pickable',\n    'dragable',\n    'useBounds',\n    'renderTimeMultiplier',\n  ]);\n\n  // Object methods\n  vtkProp(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkProp');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","export const VectorMode = {\n  MAGNITUDE: 0,\n  COMPONENT: 1,\n  RGBCOLORS: 2,\n};\n\nexport const ScalarMappingTarget = {\n  LUMINANCE: 1,\n  LUMINANCE_ALPHA: 2,\n  RGB: 3,\n  RGBA: 4,\n};\n\nexport default {\n  VectorMode,\n  ScalarMappingTarget,\n};\n","import vtk from 'vtk.js/Sources/vtk';\nimport macro from 'vtk.js/Sources/macro';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\n\n// ----------------------------------------------------------------------------\n// vtkFieldData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkFieldData(publicAPI, model) {\n  model.classHierarchy.push('vtkFieldData');\n  const superGetState = publicAPI.getState;\n\n  // Decode serialized data if any\n  if (model.arrays) {\n    model.arrays = model.arrays.map((item) => ({ data: vtk(item.data) }));\n  }\n\n  publicAPI.initialize = () => {\n    publicAPI.initializeFields();\n    publicAPI.copyAllOn();\n    publicAPI.clearFieldFlags();\n  };\n\n  publicAPI.initializeFields = () => {\n    model.arrays = [];\n    model.copyFieldFlags = {};\n    publicAPI.modified();\n  };\n\n  publicAPI.copyStructure = (other) => {\n    publicAPI.initializeFields();\n    model.copyFieldFlags = other.getCopyFieldFlags().map((x) => x); // Deep-copy\n    model.arrays = other.arrays().map((x) => ({ array: x })); // Deep-copy\n    // TODO: Copy array information objects (once we support information objects)\n  };\n\n  publicAPI.getNumberOfArrays = () => model.arrays.length;\n  publicAPI.getNumberOfActiveArrays = () => model.arrays.length;\n  publicAPI.addArray = (arr) => {\n    model.arrays = [].concat(model.arrays, { data: arr });\n    return model.arrays.length - 1;\n  };\n  publicAPI.removeAllArrays = () => {\n    model.arrays = [];\n  };\n  publicAPI.removeArray = (arrayName) => {\n    model.arrays = model.arrays.filter(\n      (entry) => arrayName !== entry.data.getName()\n    );\n  };\n  publicAPI.removeArrayByIndex = (arrayIdx) => {\n    model.arrays = model.arrays.filter((entry, idx) => idx !== arrayIdx);\n  };\n  publicAPI.getArrays = () => model.arrays.map((entry) => entry.data);\n  publicAPI.getArray = (arraySpec) =>\n    typeof arraySpec === 'number'\n      ? publicAPI.getArrayByIndex(arraySpec)\n      : publicAPI.getArrayByName(arraySpec);\n  publicAPI.getArrayByName = (arrayName) =>\n    model.arrays.reduce(\n      (a, b, i) => (b.data.getName() === arrayName ? b.data : a),\n      null\n    );\n  publicAPI.getArrayWithIndex = (arrayName) =>\n    model.arrays.reduce(\n      (a, b, i) =>\n        b.data && b.data.getName() === arrayName\n          ? { array: b.data, index: i }\n          : a,\n      { array: null, index: -1 }\n    );\n  publicAPI.getArrayByIndex = (idx) =>\n    idx >= 0 && idx < model.arrays.length ? model.arrays[idx].data : null;\n  publicAPI.hasArray = (arrayName) =>\n    publicAPI.getArrayWithIndex(arrayName).index >= 0;\n  publicAPI.getArrayName = (idx) => {\n    const arr = model.arrays[idx];\n    return arr ? arr.data.getName() : '';\n  };\n  publicAPI.getCopyFieldFlags = () => model.copyFieldFlags;\n  publicAPI.getFlag = (arrayName) => model.copyFieldFlags[arrayName];\n  publicAPI.passData = (other, fromId = -1, toId = -1) => {\n    other.getArrays().forEach((arr) => {\n      const copyFlag = publicAPI.getFlag(arr.getName());\n      if (\n        copyFlag !== false &&\n        !(model.doCopyAllOff && copyFlag !== true) &&\n        arr\n      ) {\n        let destArr = publicAPI.getArrayByName(arr.getName());\n        if (!destArr) {\n          if (fromId < 0 || fromId > arr.getNumberOfTuples()) {\n            publicAPI.addArray(arr);\n          } else {\n            const ncomps = arr.getNumberOfComponents();\n            let newSize = arr.getNumberOfValues();\n            const tId = toId > -1 ? toId : fromId;\n            if (newSize < tId * ncomps) {\n              newSize = (tId + 1) * ncomps;\n            }\n            destArr = vtkDataArray.newInstance({\n              name: arr.getName(),\n              dataType: arr.getDataType(),\n              numberOfComponents: arr.getNumberOfComponents(),\n              size: newSize,\n            });\n            destArr.setTuple(tId, arr.getTuple(fromId));\n            publicAPI.addArray(destArr);\n          }\n        } else if (\n          arr.getNumberOfComponents() === destArr.getNumberOfComponents()\n        ) {\n          if (fromId > -1 && fromId < arr.getNumberOfTuples()) {\n            const tId = toId > -1 ? toId : fromId;\n            destArr.setTuple(tId, arr.getTuple(fromId));\n          } else {\n            // if fromId and not provided, just copy all (or as much possible)\n            // of arr to destArr.\n            for (let i = 0; i < arr.getNumberOfTuples(); ++i) {\n              destArr.setTuple(i, arr.getTuple(i));\n            }\n          }\n        }\n      }\n    });\n  };\n  publicAPI.copyFieldOn = (arrayName) => {\n    model.copyFieldFlags[arrayName] = true;\n  };\n  publicAPI.copyFieldOff = (arrayName) => {\n    model.copyFieldFlags[arrayName] = false;\n  };\n  publicAPI.copyAllOn = () => {\n    if (!model.doCopyAllOn || model.doCopyAllOff) {\n      model.doCopyAllOn = true;\n      model.doCopyAllOff = false;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.copyAllOff = () => {\n    if (model.doCopyAllOn || !model.doCopyAllOff) {\n      model.doCopyAllOn = false;\n      model.doCopyAllOff = true;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.clearFieldFlags = () => {\n    model.copyFieldFlags = {};\n  };\n  publicAPI.deepCopy = (other) => {\n    model.arrays = other.getArrays().map((arr) => {\n      const arrNew = arr.newClone();\n      arrNew.deepCopy(arr);\n      return { data: arrNew };\n    });\n  };\n  publicAPI.copyFlags = (other) => other.getCopyFieldFlags().map((x) => x);\n  // TODO: publicAPI.squeeze = () => model.arrays.forEach(entry => entry.data.squeeze());\n  publicAPI.reset = () => model.arrays.forEach((entry) => entry.data.reset());\n  // TODO: getActualMemorySize\n  publicAPI.getMTime = () =>\n    model.arrays.reduce(\n      (a, b) => (b.data.getMTime() > a ? b.data.getMTime() : a),\n      model.mtime\n    );\n  // TODO: publicAPI.getField = (ids, other) => { copy ids from other into this model's arrays }\n  // TODO: publicAPI.getArrayContainingComponent = (component) => ...\n  publicAPI.getNumberOfComponents = () =>\n    model.arrays.reduce((a, b) => a + b.data.getNumberOfComponents(), 0);\n  publicAPI.getNumberOfTuples = () =>\n    model.arrays.length > 0 ? model.arrays[0].getNumberOfTuples() : 0;\n\n  publicAPI.getState = () => {\n    const result = superGetState();\n    result.arrays = model.arrays.map((item) => ({\n      data: item.data.getState(),\n    }));\n    return result;\n  };\n}\n\nconst DEFAULT_VALUES = {\n  arrays: [],\n  copyFieldFlags: [], // fields not to copy\n  doCopyAllOn: true,\n  doCopyAllOff: false,\n};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  macro.obj(publicAPI, model);\n\n  vtkFieldData(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkFieldData');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","export const AttributeTypes = {\n  SCALARS: 0,\n  VECTORS: 1,\n  NORMALS: 2,\n  TCOORDS: 3,\n  TENSORS: 4,\n  GLOBALIDS: 5,\n  PEDIGREEIDS: 6,\n  EDGEFLAG: 7,\n  NUM_ATTRIBUTES: 8,\n};\n\nexport const AttributeLimitTypes = {\n  MAX: 0,\n  EXACT: 1,\n  NOLIMIT: 2,\n};\n\nexport const CellGhostTypes = {\n  DUPLICATECELL: 1, // the cell is present on multiple processors\n  HIGHCONNECTIVITYCELL: 2, // the cell has more neighbors than in a regular mesh\n  LOWCONNECTIVITYCELL: 4, // the cell has less neighbors than in a regular mesh\n  REFINEDCELL: 8, // other cells are present that refines it.\n  EXTERIORCELL: 16, // the cell is on the exterior of the data set\n  HIDDENCELL: 32, // the cell is needed to maintain connectivity, but the data values should be ignored.\n};\n\nexport const PointGhostTypes = {\n  DUPLICATEPOINT: 1, // the cell is present on multiple processors\n  HIDDENPOINT: 2, // the point is needed to maintain connectivity, but the data values should be ignored.\n};\n\nexport const AttributeCopyOperations = {\n  COPYTUPLE: 0,\n  INTERPOLATE: 1,\n  PASSDATA: 2,\n  ALLCOPY: 3, // all of the above\n};\n\nexport const ghostArrayName = 'vtkGhostType';\n\nexport const DesiredOutputPrecision = {\n  DEFAULT: 0, // use the point type that does not truncate any data\n  SINGLE: 1, // use Float32Array\n  DOUBLE: 2, // use Float64Array\n};\n\nexport default {\n  AttributeCopyOperations,\n  AttributeLimitTypes,\n  AttributeTypes,\n  CellGhostTypes,\n  DesiredOutputPrecision,\n  PointGhostTypes,\n  ghostArrayName,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport vtkFieldData from 'vtk.js/Sources/Common/DataModel/DataSetAttributes/FieldData';\nimport Constants from 'vtk.js/Sources/Common/DataModel/DataSetAttributes/Constants';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\n\nconst { AttributeTypes, AttributeCopyOperations } = Constants;\nconst { vtkWarningMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkDataSetAttributes methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataSetAttributes(publicAPI, model) {\n  const attrTypes = [\n    'Scalars',\n    'Vectors',\n    'Normals',\n    'TCoords',\n    'Tensors',\n    'GlobalIds',\n    'PedigreeIds',\n  ];\n\n  function cleanAttributeType(attType) {\n    // Given an integer or string, convert the result to one of the\n    // strings in the \"attrTypes\" array above or null (if\n    // no match is found)\n    let cleanAttType = attrTypes.find(\n      (ee) =>\n        AttributeTypes[ee.toUpperCase()] === attType ||\n        (typeof attType !== 'number' &&\n          ee.toLowerCase() === attType.toLowerCase())\n    );\n    if (typeof cleanAttType === 'undefined') {\n      cleanAttType = null;\n    }\n    return cleanAttType;\n  }\n\n  // Set our className\n  model.classHierarchy.push('vtkDataSetAttributes');\n\n  publicAPI.checkNumberOfComponents = (x) => true; // TODO\n\n  publicAPI.setAttribute = (arr, uncleanAttType) => {\n    const attType = cleanAttributeType(uncleanAttType);\n    if (\n      arr &&\n      attType.toUpperCase() === 'PEDIGREEIDS' &&\n      !arr.isA('vtkDataArray')\n    ) {\n      vtkWarningMacro(\n        `Cannot set attribute ${attType}. The attribute must be a vtkDataArray.`\n      );\n      return -1;\n    }\n    if (arr && !publicAPI.checkNumberOfComponents(arr, attType)) {\n      vtkWarningMacro(\n        `Cannot set attribute ${attType}. Incorrect number of components.`\n      );\n      return -1;\n    }\n    let currentAttribute = model[`active${attType}`];\n    if (currentAttribute >= 0 && currentAttribute < model.arrays.length) {\n      if (model.arrays[currentAttribute] === arr) {\n        return currentAttribute;\n      }\n      publicAPI.removeArrayByIndex(currentAttribute);\n    }\n\n    if (arr) {\n      currentAttribute = publicAPI.addArray(arr);\n      model[`active${attType}`] = currentAttribute;\n    } else {\n      model[`active${attType}`] = -1;\n    }\n    publicAPI.modified();\n    return model[`active${attType}`];\n  };\n\n  publicAPI.setActiveAttributeByName = (arrayName, attType) =>\n    publicAPI.setActiveAttributeByIndex(\n      publicAPI.getArrayWithIndex(arrayName).index,\n      attType\n    );\n\n  publicAPI.setActiveAttributeByIndex = (arrayIdx, uncleanAttType) => {\n    const attType = cleanAttributeType(uncleanAttType);\n    if (arrayIdx >= 0 && arrayIdx < model.arrays.length) {\n      if (attType.toUpperCase() !== 'PEDIGREEIDS') {\n        const arr = publicAPI.getArrayByIndex(arrayIdx);\n        if (!arr.isA('vtkDataArray')) {\n          vtkWarningMacro(\n            `Cannot set attribute ${attType}. Only vtkDataArray subclasses can be set as active attributes.`\n          );\n          return -1;\n        }\n        if (!publicAPI.checkNumberOfComponents(arr, attType)) {\n          vtkWarningMacro(\n            `Cannot set attribute ${attType}. Incorrect number of components.`\n          );\n          return -1;\n        }\n      }\n      model[`active${attType}`] = arrayIdx;\n      publicAPI.modified();\n      return arrayIdx;\n    }\n\n    if (arrayIdx === -1) {\n      model[`active${attType}`] = arrayIdx;\n      publicAPI.modified();\n    }\n\n    return -1;\n  };\n\n  publicAPI.getActiveAttribute = (attType) => {\n    // Given an integer enum value or a string (with random capitalization),\n    // find the matching string in attrTypes.\n    const cleanAttType = cleanAttributeType(attType);\n    return publicAPI[`get${cleanAttType}`]();\n  };\n\n  // Override to allow proper handling of active attributes\n  publicAPI.removeAllArrays = () => {\n    model.arrays = [];\n    attrTypes.forEach((attType) => {\n      model[`active${attType}`] = -1;\n    });\n  };\n\n  // Override to allow proper handling of active attributes\n  publicAPI.removeArray = (arrayName) => {\n    model.arrays = model.arrays.filter((entry, idx) => {\n      if (arrayName === entry.data.getName()) {\n        // Found the array to remove, but is it an active attribute?\n        attrTypes.forEach((attType) => {\n          if (idx === model[`active${attType}`]) {\n            model[`active${attType}`] = -1;\n          }\n        });\n        return false;\n      }\n      return true;\n    });\n  };\n\n  // Override to allow proper handling of active attributes\n  publicAPI.removeArrayByIndex = (arrayIdx) => {\n    model.arrays = model.arrays.filter((entry, idx) => idx !== arrayIdx);\n    attrTypes.forEach((attType) => {\n      if (arrayIdx === model[`active${attType}`]) {\n        model[`active${attType}`] = -1;\n      }\n    });\n  };\n\n  attrTypes.forEach((value) => {\n    const activeVal = `active${value}`;\n    publicAPI[`get${value}`] = () =>\n      publicAPI.getArrayByIndex(model[activeVal]);\n    publicAPI[`set${value}`] = (da) => publicAPI.setAttribute(da, value);\n    publicAPI[`setActive${value}`] = (arrayName) =>\n      publicAPI.setActiveAttributeByIndex(\n        publicAPI.getArrayWithIndex(arrayName).index,\n        value\n      );\n    publicAPI[`copy${value}Off`] = () => {\n      publicAPI.initialize();\n      const attType = value.toUpperCase();\n      model.copyAttributeFlags[AttributeCopyOperations.PASSDATA][\n        AttributeTypes[attType]\n      ] = false;\n    };\n  });\n\n  publicAPI.initialize = macro.chain(publicAPI.initialize, () => {\n    // Default to copying all attributes in every circumstance:\n    model.copyAttributeFlags = [];\n    Object.keys(AttributeCopyOperations)\n      .filter((op) => op !== 'ALLCOPY')\n      .forEach((attCopyOp) => {\n        model.copyAttributeFlags[\n          AttributeCopyOperations[attCopyOp]\n        ] = Object.keys(AttributeTypes)\n          .filter((ty) => ty !== 'NUM_ATTRIBUTES')\n          .reduce((a, b) => {\n            a[AttributeTypes[b]] = true;\n            return a;\n          }, []);\n      });\n    // Override some operations where we don't want to copy:\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][\n      AttributeTypes.GLOBALIDS\n    ] = false;\n    model.copyAttributeFlags[AttributeCopyOperations.INTERPOLATE][\n      AttributeTypes.GLOBALIDS\n    ] = false;\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][\n      AttributeTypes.PEDIGREEIDS\n    ] = false;\n  });\n\n  // Process dataArrays if any\n  if (model.dataArrays && Object.keys(model.dataArrays).length) {\n    Object.keys(model.dataArrays).forEach((name) => {\n      if (\n        !model.dataArrays[name].ref &&\n        model.dataArrays[name].type === 'vtkDataArray'\n      ) {\n        publicAPI.addArray(vtkDataArray.newInstance(model.dataArrays[name]));\n      }\n    });\n  }\n\n  const superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = (other, debug) => {\n    superShallowCopy(other, debug);\n    model.arrays = other.getArrays().map((arr) => {\n      const arrNew = arr.newClone();\n      arrNew.shallowCopy(arr, debug);\n      return { data: arrNew };\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  activeScalars: -1,\n  activeVectors: -1,\n  activeTensors: -1,\n  activeNormals: -1,\n  activeTCoords: -1,\n  activeGlobalIds: -1,\n  activePedigreeIds: -1,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  vtkFieldData.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, [\n    'activeScalars',\n    'activeNormals',\n    'activeTCoords',\n    'activeVectors',\n    'activeTensors',\n    'activeGlobalIds',\n    'activePedigreeIds',\n  ]);\n\n  if (!model.arrays) {\n    model.arrays = {};\n  }\n\n  // Object specific methods\n  vtkDataSetAttributes(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkDataSetAttributes');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, Constants);\n","import macro from 'vtk.js/Sources/macro';\nimport vtk from 'vtk.js/Sources/vtk';\nimport vtkDataSetAttributes from 'vtk.js/Sources/Common/DataModel/DataSetAttributes';\nimport Constants from 'vtk.js/Sources/Common/DataModel/DataSet/Constants';\n\n// import vtkBoundingBox from '../BoundingBox';\n// import * as vtkMath from '../../Core/Math';\n//\n// function getBounds(dataset) {\n//   if (dataset.bounds) {\n//     return dataset.bounds;\n//   }\n//   if (dataset.type && dataset[dataset.type]) {\n//     const ds = dataset[dataset.type];\n//     if (ds.bounds) {\n//       return ds.bounds;\n//     }\n//     if (ds.Points && ds.Points.bounds) {\n//       return ds.Points.bounds;\n//     }\n\n//     if (ds.Points && ds.Points.values) {\n//       const array = ds.Points.values;\n//       const bbox = vtkBoundingBox.newInstance();\n//       const size = array.length;\n//       const delta = ds.Points.numberOfComponents ? ds.Points.numberOfComponents : 3;\n//       for (let idx = 0; idx < size; idx += delta) {\n//         bbox.addPoint(array[idx * delta], array[(idx * delta) + 1], array[(idx * delta) + 2]);\n//       }\n//       ds.Points.bounds = bbox.getBounds();\n//       return ds.Points.bounds;\n//     }\n//   }\n//   return vtkMath.createUninitializedBounds();\n// }\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nconst DATASET_FIELDS = ['pointData', 'cellData', 'fieldData'];\n\n// ----------------------------------------------------------------------------\n// vtkDataSet methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataSet(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkDataSet');\n\n  // Add dataset attributes\n  DATASET_FIELDS.forEach((fieldName) => {\n    if (!model[fieldName]) {\n      model[fieldName] = vtkDataSetAttributes.newInstance();\n    } else {\n      model[fieldName] = vtk(model[fieldName]);\n    }\n  });\n\n  const superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = (other, debug = false) => {\n    superShallowCopy(other, debug);\n    DATASET_FIELDS.forEach((fieldName) => {\n      model[fieldName] = vtkDataSetAttributes.newInstance();\n      model[fieldName].shallowCopy(other.getReferenceByName(fieldName));\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // pointData: null,\n  // cellData: null,\n  // fieldData: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, DATASET_FIELDS);\n\n  // Object specific methods\n  vtkDataSet(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkDataSet');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, Constants);\n","// Specify how data arrays can be used by data objects\nexport const FieldDataTypes = {\n  UNIFORM: 0, // data that does not vary over points/cells/etc.\n  DATA_OBJECT_FIELD: 0, // to match VTK\n\n  COORDINATE: 1, // data that specifies the location of each point\n  POINT_DATA: 1, // to match VTK\n\n  POINT: 2, // data defined at each point, but that does not specify the point location\n  POINT_FIELD_DATA: 2, // to match VTK\n\n  CELL: 3, // data defined at each cell, but that does not specify the cell\n  CELL_FIELD_DATA: 3, // to match VTK\n\n  VERTEX: 4, // data defined at each graph vertex, but that does not specify the graph vertex\n  VERTEX_FIELD_DATA: 4, // to match VTK\n\n  EDGE: 5, // data defined at each graph edge, but that does not specify the graph edge\n  EDGE_FIELD_DATA: 5, // to match VTK\n\n  ROW: 6, // data specifying a table row\n  ROW_DATA: 6, // to match VTK\n};\n\nexport const FieldAssociations = {\n  FIELD_ASSOCIATION_POINTS: 0,\n  FIELD_ASSOCIATION_CELLS: 1,\n  FIELD_ASSOCIATION_NONE: 2,\n  FIELD_ASSOCIATION_POINTS_THEN_CELLS: 3,\n  FIELD_ASSOCIATION_VERTICES: 4,\n  FIELD_ASSOCIATION_EDGES: 5,\n  FIELD_ASSOCIATION_ROWS: 6,\n  NUMBER_OF_ASSOCIATIONS: 7,\n};\n\nexport default {\n  FieldDataTypes,\n  FieldAssociations,\n};\n","import { vec3, quat, mat4 } from 'gl-matrix';\n\nimport macro from 'vtk.js/Sources/macro';\nimport vtkBoundingBox from 'vtk.js/Sources/Common/DataModel/BoundingBox';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkProp from 'vtk.js/Sources/Rendering/Core/Prop';\n\n// ----------------------------------------------------------------------------\n// vtkProp3D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkProp3D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProp3D');\n\n  publicAPI.addPosition = (deltaXYZ) => {\n    model.position = model.position.map(\n      (value, index) => value + deltaXYZ[index]\n    );\n    publicAPI.modified();\n  };\n\n  publicAPI.getOrientationWXYZ = () => {\n    const q = quat.create();\n    mat4.getRotation(q, model.rotation);\n    const oaxis = vec3.create();\n    const w = quat.getAxisAngle(oaxis, q);\n    return [vtkMath.degreesFromRadians(w), oaxis[0], oaxis[1], oaxis[2]];\n  };\n\n  publicAPI.rotateX = (val) => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateX(\n      model.rotation,\n      model.rotation,\n      vtkMath.radiansFromDegrees(val)\n    );\n    publicAPI.modified();\n  };\n\n  publicAPI.rotateY = (val) => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateY(\n      model.rotation,\n      model.rotation,\n      vtkMath.radiansFromDegrees(val)\n    );\n    publicAPI.modified();\n  };\n\n  publicAPI.rotateZ = (val) => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateZ(\n      model.rotation,\n      model.rotation,\n      vtkMath.radiansFromDegrees(val)\n    );\n    publicAPI.modified();\n  };\n\n  publicAPI.rotateWXYZ = (degrees, x, y, z) => {\n    if (degrees === 0.0 || (x === 0.0 && y === 0.0 && z === 0.0)) {\n      return;\n    }\n\n    // convert to radians\n    const angle = vtkMath.radiansFromDegrees(degrees);\n\n    const q = quat.create();\n    quat.setAxisAngle(q, [x, y, z], angle);\n\n    const quatMat = mat4.create();\n    mat4.fromQuat(quatMat, q);\n    mat4.multiply(model.rotation, model.rotation, quatMat);\n    publicAPI.modified();\n  };\n\n  publicAPI.setUserMatrix = (matrix) => {\n    mat4.copy(model.userMatrix, matrix);\n    publicAPI.modified();\n  };\n\n  publicAPI.getMatrix = () => {\n    publicAPI.computeMatrix();\n    return model.matrix;\n  };\n\n  publicAPI.computeMatrix = () => {\n    // check whether or not need to rebuild the matrix\n    if (publicAPI.getMTime() > model.matrixMTime.getMTime()) {\n      mat4.identity(model.matrix);\n      if (model.userMatrix) {\n        mat4.multiply(model.matrix, model.matrix, model.userMatrix);\n      }\n      mat4.translate(model.matrix, model.matrix, model.origin);\n      mat4.translate(model.matrix, model.matrix, model.position);\n      mat4.multiply(model.matrix, model.matrix, model.rotation);\n      mat4.scale(model.matrix, model.matrix, model.scale);\n      mat4.translate(model.matrix, model.matrix, [\n        -model.origin[0],\n        -model.origin[1],\n        -model.origin[2],\n      ]);\n      mat4.transpose(model.matrix, model.matrix);\n\n      // check for identity\n      model.isIdentity = true;\n      for (let i = 0; i < 4; ++i) {\n        for (let j = 0; j < 4; ++j) {\n          if ((i === j ? 1.0 : 0.0) !== model.matrix[i + j * 4]) {\n            model.isIdentity = false;\n          }\n        }\n      }\n      model.matrixMTime.modified();\n    }\n  };\n\n  publicAPI.getCenter = () => vtkBoundingBox.getCenter(model.bounds);\n  publicAPI.getLength = () => vtkBoundingBox.getLength(model.bounds);\n  publicAPI.getXRange = () => vtkBoundingBox.getXRange(model.bounds);\n  publicAPI.getYRange = () => vtkBoundingBox.getYRange(model.bounds);\n  publicAPI.getZRange = () => vtkBoundingBox.getZRange(model.bounds);\n\n  publicAPI.getUserMatrix = () => model.userMatrix;\n\n  function updateIdentityFlag() {\n    publicAPI.computeMatrix();\n  }\n\n  publicAPI.onModified(updateIdentityFlag);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  origin: [0, 0, 0],\n  position: [0, 0, 0],\n  rotation: null,\n  scale: [1, 1, 1],\n  bounds: [1, -1, 1, -1, 1, -1],\n\n  userMatrix: null,\n  userMatrixMTime: null,\n\n  cachedProp3D: null,\n  isIdentity: true,\n  matrixMTime: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp.extend(publicAPI, model, initialValues);\n\n  model.matrixMTime = {};\n  macro.obj(model.matrixMTime);\n\n  // Build VTK API\n  macro.get(publicAPI, model, ['bounds', 'isIdentity']);\n  macro.setGetArray(\n    publicAPI,\n    model,\n    ['origin', 'position', 'orientation', 'scale'],\n    3\n  );\n\n  // Object internal instance\n  model.matrix = mat4.create();\n  model.rotation = mat4.create();\n  model.userMatrix = mat4.create();\n  model.transform = null; // FIXME\n\n  // Object methods\n  vtkProp3D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkProp3D');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macro';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\nimport Constants from 'vtk.js/Sources/Common/Core/ScalarsToColors/Constants';\nimport vtkMapper from 'vtk.js/Sources/Rendering/Core/Mapper/Constants'; // Need to go inside Constants otherwise dependency loop\n\nconst { ScalarMappingTarget, VectorMode } = Constants;\nconst { VtkDataTypes } = vtkDataArray;\nconst { ColorMode } = vtkMapper;\nconst { vtkErrorMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// Add module-level functions or api that you want to expose statically via\n// the next section...\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nfunction intColorToUChar(c) {\n  return c;\n}\nfunction floatColorToUChar(c) {\n  return Math.floor(c * 255.0 + 0.5);\n}\n\n// ----------------------------------------------------------------------------\n// vtkScalarsToColors methods\n// ----------------------------------------------------------------------------\n\nfunction vtkScalarsToColors(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkScalarsToColors');\n\n  publicAPI.setVectorModeToMagnitude = () =>\n    publicAPI.setVectorMode(VectorMode.MAGNITUDE);\n  publicAPI.setVectorModeToComponent = () =>\n    publicAPI.setVectorMode(VectorMode.COMPONENT);\n  publicAPI.setVectorModeToRGBColors = () =>\n    publicAPI.setVectorMode(VectorMode.RGBCOLORS);\n\n  publicAPI.build = () => {};\n\n  publicAPI.isOpaque = () => true;\n\n  //----------------------------------------------------------------------------\n  publicAPI.setAnnotations = (values, annotations) => {\n    if ((values && !annotations) || (!values && annotations)) {\n      return;\n    }\n\n    if (\n      values &&\n      annotations &&\n      values.getNumberOfTuples() !== annotations.getNumberOfTuples()\n    ) {\n      vtkErrorMacro(\n        'Values and annotations do not have the same number of tuples so ignoring'\n      );\n      return;\n    }\n\n    model.annotationArray = [];\n\n    if (annotations && values) {\n      const num = annotations.getNumberOfTuples();\n      for (let i = 0; i < num; i++) {\n        model.annotationArray.push({\n          value: values[i],\n          annotation: annotations[i],\n        });\n      }\n    }\n\n    publicAPI.updateAnnotatedValueMap();\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setAnnotation = (value, annotation) => {\n    let i = publicAPI.checkForAnnotatedValue(value);\n    let modified = false;\n    if (i >= 0) {\n      if (model.annotationArray[i].annotation !== annotation) {\n        model.annotationArray[i].annotation = annotation;\n        modified = true;\n      }\n    } else {\n      model.annotationArray.push({ value, annotation });\n      i = model.annotationArray.length - 1;\n      modified = true;\n    }\n    if (modified) {\n      publicAPI.updateAnnotatedValueMap();\n      publicAPI.modified();\n    }\n    return i;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getNumberOfAnnotatedValues = () => model.annotationArray.length;\n\n  //----------------------------------------------------------------------------\n  publicAPI.getAnnotatedValue = (idx) => {\n    if (idx < 0 || idx >= model.annotationArray.length) {\n      return null;\n    }\n    return model.annotationArray[idx].value;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getAnnotation = (idx) => {\n    if (model.annotationArray[idx] === undefined) {\n      return null;\n    }\n    return model.annotationArray[idx].annotation;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getAnnotatedValueIndex = (val) =>\n    model.annotationArray.length ? publicAPI.checkForAnnotatedValue(val) : -1;\n\n  //----------------------------------------------------------------------------\n  publicAPI.removeAnnotation = (value) => {\n    const i = publicAPI.checkForAnnotatedValue(value);\n    const needToRemove = i >= 0;\n    if (needToRemove) {\n      model.annotationArray.splice(i, 1);\n      publicAPI.updateAnnotatedValueMap();\n      publicAPI.modified();\n    }\n    return needToRemove;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.resetAnnotations = () => {\n    model.annotationArray = [];\n    model.annotatedValueMap = [];\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getAnnotationColor = (val, rgba) => {\n    if (model.indexedLookup) {\n      const i = publicAPI.getAnnotatedValueIndex(val);\n      publicAPI.getIndexedColor(i, rgba);\n    } else {\n      publicAPI.getColor(parseFloat(val), rgba);\n      rgba[3] = 1.0;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.checkForAnnotatedValue = (value) =>\n    publicAPI.getAnnotatedValueIndexInternal(value);\n\n  //----------------------------------------------------------------------------\n  // An unsafe version of vtkScalarsToColors::CheckForAnnotatedValue for\n  // internal use (no pointer checks performed)\n  publicAPI.getAnnotatedValueIndexInternal = (value) => {\n    if (model.annotatedValueMap[value] !== undefined) {\n      const na = model.annotationArray.length;\n      return model.annotatedValueMap[value] % na;\n    }\n    return -1;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getIndexedColor = (val, rgba) => {\n    rgba[0] = 0.0;\n    rgba[1] = 0.0;\n    rgba[2] = 0.0;\n    rgba[3] = 0.0;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.updateAnnotatedValueMap = () => {\n    model.annotatedValueMap = [];\n\n    const na = model.annotationArray.length;\n    for (let i = 0; i < na; ++i) {\n      model.annotatedValueMap[model.annotationArray[i].value] = i;\n    }\n  };\n\n  // Description:\n  // Internal methods that map a data array into a 4-component,\n  // unsigned char RGBA array. The color mode determines the behavior\n  // of mapping. If ColorMode.DEFAULT is set, then unsigned char\n  // data arrays are treated as colors (and converted to RGBA if\n  // necessary); If ColorMode.DIRECT_SCALARS is set, then all arrays\n  // are treated as colors (integer types are clamped in the range 0-255,\n  // floating point arrays are clamped in the range 0.0-1.0. Note 'char' does\n  // not have enough values to represent a color so mapping this type is\n  // considered an error);\n  // otherwise, the data is mapped through this instance\n  // of ScalarsToColors. The component argument is used for data\n  // arrays with more than one component; it indicates which component\n  // to use to do the blending.  When the component argument is -1,\n  // then the this object uses its own selected technique to change a\n  // vector into a scalar to map.\n  publicAPI.mapScalars = (scalars, colorMode, componentIn) => {\n    const numberOfComponents = scalars.getNumberOfComponents();\n\n    let newColors = null;\n\n    // map scalars through lookup table only if needed\n    if (\n      (colorMode === ColorMode.DEFAULT &&\n        scalars.getDataType() === VtkDataTypes.UNSIGNED_CHAR) ||\n      (colorMode === ColorMode.DIRECT_SCALARS && scalars)\n    ) {\n      newColors = publicAPI.convertToRGBA(\n        scalars,\n        numberOfComponents,\n        scalars.getNumberOfTuples()\n      );\n    } else {\n      const newscalars = {\n        type: 'vtkDataArray',\n        name: 'temp',\n        numberOfComponents: 4,\n        dataType: VtkDataTypes.UNSIGNED_CHAR,\n      };\n\n      const s = new window[newscalars.dataType](\n        4 * scalars.getNumberOfTuples()\n      );\n      newscalars.values = s;\n      newscalars.size = s.length;\n      newColors = vtkDataArray.newInstance(newscalars);\n\n      let component = componentIn;\n\n      // If mapper did not specify a component, use the VectorMode\n      if (component < 0 && numberOfComponents > 1) {\n        publicAPI.mapVectorsThroughTable(\n          scalars,\n          newColors,\n          ScalarMappingTarget.RGBA,\n          -1,\n          -1\n        );\n      } else {\n        if (component < 0) {\n          component = 0;\n        }\n        if (component >= numberOfComponents) {\n          component = numberOfComponents - 1;\n        }\n\n        // Map the scalars to colors\n        publicAPI.mapScalarsThroughTable(\n          scalars,\n          newColors,\n          ScalarMappingTarget.RGBA,\n          component\n        );\n      }\n    }\n\n    return newColors;\n  };\n\n  publicAPI.mapVectorsToMagnitude = (input, output, compsToUse) => {\n    const length = input.getNumberOfTuples();\n    const inIncr = input.getNumberOfComponents();\n\n    const outputV = output.getData();\n    const inputV = input.getData();\n\n    for (let i = 0; i < length; i++) {\n      let sum = 0.0;\n      for (let j = 0; j < compsToUse; j++) {\n        sum += inputV[i * inIncr + j] * inputV[i * inIncr + j];\n      }\n      outputV[i] = Math.sqrt(sum);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  // Map a set of vector values through the table\n  publicAPI.mapVectorsThroughTable = (\n    input,\n    output,\n    outputFormat,\n    vectorComponentIn,\n    vectorSizeIn\n  ) => {\n    let vectorMode = publicAPI.getVectorMode();\n    let vectorSize = vectorSizeIn;\n    let vectorComponent = vectorComponentIn;\n    const inComponents = input.getNumberOfComponents();\n\n    if (vectorMode === VectorMode.COMPONENT) {\n      // make sure vectorComponent is within allowed range\n      if (vectorComponent === -1) {\n        // if set to -1, use default value provided by table\n        vectorComponent = publicAPI.getVectorComponent();\n      }\n      if (vectorComponent < 0) {\n        vectorComponent = 0;\n      }\n      if (vectorComponent >= inComponents) {\n        vectorComponent = inComponents - 1;\n      }\n    } else {\n      // make sure vectorSize is within allowed range\n      if (vectorSize === -1) {\n        // if set to -1, use default value provided by table\n        vectorSize = publicAPI.getVectorSize();\n      }\n      if (vectorSize <= 0) {\n        vectorComponent = 0;\n        vectorSize = inComponents;\n      } else {\n        if (vectorComponent < 0) {\n          vectorComponent = 0;\n        }\n        if (vectorComponent >= inComponents) {\n          vectorComponent = inComponents - 1;\n        }\n        if (vectorComponent + vectorSize > inComponents) {\n          vectorSize = inComponents - vectorComponent;\n        }\n      }\n\n      if (\n        vectorMode === VectorMode.MAGNITUDE &&\n        (inComponents === 1 || vectorSize === 1)\n      ) {\n        vectorMode = VectorMode.COMPONENT;\n      }\n    }\n\n    // increment input pointer to the first component to map\n    let inputOffset = 0;\n    if (vectorComponent > 0) {\n      inputOffset = vectorComponent;\n    }\n\n    // map according to the current vector mode\n    switch (vectorMode) {\n      case VectorMode.COMPONENT: {\n        publicAPI.mapScalarsThroughTable(\n          input,\n          output,\n          outputFormat,\n          inputOffset\n        );\n        break;\n      }\n\n      default:\n      case VectorMode.MAGNITUDE: {\n        const magValues = vtkDataArray.newInstance({\n          numberOfComponents: 1,\n          values: new Float32Array(input.getNumberOfTuples()),\n        });\n\n        publicAPI.mapVectorsToMagnitude(input, magValues, vectorSize);\n        publicAPI.mapScalarsThroughTable(magValues, output, outputFormat, 0);\n        break;\n      }\n\n      case VectorMode.RGBCOLORS: {\n        // publicAPI.mapColorsToColors(\n        //   input, output, inComponents, vectorSize,\n        //   outputFormat);\n        break;\n      }\n    }\n  };\n\n  publicAPI.luminanceToRGBA = (newColors, colors, alpha, convtFun) => {\n    const a = convtFun(alpha);\n\n    const values = colors.getData();\n    const newValues = newColors.getData();\n    const size = values.length;\n    const component = 0;\n    const tuple = 1;\n\n    let count = 0;\n    for (let i = component; i < size; i += tuple) {\n      const l = convtFun(values[i]);\n      newValues[count * 4] = l;\n      newValues[count * 4 + 1] = l;\n      newValues[count * 4 + 2] = l;\n      newValues[count * 4 + 3] = a;\n      count++;\n    }\n  };\n\n  publicAPI.luminanceAlphaToRGBA = (newColors, colors, alpha, convtFun) => {\n    const values = colors.getData();\n    const newValues = newColors.getData();\n    const size = values.length;\n    const component = 0;\n    const tuple = 2;\n\n    let count = 0;\n    for (let i = component; i < size; i += tuple) {\n      const l = convtFun(values[i]);\n      newValues[count] = l;\n      newValues[count + 1] = l;\n      newValues[count + 2] = l;\n      newValues[count + 3] = convtFun(values[i + 1]) * alpha;\n      count += 4;\n    }\n  };\n\n  publicAPI.rGBToRGBA = (newColors, colors, alpha, convtFun) => {\n    const a = floatColorToUChar(alpha);\n\n    const values = colors.getData();\n    const newValues = newColors.getData();\n    const size = values.length;\n    const component = 0;\n    const tuple = 3;\n\n    let count = 0;\n    for (let i = component; i < size; i += tuple) {\n      newValues[count * 4] = convtFun(values[i]);\n      newValues[count * 4 + 1] = convtFun(values[i + 1]);\n      newValues[count * 4 + 2] = convtFun(values[i + 2]);\n      newValues[count * 4 + 3] = a;\n      count++;\n    }\n  };\n\n  publicAPI.rGBAToRGBA = (newColors, colors, alpha, convtFun) => {\n    const values = colors.getData();\n    const newValues = newColors.getData();\n    const size = values.length;\n    const component = 0;\n    const tuple = 4;\n\n    let count = 0;\n    for (let i = component; i < size; i += tuple) {\n      newValues[count * 4] = convtFun(values[i]);\n      newValues[count * 4 + 1] = convtFun(values[i + 1]);\n      newValues[count * 4 + 2] = convtFun(values[i + 2]);\n      newValues[count * 4 + 3] = convtFun(values[i + 3]) * alpha;\n      count++;\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.convertToRGBA = (colors, numComp, numTuples) => {\n    let { alpha } = model;\n    if (\n      numComp === 4 &&\n      alpha >= 1.0 &&\n      colors.getDataType() === VtkDataTypes.UNSIGNED_CHAR\n    ) {\n      return colors;\n    }\n\n    const newColors = vtkDataArray.newInstance({\n      numberOfComponents: 4,\n      empty: true,\n      size: 4 * numTuples,\n      dataType: VtkDataTypes.UNSIGNED_CHAR,\n    });\n\n    if (numTuples <= 0) {\n      return newColors;\n    }\n\n    alpha = alpha > 0 ? alpha : 0;\n    alpha = alpha < 1 ? alpha : 1;\n\n    let convtFun = intColorToUChar;\n    if (\n      colors.getDataType() === VtkDataTypes.FLOAT ||\n      colors.getDataType() === VtkDataTypes.DOUBLE\n    ) {\n      convtFun = floatColorToUChar;\n    }\n\n    switch (numComp) {\n      case 1:\n        publicAPI.luminanceToRGBA(newColors, colors, alpha, convtFun);\n        break;\n\n      case 2:\n        publicAPI.luminanceAlphaToRGBA(newColors, colors, convtFun);\n        break;\n\n      case 3:\n        publicAPI.rGBToRGBA(newColors, colors, alpha, convtFun);\n        break;\n\n      case 4:\n        publicAPI.rGBAToRGBA(newColors, colors, alpha, convtFun);\n        break;\n\n      default:\n        vtkErrorMacro('Cannot convert colors');\n        return null;\n    }\n\n    return newColors;\n  };\n\n  publicAPI.usingLogScale = () => false;\n\n  publicAPI.getNumberOfAvailableColors = () => 256 * 256 * 256;\n\n  publicAPI.setRange = (min, max) => publicAPI.setMappingRange(min, max);\n  publicAPI.getRange = (min, max) => publicAPI.getMappingRange();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  alpha: 1.0,\n  vectorComponent: 0,\n  vectorSize: -1,\n  vectorMode: VectorMode.COMPONENT,\n  mappingRange: null,\n  annotationArray: null,\n  annotatedValueMap: null,\n  indexedLookup: false,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  model.mappingRange = [0, 255];\n  model.annotationArray = [];\n  model.annotatedValueMap = [];\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, [\n    'vectorSize',\n    'vectorComponent',\n    'vectorMode',\n    'alpha',\n    'indexedLookup',\n  ]);\n\n  // Create set macros for array (needs to know size)\n  macro.setArray(publicAPI, model, ['mappingRange'], 2);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['mappingRange']);\n\n  // For more macro methods, see \"Sources/macro.js\"\n\n  // Object specific methods\n  vtkScalarsToColors(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkScalarsToColors');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, Constants);\n","import macro from 'vtk.js/Sources/macro';\n\nconst { vtkErrorMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkPiecewiseFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPiecewiseFunction(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPiecewiseFunction');\n\n  // Return the number of points which specify this function\n  publicAPI.getSize = () => model.nodes.length;\n\n  // Return the type of function stored in object:\n  // Function Types:\n  //    0 : Constant        (No change in slope between end points)\n  //    1 : NonDecreasing   (Always increasing or zero slope)\n  //    2 : NonIncreasing   (Always decreasing or zero slope)\n  //    3 : Varied          (Contains both decreasing and increasing slopes)\n  //    4 : Unknown         (Error condition)\n  //\n  publicAPI.getType = () => {\n    let value;\n    let prevValue = 0.0;\n    let functionType = 0;\n\n    if (model.nodes.length > 0) {\n      prevValue = model.nodes[0].y;\n    }\n\n    for (let i = 1; i < model.nodes.length; i++) {\n      value = model.nodes[i].y;\n\n      // Do not change the function type if equal\n      if (value !== prevValue) {\n        if (value > prevValue) {\n          switch (functionType) {\n            case 0:\n            case 1:\n              functionType = 1; // NonDecreasing\n              break;\n            default:\n            case 2:\n              functionType = 3; // Varied\n              break;\n          }\n        } else {\n          // value < prev_value\n          switch (functionType) {\n            case 0:\n            case 2:\n              functionType = 2; // NonIncreasing\n              break;\n            default:\n            case 1:\n              functionType = 3; // Varied\n              break;\n          }\n        }\n      }\n\n      prevValue = value;\n\n      // Exit loop if we find a Varied function\n      if (functionType === 3) {\n        break;\n      }\n    }\n\n    switch (functionType) {\n      case 0:\n        return 'Constant';\n      case 1:\n        return 'NonDecreasing';\n      case 2:\n        return 'NonIncreasing';\n      default:\n      case 3:\n        return 'Varied';\n    }\n  };\n\n  // Since we no longer store the data in an array, we must\n  // copy out of the vector into an array. No modified check -\n  // could be added if performance is a problem\n  publicAPI.getDataPointer = () => {\n    const size = model.nodes.length;\n\n    model.function = null;\n\n    if (size > 0) {\n      model.function = [];\n      for (let i = 0; i < size; i++) {\n        model.function[2 * i] = model.nodes[i].x;\n        model.function[2 * i + 1] = model.nodes[i].y;\n      }\n    }\n    return model.function;\n  };\n\n  // Returns the first point location which starts a non-zero segment of the\n  // function. Note that the value at this point may be zero.\n  publicAPI.getFirstNonZeroValue = () => {\n    // Check if no points specified\n    if (model.nodes.length === 0) {\n      return 0;\n    }\n\n    let allZero = 1;\n    let x = 0.0;\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].y !== 0.0) {\n        allZero = 0;\n        break;\n      }\n    }\n\n    // If every specified point has a zero value then return\n    // a large value\n    if (allZero) {\n      x = Number.MAX_VALUE;\n    } else if (i > 0) {\n      // A point was found with a non-zero value\n      // Return the value of the point that precedes this one\n      x = model.nodes[i - 1].x;\n    } else if (model.clamping) {\n      // If this is the first point in the function, return its\n      // value is clamping is off, otherwise VTK_DOUBLE_MIN if\n      // clamping is on.\n      x = -Number.MAX_VALUE;\n    } else {\n      x = model.nodes[0].x;\n    }\n\n    return x;\n  };\n\n  // For a specified index value, get the node parameters\n  publicAPI.getNodeValue = (index, val) => {\n    const size = model.nodes.length;\n\n    if (index < 0 || index >= size) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n\n    val[0] = model.nodes[index].x;\n    val[1] = model.nodes[index].y;\n    val[2] = model.nodes[index].midpoint;\n    val[3] = model.nodes[index].sharpness;\n\n    return 1;\n  };\n\n  // For a specified index value, get the node parameters\n  publicAPI.setNodeValue = (index, val) => {\n    const size = model.nodes.length;\n\n    if (index < 0 || index >= size) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n\n    const oldX = model.nodes[index].x;\n    model.nodes[index].x = val[0];\n    model.nodes[index].y = val[1];\n    model.nodes[index].midpoint = val[2];\n    model.nodes[index].sharpness = val[3];\n\n    if (oldX !== val[0]) {\n      // The point has been moved, the order of points or the range might have\n      // been modified.\n      publicAPI.sortAndUpdateRange();\n      // No need to call Modified() here because SortAndUpdateRange() has done it\n      // already.\n    } else {\n      publicAPI.modified();\n    }\n\n    return 1;\n  };\n\n  // Adds a point to the function. If a duplicate point is inserted\n  // then the function value at that location is set to the new value.\n  // This is the legacy version that assumes midpoint = 0.5 and\n  // sharpness = 0.0\n  publicAPI.addPoint = (x, y) => publicAPI.addPointLong(x, y, 0.5, 0.0);\n\n  // Adds a point to the function and returns the array index of the point.\n  publicAPI.addPointLong = (x, y, midpoint, sharpness) => {\n    // Error check\n    if (midpoint < 0.0 || midpoint > 1.0) {\n      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    if (sharpness < 0.0 || sharpness > 1.0) {\n      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    // remove any node already at this X location\n    if (!model.allowDuplicateScalars) {\n      publicAPI.removePoint(x);\n    }\n\n    // Create the new node\n    const node = { x, y, midpoint, sharpness };\n\n    // Add it, then sort to get everything in order\n    model.nodes.push(node);\n    publicAPI.sortAndUpdateRange();\n\n    // Now find this node so we can return the index\n    let i;\n    for (i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If we didn't find it, something went horribly wrong so\n    // return -1\n    if (i < model.nodes.length) {\n      return i;\n    }\n\n    return -1;\n  };\n\n  publicAPI.setNodes = (nodes) => {\n    if (model.nodes !== nodes) {\n      model.nodes = nodes;\n      publicAPI.sortAndUpdateRange();\n    }\n  };\n\n  // Sort the vector in increasing order, then fill in\n  // the Range\n  publicAPI.sortAndUpdateRange = () => {\n    model.nodes.sort((a, b) => a.x - b.x);\n    const modifiedInvoked = publicAPI.updateRange();\n    // If range is updated, Modified() has been called, don't call it again.\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.updateRange = () => {\n    const oldRange = model.range.slice();\n\n    const size = model.nodes.length;\n    if (size) {\n      model.range[0] = model.nodes[0].x;\n      model.range[1] = model.nodes[size - 1].x;\n    } else {\n      model.range[0] = 0;\n      model.range[1] = 0;\n    }\n    // If the rage is the same, then no need to call Modified()\n    if (oldRange[0] === model.range[0] && oldRange[1] === model.range[1]) {\n      return false;\n    }\n\n    publicAPI.modified();\n    return true;\n  };\n\n  // Removes a point from the function. If no point is found then function\n  // remains the same.\n  publicAPI.removePoint = (x) => {\n    // First find the node since we need to know its\n    // index as our return value\n    let i;\n    for (i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If the node doesn't exist, we return -1\n    if (i >= model.nodes.length) {\n      return -1;\n    }\n\n    const retVal = i;\n\n    // If the first or last point has been removed, then we update the range\n    // No need to sort here as the order of points hasn't changed.\n    let modifiedInvoked = false;\n    model.nodes.splice(i, 1);\n    if (i === 0 || i === model.nodes.length) {\n      modifiedInvoked = publicAPI.updateRange();\n    }\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n\n    return retVal;\n  };\n\n  // Removes all points from the function.\n  publicAPI.removeAllPoints = () => {\n    model.nodes = [];\n    publicAPI.sortAndUpdateRange();\n  };\n\n  // Add in end points of line and remove any points between them\n  // Legacy method with no way to specify midpoint and sharpness\n  publicAPI.addSegment = (x1, y1, x2, y2) => {\n    // First, find all points in this range and remove them\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length; ) {\n      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {\n        model.nodes.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n\n    // Now add the points\n    publicAPI.addPoint(x1, y1, 0.5, 0.0);\n    publicAPI.addPoint(x2, y2, 0.5, 0.0);\n  };\n\n  // Return the value of the function at a position\n  publicAPI.getValue = (x) => {\n    const table = [];\n    publicAPI.getTable(x, x, 1, table);\n    return table[0];\n  };\n\n  // Remove all points outside the range, and make sure a point\n  // exists at each end of the range. Used as a convenience method\n  // for transfer function editors\n  publicAPI.adjustRange = (range) => {\n    if (range.length < 2) {\n      return 0;\n    }\n\n    const functionRange = publicAPI.getRange();\n\n    // Make sure we have points at each end of the range\n    if (functionRange[0] < range[0]) {\n      publicAPI.addPoint(range[0], publicAPI.getValue(range[0]));\n    } else {\n      publicAPI.addPoint(range[0], publicAPI.getValue(functionRange[0]));\n    }\n\n    if (functionRange[1] > range[1]) {\n      publicAPI.addPoint(range[1], publicAPI.getValue(range[1]));\n    } else {\n      publicAPI.addPoint(range[1], publicAPI.getValue(functionRange[1]));\n    }\n\n    // Remove all points out-of-range\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length; ) {\n      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {\n        model.nodes.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n\n    publicAPI.sortAndUpdateRange();\n    return 1;\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.estimateMinNumberOfSamples = (x1, x2) => {\n    const d = publicAPI.findMinimumXDistance();\n    return Math.ceil((x2 - x1) / d);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.findMinimumXDistance = () => {\n    const size = model.nodes.length;\n    if (size < 2) {\n      return -1.0;\n    }\n\n    let distance = model.nodes[1].x - model.nodes[0].x;\n    for (let i = 0; i < size - 1; i++) {\n      const currentDist = model.nodes[i + 1].x - model.nodes[i].x;\n      if (currentDist < distance) {\n        distance = currentDist;\n      }\n    }\n\n    return distance;\n  };\n\n  // Returns a table of function values evaluated at regular intervals\n  /* eslint-disable prefer-destructuring */\n  /* eslint-disable no-continue */\n  publicAPI.getTable = (xStart, xEnd, size, table, stride = 1) => {\n    let i;\n    let idx = 0;\n    const numNodes = model.nodes.length;\n\n    // Need to keep track of the last value so that\n    // we can fill in table locations past this with\n    // this value if Clamping is On.\n    let lastValue = 0.0;\n    if (numNodes !== 0) {\n      lastValue = model.nodes[numNodes - 1].y;\n    }\n\n    let x = 0.0;\n    let x1 = 0.0;\n    let x2 = 0.0;\n    let y1 = 0.0;\n    let y2 = 0.0;\n    let midpoint = 0.0;\n    let sharpness = 0.0;\n\n    // For each table entry\n    for (i = 0; i < size; i++) {\n      // Find our location in the table\n      const tidx = stride * i;\n\n      // Find our X location. If we are taking only 1 sample, make\n      // it halfway between start and end (usually start and end will\n      // be the same in this case)\n      if (size > 1) {\n        x = xStart + (i / (size - 1.0)) * (xEnd - xStart);\n      } else {\n        x = 0.5 * (xStart + xEnd);\n      }\n\n      // Do we need to move to the next node?\n      while (idx < numNodes && x > model.nodes[idx].x) {\n        idx++;\n        // If we are at a valid point index, fill in\n        // the value at this node, and the one before (the\n        // two that surround our current sample location)\n        // idx cannot be 0 since we just incremented it.\n        if (idx < numNodes) {\n          x1 = model.nodes[idx - 1].x;\n          x2 = model.nodes[idx].x;\n\n          y1 = model.nodes[idx - 1].y;\n          y2 = model.nodes[idx].y;\n\n          // We only need the previous midpoint and sharpness\n          // since these control this region\n          midpoint = model.nodes[idx - 1].midpoint;\n          sharpness = model.nodes[idx - 1].sharpness;\n\n          // Move midpoint away from extreme ends of range to avoid\n          // degenerate math\n          if (midpoint < 0.00001) {\n            midpoint = 0.00001;\n          }\n\n          if (midpoint > 0.99999) {\n            midpoint = 0.99999;\n          }\n        }\n      }\n\n      // Are we at the end? If so, just use the last value\n      if (idx >= numNodes) {\n        table[tidx] = model.clamping ? lastValue : 0.0;\n      } else if (idx === 0) {\n        // Are we before the first node? If so, duplicate this nodes values\n        table[tidx] = model.clamping ? model.nodes[0].y : 0.0;\n      } else {\n        // Otherwise, we are between two nodes - interpolate\n        // Our first attempt at a normalized location [0,1] -\n        // we will be modifying this based on midpoint and\n        // sharpness to get the curve shape we want and to have\n        // it pass through (y1+y2)/2 at the midpoint.\n        let s = (x - x1) / (x2 - x1);\n\n        // Readjust based on the midpoint - linear adjustment\n        if (s < midpoint) {\n          s = (0.5 * s) / midpoint;\n        } else {\n          s = 0.5 + (0.5 * (s - midpoint)) / (1.0 - midpoint);\n        }\n\n        // override for sharpness > 0.99\n        // In this case we just want piecewise constant\n        if (sharpness > 0.99) {\n          // Use the first value since we are below the midpoint\n          if (s < 0.5) {\n            table[tidx] = y1;\n            continue;\n          } else {\n            // Use the second value at or above the midpoint\n            table[tidx] = y2;\n            continue;\n          }\n        }\n\n        // Override for sharpness < 0.01\n        // In this case we want piecewise linear\n        if (sharpness < 0.01) {\n          // Simple linear interpolation\n          table[tidx] = (1 - s) * y1 + s * y2;\n          continue;\n        }\n\n        // We have a sharpness between [0.01, 0.99] - we will\n        // used a modified hermite curve interpolation where we\n        // derive the slope based on the sharpness, and we compress\n        // the curve non-linearly based on the sharpness\n\n        // First, we will adjust our position based on sharpness in\n        // order to make the curve sharper (closer to piecewise constant)\n        if (s < 0.5) {\n          s = 0.5 * (s * 2) ** (1.0 + 10 * sharpness);\n        } else if (s > 0.5) {\n          s = 1.0 - 0.5 * ((1.0 - s) * 2) ** (1 + 10 * sharpness);\n        }\n\n        // Compute some coefficients we will need for the hermite curve\n        const ss = s * s;\n        const sss = ss * s;\n\n        const h1 = 2 * sss - 3 * ss + 1;\n        const h2 = -2 * sss + 3 * ss;\n        const h3 = sss - 2 * ss + s;\n        const h4 = sss - ss;\n\n        // Use one slope for both end points\n        const slope = y2 - y1;\n        const t = (1.0 - sharpness) * slope;\n\n        // Compute the value\n        table[tidx] = h1 * y1 + h2 * y2 + h3 * t + h4 * t;\n\n        // Final error check to make sure we don't go outside\n        // the Y range\n        const min = y1 < y2 ? y1 : y2;\n        const max = y1 > y2 ? y1 : y2;\n\n        table[tidx] = table[tidx] < min ? min : table[tidx];\n        table[tidx] = table[tidx] > max ? max : table[tidx];\n      }\n    }\n  };\n}\n/* eslint-enable prefer-destructuring */\n/* eslint-enable no-continue */\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // model.function = NULL;\n  range: [0, 0],\n  clamping: true,\n  allowDuplicateScalars: false,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n\n  // Internal objects initialization\n  model.nodes = [];\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['allowDuplicateScalars', 'clamping']);\n\n  macro.setArray(publicAPI, model, ['range'], 2);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['range']);\n\n  // For more macro methods, see \"Sources/macro.js\"\n\n  // Object specific methods\n  vtkPiecewiseFunction(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkPiecewiseFunction');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend });\n","export const InterpolationType = {\n  NEAREST: 0,\n  LINEAR: 1,\n  FAST_LINEAR: 2,\n};\n\nexport default {\n  InterpolationType,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport Constants from 'vtk.js/Sources/Rendering/Core/VolumeMapper/Constants';\n\nconst { BlendMode } = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkVolumeMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeMapper');\n\n  publicAPI.getBounds = () => {\n    const input = publicAPI.getInputData();\n    if (!input) {\n      model.bounds = vtkMath.createUninitializedBounds();\n    } else {\n      if (!model.static) {\n        publicAPI.update();\n      }\n      model.bounds = input.getBounds();\n    }\n    return model.bounds;\n  };\n\n  publicAPI.update = () => {\n    publicAPI.getInputData();\n  };\n\n  publicAPI.setBlendModeToComposite = () => {\n    publicAPI.setBlendMode(BlendMode.COMPOSITE_BLEND);\n  };\n\n  publicAPI.setBlendModeToMaximumIntensity = () => {\n    publicAPI.setBlendMode(BlendMode.MAXIMUM_INTENSITY_BLEND);\n  };\n\n  publicAPI.setBlendModeToMinimumIntensity = () => {\n    publicAPI.setBlendMode(BlendMode.MINIMUM_INTENSITY_BLEND);\n  };\n\n  publicAPI.setBlendModeToAverageIntensity = () => {\n    publicAPI.setBlendMode(BlendMode.AVERAGE_INTENSITY_BLEND);\n  };\n\n  publicAPI.getBlendModeAsString = () =>\n    macro.enumToString(BlendMode, model.blendMode);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// TODO: what values to use for averageIPScalarRange to get GLSL to use max / min values like [-Math.inf, Math.inf]?\nconst DEFAULT_VALUES = {\n  bounds: [1, -1, 1, -1, 1, -1],\n  sampleDistance: 1.0,\n  imageSampleDistance: 1.0,\n  maximumSamplesPerRay: 1000,\n  autoAdjustSampleDistances: true,\n  blendMode: BlendMode.COMPOSITE_BLEND,\n  averageIPScalarRange: [-1000000.0, 1000000.0],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 1, 0);\n\n  macro.setGet(publicAPI, model, [\n    'sampleDistance',\n    'imageSampleDistance',\n    'maximumSamplesPerRay',\n    'autoAdjustSampleDistances',\n    'blendMode',\n  ]);\n\n  macro.setGetArray(publicAPI, model, ['averageIPScalarRange'], 2);\n\n  macro.event(publicAPI, model, 'lightingActivated');\n\n  // Object methods\n  vtkVolumeMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkVolumeMapper');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","export const ColorSpace = {\n  RGB: 0,\n  HSV: 1,\n  LAB: 2,\n  DIVERGING: 3,\n};\n\nexport const Scale = {\n  LINEAR: 0,\n  LOG10: 1,\n};\n\nexport default {\n  ColorSpace,\n  Scale,\n};\n","import vtkColorMaps from 'vtk.js/Sources/Rendering/Core/ColorTransferFunction/ColorMaps.json';\n\nconst presetMap = Object.create(null);\n\nvtkColorMaps\n  .filter((p) => p.RGBPoints)\n  .filter((p) => p.ColorSpace !== 'CIELAB')\n  .forEach((p) => {\n    presetMap[p.Name] = p;\n  });\n\n// ----------------------------------------------------------------------------\n\nconst rgbPresetNames = Object.keys(presetMap);\nrgbPresetNames.sort();\n\n// ----------------------------------------------------------------------------\n\nfunction getPresetByName(name) {\n  return presetMap[name];\n}\n\n// ----------------------------------------------------------------------------\n\nfunction addPreset(preset) {\n  if (!preset.RGBPoints || preset.ColorSpace === 'CIELAB') {\n    return;\n  }\n\n  if (!presetMap[preset.Name]) {\n    rgbPresetNames.push(preset.Name);\n    rgbPresetNames.sort();\n  }\n\n  presetMap[preset.Name] = preset;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction removePresetByName(name) {\n  const index = rgbPresetNames.indexOf(name);\n  if (index > -1) {\n    rgbPresetNames.splice(index, 1);\n  }\n  delete presetMap[name];\n}\n\n// ----------------------------------------------------------------------------\n\nexport default {\n  addPreset,\n  removePresetByName,\n  getPresetByName,\n  rgbPresetNames,\n};\n","import macro from 'vtk.js/Sources/macro';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkScalarsToColors from 'vtk.js/Sources/Common/Core/ScalarsToColors';\nimport Constants from 'vtk.js/Sources/Rendering/Core/ColorTransferFunction/Constants';\nimport vtkColorMaps from 'vtk.js/Sources/Rendering/Core/ColorTransferFunction/ColorMaps';\n\nconst { ColorSpace, Scale } = Constants;\nconst { ScalarMappingTarget } = vtkScalarsToColors;\nconst { vtkDebugMacro, vtkErrorMacro, vtkWarningMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n/* eslint-disable no-continue                                                */\n\n// Convert to and from a special polar version of CIELAB (useful for creating\n// continuous diverging color maps).\nfunction vtkColorTransferFunctionLabToMsh(lab, msh) {\n  const L = lab[0];\n  const a = lab[1];\n  const b = lab[2];\n  const M = Math.sqrt(L * L + a * a + b * b);\n  const s = M > 0.001 ? Math.acos(L / M) : 0.0;\n  const h = s > 0.001 ? Math.atan2(b, a) : 0.0;\n  msh[0] = M;\n  msh[1] = s;\n  msh[2] = h;\n}\n\nfunction vtkColorTransferFunctionMshToLab(msh, lab) {\n  const M = msh[0];\n  const s = msh[1];\n  const h = msh[2];\n\n  lab[0] = M * Math.cos(s);\n  lab[1] = M * Math.sin(s) * Math.cos(h);\n  lab[2] = M * Math.sin(s) * Math.sin(h);\n}\n\n// For the case when interpolating from a saturated color to an unsaturated\n// color, find a hue for the unsaturated color that makes sense.\nfunction vtkColorTransferFunctionAdjustHue(msh, unsatM) {\n  if (msh[0] >= unsatM - 0.1) {\n    // The best we can do is hold hue constant.\n    return msh[2];\n  }\n\n  // This equation is designed to make the perceptual change of the\n  // interpolation to be close to constant.\n  const hueSpin =\n    (msh[1] * Math.sqrt(unsatM * unsatM - msh[0] * msh[0])) /\n    (msh[0] * Math.sin(msh[1]));\n  // Spin hue away from 0 except in purple hues.\n  if (msh[2] > -0.3 * Math.PI) {\n    return msh[2] + hueSpin;\n  }\n\n  return msh[2] - hueSpin;\n}\n\nfunction vtkColorTransferFunctionAngleDiff(a1, a2) {\n  let adiff = a1 - a2;\n  if (adiff < 0.0) {\n    adiff = -adiff;\n  }\n  while (adiff >= 2.0 * Math.PI) {\n    adiff -= 2.0 * Math.PI;\n  }\n  if (adiff > Math.PI) {\n    adiff = 2.0 * Math.PI - adiff;\n  }\n  return adiff;\n}\n\n// Interpolate a diverging color map.\nfunction vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, result) {\n  const lab1 = [];\n  const lab2 = [];\n  vtkMath.rgb2lab(rgb1, lab1);\n  vtkMath.rgb2lab(rgb2, lab2);\n\n  const msh1 = [];\n  const msh2 = [];\n  vtkColorTransferFunctionLabToMsh(lab1, msh1);\n  vtkColorTransferFunctionLabToMsh(lab2, msh2);\n\n  // If the endpoints are distinct saturated colors, then place white in between\n  // them.\n  let localS = s;\n  if (\n    msh1[1] > 0.05 &&\n    msh2[1] > 0.05 &&\n    vtkColorTransferFunctionAngleDiff(msh1[2], msh2[2]) > 0.33 * Math.PI\n  ) {\n    // Insert the white midpoint by setting one end to white and adjusting the\n    // scalar value.\n    let Mmid = Math.max(msh1[0], msh2[0]);\n    Mmid = Math.max(88.0, Mmid);\n    if (s < 0.5) {\n      msh2[0] = Mmid;\n      msh2[1] = 0.0;\n      msh2[2] = 0.0;\n      localS *= 2.0;\n    } else {\n      msh1[0] = Mmid;\n      msh1[1] = 0.0;\n      msh1[2] = 0.0;\n      localS = 2.0 * localS - 1.0;\n    }\n  }\n\n  // If one color has no saturation, then its hue value is invalid.  In this\n  // case, we want to set it to something logical so that the interpolation of\n  // hue makes sense.\n  if (msh1[1] < 0.05 && msh2[1] > 0.05) {\n    msh1[2] = vtkColorTransferFunctionAdjustHue(msh2, msh1[0]);\n  } else if (msh2[1] < 0.05 && msh1[1] > 0.05) {\n    msh2[2] = vtkColorTransferFunctionAdjustHue(msh1, msh2[0]);\n  }\n\n  const mshTmp = [];\n  mshTmp[0] = (1 - localS) * msh1[0] + localS * msh2[0];\n  mshTmp[1] = (1 - localS) * msh1[1] + localS * msh2[1];\n  mshTmp[2] = (1 - localS) * msh1[2] + localS * msh2[2];\n\n  // Now convert back to RGB\n  const labTmp = [];\n  vtkColorTransferFunctionMshToLab(mshTmp, labTmp);\n  vtkMath.lab2rgb(labTmp, result);\n}\n\n// ----------------------------------------------------------------------------\n// vtkColorTransferFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkColorTransferFunction(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkColorTransferFunction');\n\n  // Return the number of points which specify this function\n  publicAPI.getSize = () => model.nodes.length;\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in RGB\n  publicAPI.addRGBPoint = (x, r, g, b) =>\n    publicAPI.addRGBPointLong(x, r, g, b, 0.5, 0.0);\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in RGB\n  publicAPI.addRGBPointLong = (x, r, g, b, midpoint, sharpness) => {\n    // Error check\n    if (midpoint < 0.0 || midpoint > 1.0) {\n      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    if (sharpness < 0.0 || sharpness > 1.0) {\n      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    // remove any node already at this X location\n    if (!model.allowDuplicateScalars) {\n      publicAPI.removePoint(x);\n    }\n\n    // Create the new node\n    const node = { x, r, g, b, midpoint, sharpness };\n\n    // Add it, then sort to get everything in order\n    model.nodes.push(node);\n    publicAPI.sortAndUpdateRange();\n\n    // We need to find the index of the node we just added in order\n    // to return this value\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If we didn't find it, something went horribly wrong so\n    // return -1\n    if (i < model.nodes.length) {\n      return i;\n    }\n\n    return -1;\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in HSV\n  publicAPI.addHSVPoint = (x, h, s, v) =>\n    publicAPI.addHSVPointLong(x, h, s, v, 0.5, 0.0);\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in HSV\n  publicAPI.addHSVPointLong = (x, h, s, v, midpoint, sharpness) => {\n    const rgb = [];\n    const hsv = [h, s, v];\n\n    vtkMath.hsv2rgb(hsv, rgb);\n    return publicAPI.addRGBPoint(\n      x,\n      rgb[0],\n      rgb[1],\n      rgb[2],\n      midpoint,\n      sharpness\n    );\n  };\n\n  //----------------------------------------------------------------------------\n  // Set nodes directly\n  publicAPI.setNodes = (nodes) => {\n    if (model.nodes !== nodes) {\n      model.nodes = nodes;\n      publicAPI.sortAndUpdateRange();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  // Sort the vector in increasing order, then fill in\n  // the Range\n  publicAPI.sortAndUpdateRange = () => {\n    model.nodes.sort((a, b) => a.x - b.x);\n\n    const modifiedInvoked = publicAPI.updateRange();\n    // If range is updated, Modified() has been called, don't call it again.\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.updateRange = () => {\n    const oldRange = [2];\n    oldRange[0] = model.mappingRange[0];\n    oldRange[1] = model.mappingRange[1];\n\n    const size = model.nodes.length;\n    if (size) {\n      model.mappingRange[0] = model.nodes[0].x;\n      model.mappingRange[1] = model.nodes[size - 1].x;\n    } else {\n      model.mappingRange[0] = 0;\n      model.mappingRange[1] = 0;\n    }\n\n    // If the range is the same, then no need to call Modified()\n    if (\n      oldRange[0] === model.mappingRange[0] &&\n      oldRange[1] === model.mappingRange[1]\n    ) {\n      return false;\n    }\n\n    publicAPI.modified();\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  // Remove a point\n  publicAPI.removePoint = (x) => {\n    // First find the node since we need to know its\n    // index as our return value\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    const retVal = i;\n\n    // If the node doesn't exist, we return -1\n    if (i >= model.nodes.length) {\n      return -1;\n    }\n\n    // If the first or last point has been removed, then we update the range\n    // No need to sort here as the order of points hasn't changed.\n    let modifiedInvoked = false;\n    model.nodes.splice(i, 1);\n    if (i === 0 || i === model.nodes.length) {\n      modifiedInvoked = publicAPI.updateRange();\n    }\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n\n    return retVal;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.movePoint = (oldX, newX) => {\n    if (oldX === newX) {\n      // Nothing to do.\n      return;\n    }\n\n    publicAPI.removePoint(newX);\n    for (let i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === oldX) {\n        model.nodes[i].x = newX;\n        publicAPI.sortAndUpdateRange();\n        break;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  // Remove all points\n  publicAPI.removeAllPoints = () => {\n    model.nodes = [];\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a line defined in RGB\n  publicAPI.addRGBSegment = (x1, r1, g1, b1, x2, r2, g2, b2) => {\n    // First, find all points in this range and remove them\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length; ) {\n      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {\n        model.nodes.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n\n    // Now add the points\n    publicAPI.addRGBPointLong(x1, r1, g1, b1, 0.5, 0.0);\n    publicAPI.addRGBPointLong(x2, r2, g2, b2, 0.5, 0.0);\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a line defined in HSV\n  publicAPI.addHSVSegment = (x1, h1, s1, v1, x2, h2, s2, v2) => {\n    const hsv1 = [h1, s1, v1];\n    const hsv2 = [h2, s2, v2];\n    const rgb1 = [];\n    const rgb2 = [];\n\n    vtkMath.hsv2rgb(hsv1, rgb1);\n    vtkMath.hsv2rgb(hsv2, rgb2);\n    publicAPI.addRGBSegment(\n      x1,\n      rgb1[0],\n      rgb1[1],\n      rgb1[2],\n      x2,\n      rgb2[0],\n      rgb2[1],\n      rgb2[2]\n    );\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the RGBA color evaluated at the specified location\n  publicAPI.mapValue = (x) => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n\n    return [\n      Math.floor(255.0 * rgb[0] + 0.5),\n      Math.floor(255.0 * rgb[1] + 0.5),\n      Math.floor(255.0 * rgb[2] + 0.5),\n      255,\n    ];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the RGB color evaluated at the specified location\n  publicAPI.getColor = (x, rgb) => {\n    if (model.indexedLookup) {\n      const numNodes = publicAPI.getSize();\n      // todo\n      const idx = publicAPI.getAnnotatedValueIndexInternal(x);\n      if (idx < 0 || numNodes === 0) {\n        publicAPI.getNanColor(rgb);\n      } else {\n        const nodeVal = [];\n        publicAPI.getNodeValue(idx % numNodes, nodeVal);\n        rgb[0] = nodeVal.r;\n        rgb[1] = nodeVal.g;\n        rgb[2] = nodeVal.b;\n      }\n      return;\n    }\n    publicAPI.getTable(x, x, 1, rgb);\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the red color evaluated at the specified location\n  publicAPI.getRedValue = (x) => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[0];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the green color evaluated at the specified location\n  publicAPI.getGreenValue = (x) => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[1];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the blue color evaluated at the specified location\n  publicAPI.getBlueValue = (x) => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[2];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns a table of RGB colors at regular intervals along the function\n  publicAPI.getTable = (xStart, xEnd, size, table) => {\n    // Special case: If either the start or end is a NaN, then all any\n    // interpolation done on them is also a NaN.  Therefore, fill the table with\n    // the NaN color.\n    if (vtkMath.isNan(xStart) || vtkMath.isNan(xEnd)) {\n      for (let i = 0; i < size; i++) {\n        table[i * 3 + 0] = model.nanColor[0];\n        table[i * 3 + 1] = model.nanColor[1];\n        table[i * 3 + 2] = model.nanColor[2];\n      }\n      return;\n    }\n\n    let idx = 0;\n    const numNodes = model.nodes.length;\n\n    // Need to keep track of the last value so that\n    // we can fill in table locations past this with\n    // this value if Clamping is On.\n    let lastR = 0.0;\n    let lastG = 0.0;\n    let lastB = 0.0;\n    if (numNodes !== 0) {\n      lastR = model.nodes[numNodes - 1].r;\n      lastG = model.nodes[numNodes - 1].g;\n      lastB = model.nodes[numNodes - 1].b;\n    }\n\n    let x = 0.0;\n    let x1 = 0.0;\n    let x2 = 0.0;\n    const rgb1 = [0.0, 0.0, 0.0];\n    const rgb2 = [0.0, 0.0, 0.0];\n    let midpoint = 0.0;\n    let sharpness = 0.0;\n\n    const tmpVec = [];\n\n    // If the scale is logarithmic, make sure the range is valid.\n    let usingLogScale = model.scale === Scale.LOG10;\n    if (usingLogScale) {\n      // Note: This requires range[0] <= range[1].\n      usingLogScale = model.mappingRange[0] > 0.0;\n    }\n\n    let logStart = 0.0;\n    let logEnd = 0.0;\n    let logX = 0.0;\n    if (usingLogScale) {\n      logStart = Math.log10(xStart);\n      logEnd = Math.log10(xEnd);\n    }\n\n    // For each table entry\n    for (let i = 0; i < size; i++) {\n      // Find our location in the table\n      const tidx = 3 * i;\n\n      // Find our X location. If we are taking only 1 sample, make\n      // it halfway between start and end (usually start and end will\n      // be the same in this case)\n      if (size > 1) {\n        if (usingLogScale) {\n          logX = logStart + (i / (size - 1.0)) * (logEnd - logStart);\n          x = 10.0 ** logX;\n        } else {\n          x = xStart + (i / (size - 1.0)) * (xEnd - xStart);\n        }\n      } else if (usingLogScale) {\n        logX = 0.5 * (logStart + logEnd);\n        x = 10.0 ** logX;\n      } else {\n        x = 0.5 * (xStart + xEnd);\n      }\n\n      // Do we need to move to the next node?\n      while (idx < numNodes && x > model.nodes[idx].x) {\n        idx++;\n        // If we are at a valid point index, fill in\n        // the value at this node, and the one before (the\n        // two that surround our current sample location)\n        // idx cannot be 0 since we just incremented it.\n        if (idx < numNodes) {\n          x1 = model.nodes[idx - 1].x;\n          x2 = model.nodes[idx].x;\n          if (usingLogScale) {\n            x1 = Math.log10(x1);\n            x2 = Math.log10(x2);\n          }\n\n          rgb1[0] = model.nodes[idx - 1].r;\n          rgb2[0] = model.nodes[idx].r;\n\n          rgb1[1] = model.nodes[idx - 1].g;\n          rgb2[1] = model.nodes[idx].g;\n\n          rgb1[2] = model.nodes[idx - 1].b;\n          rgb2[2] = model.nodes[idx].b;\n\n          // We only need the previous midpoint and sharpness\n          // since these control this region\n          midpoint = model.nodes[idx - 1].midpoint;\n          sharpness = model.nodes[idx - 1].sharpness;\n\n          // Move midpoint away from extreme ends of range to avoid\n          // degenerate math\n          if (midpoint < 0.00001) {\n            midpoint = 0.00001;\n          }\n\n          if (midpoint > 0.99999) {\n            midpoint = 0.99999;\n          }\n        }\n      }\n\n      // Are we at or past the end? If so, just use the last value\n      if (x > model.mappingRange[1]) {\n        table[tidx] = 0.0;\n        table[tidx + 1] = 0.0;\n        table[tidx + 2] = 0.0;\n        if (model.clamping) {\n          if (publicAPI.getUseAboveRangeColor()) {\n            table[tidx] = model.aboveRangeColor[0];\n            table[tidx + 1] = model.aboveRangeColor[1];\n            table[tidx + 2] = model.aboveRangeColor[2];\n          } else {\n            table[tidx] = lastR;\n            table[tidx + 1] = lastG;\n            table[tidx + 2] = lastB;\n          }\n        }\n      } else if (x < model.mappingRange[0] || (vtkMath.isInf(x) && x < 0)) {\n        // we are before the first node? If so, duplicate this node's values.\n        // We have to deal with -inf here\n        table[tidx] = 0.0;\n        table[tidx + 1] = 0.0;\n        table[tidx + 2] = 0.0;\n        if (model.clamping) {\n          if (publicAPI.getUseBelowRangeColor()) {\n            table[tidx] = model.belowRangeColor[0];\n            table[tidx + 1] = model.belowRangeColor[1];\n            table[tidx + 2] = model.belowRangeColor[2];\n          } else if (numNodes > 0) {\n            table[tidx] = model.nodes[0].r;\n            table[tidx + 1] = model.nodes[0].g;\n            table[tidx + 2] = model.nodes[0].b;\n          }\n        }\n      } else if (idx === 0 && Math.abs(x - xStart) < 1e-6) {\n        if (numNodes > 0) {\n          table[tidx] = model.nodes[0].r;\n          table[tidx + 1] = model.nodes[0].g;\n          table[tidx + 2] = model.nodes[0].b;\n        } else {\n          table[tidx] = 0.0;\n          table[tidx + 1] = 0.0;\n          table[tidx + 2] = 0.0;\n        }\n      } else {\n        // OK, we are between two nodes - interpolate\n        // Our first attempt at a normalized location [0,1] -\n        // we will be modifying this based on midpoint and\n        // sharpness to get the curve shape we want and to have\n        // it pass through (y1+y2)/2 at the midpoint.\n        let s = 0.0;\n        if (usingLogScale) {\n          s = (logX - x1) / (x2 - x1);\n        } else {\n          s = (x - x1) / (x2 - x1);\n        }\n\n        // Readjust based on the midpoint - linear adjustment\n        if (s < midpoint) {\n          s = (0.5 * s) / midpoint;\n        } else {\n          s = 0.5 + (0.5 * (s - midpoint)) / (1.0 - midpoint);\n        }\n\n        // override for sharpness > 0.99\n        // In this case we just want piecewise constant\n        if (sharpness > 0.99) {\n          // Use the first value since we are below the midpoint\n          if (s < 0.5) {\n            table[tidx] = rgb1[0];\n            table[tidx + 1] = rgb1[1];\n            table[tidx + 2] = rgb1[2];\n            continue;\n          } else {\n            // Use the second value at or above the midpoint\n            table[tidx] = rgb2[0];\n            table[tidx + 1] = rgb2[1];\n            table[tidx + 2] = rgb2[2];\n            continue;\n          }\n        }\n\n        // Override for sharpness < 0.01\n        // In this case we want piecewise linear\n        if (sharpness < 0.01) {\n          // Simple linear interpolation\n          if (model.colorSpace === ColorSpace.RGB) {\n            table[tidx] = (1 - s) * rgb1[0] + s * rgb2[0];\n            table[tidx + 1] = (1 - s) * rgb1[1] + s * rgb2[1];\n            table[tidx + 2] = (1 - s) * rgb1[2] + s * rgb2[2];\n          } else if (model.colorSpace === ColorSpace.HSV) {\n            const hsv1 = [];\n            const hsv2 = [];\n            vtkMath.rgb2hsv(rgb1, hsv1);\n            vtkMath.rgb2hsv(rgb2, hsv2);\n\n            if (\n              model.hSVWrap &&\n              (hsv1[0] - hsv2[0] > 0.5 || hsv2[0] - hsv1[0] > 0.5)\n            ) {\n              if (hsv1[0] > hsv2[0]) {\n                hsv1[0] -= 1.0;\n              } else {\n                hsv2[0] -= 1.0;\n              }\n            }\n\n            const hsvTmp = [];\n            hsvTmp[0] = (1.0 - s) * hsv1[0] + s * hsv2[0];\n            if (hsvTmp[0] < 0.0) {\n              hsvTmp[0] += 1.0;\n            }\n            hsvTmp[1] = (1.0 - s) * hsv1[1] + s * hsv2[1];\n            hsvTmp[2] = (1.0 - s) * hsv1[2] + s * hsv2[2];\n\n            // Now convert this back to RGB\n            vtkMath.hsv2rgb(hsvTmp, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else if (model.colorSpace === ColorSpace.LAB) {\n            const lab1 = [];\n            const lab2 = [];\n            vtkMath.rgb2lab(rgb1, lab1);\n            vtkMath.rgb2lab(rgb2, lab2);\n\n            const labTmp = [];\n            labTmp[0] = (1 - s) * lab1[0] + s * lab2[0];\n            labTmp[1] = (1 - s) * lab1[1] + s * lab2[1];\n            labTmp[2] = (1 - s) * lab1[2] + s * lab2[2];\n\n            // Now convert back to RGB\n            vtkMath.lab2rgb(labTmp, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else if (model.colorSpace === ColorSpace.DIVERGING) {\n            vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else {\n            vtkErrorMacro('ColorSpace set to invalid value.', model.colorSpace);\n          }\n          continue;\n        }\n\n        // We have a sharpness between [0.01, 0.99] - we will\n        // used a modified hermite curve interpolation where we\n        // derive the slope based on the sharpness, and we compress\n        // the curve non-linearly based on the sharpness\n\n        // First, we will adjust our position based on sharpness in\n        // order to make the curve sharper (closer to piecewise constant)\n        if (s < 0.5) {\n          s = 0.5 * (s * 2.0) ** (1.0 + 10.0 * sharpness);\n        } else if (s > 0.5) {\n          s = 1.0 - 0.5 * ((1.0 - s) * 2) ** (1 + 10.0 * sharpness);\n        }\n\n        // Compute some coefficients we will need for the hermite curve\n        const ss = s * s;\n        const sss = ss * s;\n\n        const h1 = 2.0 * sss - 3 * ss + 1;\n        const h2 = -2 * sss + 3 * ss;\n        const h3 = sss - 2 * ss + s;\n        const h4 = sss - ss;\n\n        let slope;\n        let t;\n\n        if (model.colorSpace === ColorSpace.RGB) {\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = rgb2[j] - rgb1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            table[tidx + j] = h1 * rgb1[j] + h2 * rgb2[j] + h3 * t + h4 * t;\n          }\n        } else if (model.colorSpace === ColorSpace.HSV) {\n          const hsv1 = [];\n          const hsv2 = [];\n          vtkMath.rgb2hsv(rgb1, hsv1);\n          vtkMath.rgb2hsv(rgb2, hsv2);\n\n          if (\n            model.hSVWrap &&\n            (hsv1[0] - hsv2[0] > 0.5 || hsv2[0] - hsv1[0] > 0.5)\n          ) {\n            if (hsv1[0] > hsv2[0]) {\n              hsv1[0] -= 1.0;\n            } else {\n              hsv2[0] -= 1.0;\n            }\n          }\n\n          const hsvTmp = [];\n\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = hsv2[j] - hsv1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            hsvTmp[j] = h1 * hsv1[j] + h2 * hsv2[j] + h3 * t + h4 * t;\n            if (j === 0 && hsvTmp[j] < 0.0) {\n              hsvTmp[j] += 1.0;\n            }\n          }\n          // Now convert this back to RGB\n          vtkMath.hsv2rgb = (hsvTmp, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else if (model.colorSpace === ColorSpace.LAB) {\n          const lab1 = [];\n          const lab2 = [];\n          vtkMath.rgb2lab(rgb1, lab1);\n          vtkMath.rgb2lab(rgb2, lab2);\n\n          const labTmp = [];\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = lab2[j] - lab1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            labTmp[j] = h1 * lab1[j] + h2 * lab2[j] + h3 * t + h4 * t;\n          }\n          // Now convert this back to RGB\n          vtkMath.lab2rgb(labTmp, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else if (model.colorSpace === ColorSpace.DIVERGING) {\n          // I have not implemented proper interpolation by a hermite curve for\n          // the diverging color map, but I cannot think of a good use case for\n          // that anyway.\n          vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else {\n          vtkErrorMacro('ColorSpace set to invalid value.');\n        }\n\n        // Final error check to make sure we don't go outside [0,1]\n        for (let j = 0; j < 3; j++) {\n          table[tidx + j] = table[tidx + j] < 0.0 ? 0.0 : table[tidx + j];\n          table[tidx + j] = table[tidx + j] > 1.0 ? 1.0 : table[tidx + j];\n        }\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getUint8Table = (xStart, xEnd, size, withAlpha = false) => {\n    if (\n      publicAPI.getMTime() <= model.buildTime &&\n      model.tableSize === size &&\n      model.tableWithAlpha !== withAlpha\n    ) {\n      return model.table;\n    }\n\n    if (model.nodes.length === 0) {\n      vtkErrorMacro(\n        'Attempting to lookup a value with no points in the function'\n      );\n      return model.table;\n    }\n\n    const nbChannels = withAlpha ? 4 : 3;\n    if (model.tableSize !== size || model.tableWithAlpha !== withAlpha) {\n      model.table = new Uint8Array(size * nbChannels);\n      model.tableSize = size;\n      model.tableWithAlpha = withAlpha;\n    }\n\n    const tmpTable = [];\n    publicAPI.getTable(xStart, xEnd, size, tmpTable);\n\n    for (let i = 0; i < size; i++) {\n      model.table[i * nbChannels + 0] = Math.floor(\n        tmpTable[i * 3 + 0] * 255.0 + 0.5\n      );\n      model.table[i * nbChannels + 1] = Math.floor(\n        tmpTable[i * 3 + 1] * 255.0 + 0.5\n      );\n      model.table[i * nbChannels + 2] = Math.floor(\n        tmpTable[i * 3 + 2] * 255.0 + 0.5\n      );\n      if (withAlpha) {\n        model.table[i * nbChannels + 3] = 255;\n      }\n    }\n\n    model.buildTime.modified();\n    return model.table;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.buildFunctionFromTable = (xStart, xEnd, size, table) => {\n    let inc = 0.0;\n\n    publicAPI.removeAllPoints();\n\n    if (size > 1) {\n      inc = (xEnd - xStart) / (size - 1.0);\n    }\n\n    for (let i = 0; i < size; i++) {\n      const node = {\n        x: xStart + inc * i,\n        r: table[i * 3],\n        g: table[i * 3 + 1],\n        b: table[i * 3 + 2],\n        sharpness: 0.0,\n        midpoint: 0.5,\n      };\n      model.nodes.push(node);\n    }\n\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  // For a specified index value, get the node parameters\n  publicAPI.getNodeValue = (index, val) => {\n    if (index < 0 || index >= model.nodes.length) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n\n    val[0] = model.nodes[index].x;\n    val[1] = model.nodes[index].r;\n    val[2] = model.nodes[index].g;\n    val[3] = model.nodes[index].b;\n    val[4] = model.nodes[index].midpoint;\n    val[5] = model.nodes[index].sharpness;\n\n    return 1;\n  };\n\n  //----------------------------------------------------------------------------\n  // For a specified index value, get the node parameters\n  publicAPI.setNodeValue = (index, val) => {\n    if (index < 0 || index >= model.nodes.length) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n\n    const oldX = model.nodes[index].x;\n    model.nodes[index].x = val[0];\n    model.nodes[index].r = val[1];\n    model.nodes[index].g = val[2];\n    model.nodes[index].b = val[3];\n    model.nodes[index].midpoint = val[4];\n    model.nodes[index].sharpness = val[5];\n\n    if (oldX !== val[0]) {\n      // The point has been moved, the order of points or the range might have\n      // been modified.\n      publicAPI.sortAndUpdateRange();\n      // No need to call Modified() here because SortAndUpdateRange() has done it\n      // already.\n    } else {\n      publicAPI.modified();\n    }\n\n    return 1;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getNumberOfAvailableColors = () => {\n    if (model.indexedLookup && publicAPI.getSize()) {\n      return publicAPI.getSize();\n    }\n    if (model.tableSize) {\n      // Not sure if this is correct since it is only set if\n      // \"const unsigned char *::GetTable(double xStart, double xEnd,int size)\"\n      // has been called.\n      return model.tableSize;\n    }\n    return 16777216; // 2^24\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getIndexedColor = (idx, rgba) => {\n    const n = publicAPI.getSize();\n    if (n > 0 && idx >= 0) {\n      const nodeValue = [];\n      publicAPI.getNodeValue(idx % n, nodeValue);\n      for (let j = 0; j < 3; ++j) {\n        rgba[j] = nodeValue[j + 1];\n      }\n      rgba[3] = 1.0; // NodeColor is RGB-only.\n      return;\n    }\n    publicAPI.getNanColor(rgba);\n    rgba[3] = 1.0; // NanColor is RGB-only.\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.fillFromDataPointer = (nb, ptr) => {\n    if (nb <= 0 || !ptr) {\n      return;\n    }\n\n    publicAPI.removeAllPoints();\n\n    for (let i = 0; i < nb; i++) {\n      publicAPI.addRGBPoint(\n        ptr[i * 4],\n        ptr[i * 4 + 1],\n        ptr[i * 4 + 2],\n        ptr[i * 4 + 3]\n      );\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setMappingRange = (min, max) => {\n    const range = [min, max];\n    const originalRange = publicAPI.getRange();\n    if (originalRange[1] === range[1] && originalRange[0] === range[0]) {\n      return;\n    }\n\n    if (range[1] === range[0]) {\n      vtkErrorMacro('attempt to set zero width color range');\n      return;\n    }\n\n    const scale = (range[1] - range[0]) / (originalRange[1] - originalRange[0]);\n    const shift = range[0] - originalRange[0] * scale;\n\n    for (let i = 0; i < model.nodes.length; ++i) {\n      model.nodes[i].x = model.nodes[i].x * scale + shift;\n    }\n\n    model.mappingRange[0] = range[0];\n    model.mappingRange[1] = range[1];\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.adjustRange = (range) => {\n    const functionRange = publicAPI.getRange();\n\n    // Make sure we have points at each end of the range\n    const rgb = [];\n    if (functionRange[0] < range[0]) {\n      publicAPI.getColor(range[0], rgb);\n      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);\n    } else {\n      publicAPI.getColor(functionRange[0], rgb);\n      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);\n    }\n\n    if (functionRange[1] > range[1]) {\n      publicAPI.getColor(range[1], rgb);\n      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);\n    } else {\n      publicAPI.getColor(functionRange[1], rgb);\n      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);\n    }\n\n    // Remove all points out-of-range\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length; ) {\n      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {\n        model.nodes.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n\n    return 1;\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.estimateMinNumberOfSamples = (x1, x2) => {\n    const d = publicAPI.findMinimumXDistance();\n    return Math.ceil((x2 - x1) / d);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.findMinimumXDistance = () => {\n    if (model.nodes.length < 2) {\n      return -1.0;\n    }\n\n    let distance = Number.MAX_VALUE;\n    for (let i = 0; i < model.nodes.length - 1; i++) {\n      const currentDist = model.nodes[i + 1].x - model.nodes[i].x;\n      if (currentDist < distance) {\n        distance = currentDist;\n      }\n    }\n\n    return distance;\n  };\n\n  publicAPI.mapScalarsThroughTable = (\n    input,\n    output,\n    outFormat,\n    inputOffset\n  ) => {\n    if (publicAPI.getSize() === 0) {\n      vtkDebugMacro('Transfer Function Has No Points!');\n      return;\n    }\n\n    if (model.indexedLookup) {\n      publicAPI.mapDataIndexed(input, output, outFormat, inputOffset);\n    } else {\n      publicAPI.mapData(input, output, outFormat, inputOffset);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.mapData = (input, output, outFormat, inputOffset) => {\n    if (publicAPI.getSize() === 0) {\n      vtkWarningMacro('Transfer Function Has No Points!');\n      return;\n    }\n\n    const alpha = Math.floor(publicAPI.getAlpha() * 255.0 + 0.5);\n    const length = input.getNumberOfTuples();\n    const inIncr = input.getNumberOfComponents();\n\n    const outputV = output.getData();\n    const inputV = input.getData();\n    const rgb = [];\n\n    if (outFormat === ScalarMappingTarget.RGBA) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 4] = Math.floor(rgb[0] * 255.0 + 0.5);\n        outputV[i * 4 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);\n        outputV[i * 4 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);\n        outputV[i * 4 + 3] = alpha;\n      }\n    }\n\n    if (outFormat === ScalarMappingTarget.RGB) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 3] = Math.floor(rgb[0] * 255.0 + 0.5);\n        outputV[i * 3 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);\n        outputV[i * 3 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);\n      }\n    }\n\n    if (outFormat === ScalarMappingTarget.LUMINANCE) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i] = Math.floor(\n          rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5\n        );\n      }\n    }\n\n    if (outFormat === ScalarMappingTarget.LUMINANCE_ALPHA) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 2] = Math.floor(\n          rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5\n        );\n        outputV[i * 2 + 1] = alpha;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.applyColorMap = (colorMap) => {\n    if (colorMap.ColorSpace) {\n      model.colorSpace = ColorSpace[colorMap.ColorSpace.toUpperCase()];\n      if (model.colorSpace === undefined) {\n        vtkErrorMacro(\n          `ColorSpace ${colorMap.ColorSpace} not supported, using RGB instead`\n        );\n        model.colorSpace = ColorSpace.RGB;\n      }\n    }\n    if (colorMap.NanColor) {\n      model.nanColor = [].concat(colorMap.NanColor);\n      while (model.nanColor.length < 4) {\n        model.nanColor.push(1.0);\n      }\n    }\n    if (colorMap.RGBPoints) {\n      const size = colorMap.RGBPoints.length;\n      model.nodes = [];\n      const midpoint = 0.5;\n      const sharpness = 0.0;\n      for (let i = 0; i < size; i += 4) {\n        model.nodes.push({\n          x: colorMap.RGBPoints[i],\n          r: colorMap.RGBPoints[i + 1],\n          g: colorMap.RGBPoints[i + 2],\n          b: colorMap.RGBPoints[i + 3],\n          midpoint,\n          sharpness,\n        });\n      }\n    }\n    // FIXME: not supported ?\n    // if (colorMap.IndexedColors) {\n    // }\n    // if (colorMap.Annotations) {\n    // }\n\n    publicAPI.sortAndUpdateRange();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  clamping: true,\n  colorSpace: ColorSpace.RGB,\n  hSVWrap: true,\n  scale: Scale.LINEAR,\n\n  nanColor: null,\n  belowRangeColor: null,\n  aboveRangeColor: null,\n  useAboveRangeColor: false,\n  useBelowRangeColor: false,\n\n  allowDuplicateScalars: false,\n\n  table: null,\n  tableSize: 0,\n  buildTime: null,\n\n  nodes: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkScalarsToColors.extend(publicAPI, model, initialValues);\n\n  // Internal objects initialization\n  model.table = [];\n  model.nodes = [];\n\n  model.nanColor = [0.5, 0.0, 0.0, 1.0];\n  model.belowRangeColor = [0.0, 0.0, 0.0, 1.0];\n  model.aboveRangeColor = [1.0, 1.0, 1.0, 1.0];\n\n  model.buildTime = {};\n  macro.obj(model.buildTime);\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['buildTime', 'mappingRange']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, [\n    'useAboveRangeColor',\n    'useBelowRangeColor',\n    'colorSpace',\n  ]);\n\n  macro.setArray(\n    publicAPI,\n    model,\n    ['nanColor', 'belowRangeColor', 'aboveRangeColor'],\n    4\n  );\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, [\n    'nanColor',\n    'belowRangeColor',\n    'aboveRangeColor',\n  ]);\n\n  // For more macro methods, see \"Sources/macro.js\"\n\n  // Object specific methods\n  vtkColorTransferFunction(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkColorTransferFunction'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend, vtkColorMaps }, Constants);\n","import macro from 'vtk.js/Sources/macro';\nimport vtkColorTransferFunction from 'vtk.js/Sources/Rendering/Core/ColorTransferFunction';\nimport vtkPiecewiseFunction from 'vtk.js/Sources/Common/DataModel/PiecewiseFunction';\nimport Constants from 'vtk.js/Sources/Rendering/Core/VolumeProperty/Constants';\n\nconst { InterpolationType } = Constants;\nconst { vtkErrorMacro } = macro;\n\nconst VTK_MAX_VRCOMP = 4;\n\n// ----------------------------------------------------------------------------\n// vtkVolumeProperty methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeProperty');\n\n  publicAPI.getMTime = () => {\n    let mTime = model.mtime;\n    let time;\n\n    for (let index = 0; index < VTK_MAX_VRCOMP; index++) {\n      // Color MTimes\n      if (model.componentData[index].colorChannels === 1) {\n        if (model.componentData[index].grayTransferFunction) {\n          // time that Gray transfer function was last modified\n          time = model.componentData[index].grayTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      } else if (model.componentData[index].colorChannels === 3) {\n        if (model.componentData[index].rGBTransferFunction) {\n          // time that RGB transfer function was last modified\n          time = model.componentData[index].rGBTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      }\n\n      // Opacity MTimes\n      if (model.componentData[index].scalarOpacity) {\n        // time that Scalar opacity transfer function was last modified\n        time = model.componentData[index].scalarOpacity.getMTime();\n        mTime = mTime > time ? mTime : time;\n      }\n\n      if (model.componentData[index].gradientOpacity) {\n        if (!model.componentData[index].disableGradientOpacity) {\n          // time that Gradient opacity transfer function was last modified\n          time = model.componentData[index].gradientOpacity.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      }\n    }\n\n    return mTime;\n  };\n\n  publicAPI.getColorChannels = (index) => {\n    if (index < 0 || index > 3) {\n      vtkErrorMacro('Bad index - must be between 0 and 3');\n      return 0;\n    }\n\n    return model.componentData[index].colorChannels;\n  };\n\n  // Set the color of a volume to a gray transfer function\n  publicAPI.setGrayTransferFunction = (index, func) => {\n    if (model.componentData[index].grayTransferFunction !== func) {\n      model.componentData[index].grayTransferFunction = func;\n      publicAPI.modified();\n    }\n\n    if (model.componentData[index].colorChannels !== 1) {\n      model.componentData[index].colorChannels = 1;\n      publicAPI.modified();\n    }\n  };\n\n  // Get the currently set gray transfer function. Create one if none set.\n  publicAPI.getGrayTransferFunction = (index) => {\n    if (model.componentData[index].grayTransferFunction === null) {\n      model.componentData[\n        index\n      ].grayTransferFunction = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].grayTransferFunction.addPoint(0, 0.0);\n      model.componentData[index].grayTransferFunction.addPoint(1024, 1.0);\n      if (model.componentData[index].colorChannels !== 1) {\n        model.componentData[index].colorChannels = 1;\n      }\n      publicAPI.modified();\n    }\n\n    return model.componentData[index].grayTransferFunction;\n  };\n\n  // Set the color of a volume to an RGB transfer function\n  publicAPI.setRGBTransferFunction = (index, func) => {\n    if (model.componentData[index].rGBTransferFunction !== func) {\n      model.componentData[index].rGBTransferFunction = func;\n      publicAPI.modified();\n    }\n\n    if (model.componentData[index].colorChannels !== 3) {\n      model.componentData[index].colorChannels = 3;\n      publicAPI.modified();\n    }\n  };\n\n  // Get the currently set RGB transfer function. Create one if none set.\n  publicAPI.getRGBTransferFunction = (index) => {\n    if (model.componentData[index].rGBTransferFunction === null) {\n      model.componentData[\n        index\n      ].rGBTransferFunction = vtkColorTransferFunction.newInstance();\n      model.componentData[index].rGBTransferFunction.addRGBPoint(\n        0,\n        0.0,\n        0.0,\n        0.0\n      );\n      model.componentData[index].rGBTransferFunction.addRGBPoint(\n        1024,\n        1.0,\n        1.0,\n        1.0\n      );\n      if (model.componentData[index].colorChannels !== 3) {\n        model.componentData[index].colorChannels = 3;\n      }\n      publicAPI.modified();\n    }\n\n    return model.componentData[index].rGBTransferFunction;\n  };\n\n  // Set the scalar opacity of a volume to a transfer function\n  publicAPI.setScalarOpacity = (index, func) => {\n    if (model.componentData[index].scalarOpacity !== func) {\n      model.componentData[index].scalarOpacity = func;\n      publicAPI.modified();\n    }\n  };\n\n  // Get the scalar opacity transfer function. Create one if none set.\n  publicAPI.getScalarOpacity = (index) => {\n    if (model.componentData[index].scalarOpacity === null) {\n      model.componentData[\n        index\n      ].scalarOpacity = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].scalarOpacity.addPoint(0, 1.0);\n      model.componentData[index].scalarOpacity.addPoint(1024, 1.0);\n      publicAPI.modified();\n    }\n\n    return model.componentData[index].scalarOpacity;\n  };\n\n  publicAPI.setComponentWeight = (index, value) => {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return;\n    }\n\n    const val = Math.min(1, Math.max(0, value));\n    if (model.componentData[index].componentWeight !== val) {\n      model.componentData[index].componentWeight = val;\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.getComponentWeight = (index) => {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return 0.0;\n    }\n\n    return model.componentData[index].componentWeight;\n  };\n\n  publicAPI.setInterpolationTypeToNearest = () => {\n    publicAPI.setInterpolationType(InterpolationType.NEAREST);\n  };\n\n  publicAPI.setInterpolationTypeToLinear = () => {\n    publicAPI.setInterpolationType(InterpolationType.LINEAR);\n  };\n\n  publicAPI.setInterpolationTypeToFastLinear = () => {\n    publicAPI.setInterpolationType(InterpolationType.FAST_LINEAR);\n  };\n\n  publicAPI.getInterpolationTypeAsString = () =>\n    macro.enumToString(InterpolationType, model.interpolationType);\n\n  const sets = [\n    'useGradientOpacity',\n    'scalarOpacityUnitDistance',\n    'gradientOpacityMinimumValue',\n    'gradientOpacityMinimumOpacity',\n    'gradientOpacityMaximumValue',\n    'gradientOpacityMaximumOpacity',\n  ];\n  sets.forEach((val) => {\n    const cap = macro.capitalize(val);\n    publicAPI[`set${cap}`] = (index, value) => {\n      if (model.componentData[index][`${val}`] !== value) {\n        model.componentData[index][`${val}`] = value;\n        publicAPI.modified();\n      }\n    };\n  });\n\n  const gets = [\n    'useGradientOpacity',\n    'scalarOpacityUnitDistance',\n    'gradientOpacityMinimumValue',\n    'gradientOpacityMinimumOpacity',\n    'gradientOpacityMaximumValue',\n    'gradientOpacityMaximumOpacity',\n  ];\n  gets.forEach((val) => {\n    const cap = macro.capitalize(val);\n    publicAPI[`get${cap}`] = (index) => model.componentData[index][`${val}`];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  independentComponents: 1,\n  interpolationType: InterpolationType.FAST_LINEAR,\n  shade: 0,\n  ambient: 0.1,\n  diffuse: 0.7,\n  specular: 0.2,\n  specularPower: 10.0,\n  useLabelOutline: false,\n  labelOutlineThickness: 1,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n\n  if (!model.componentData) {\n    model.componentData = [];\n    for (let i = 0; i < VTK_MAX_VRCOMP; ++i) {\n      model.componentData.push({\n        colorChannels: 1,\n        grayTransferFunction: null,\n        rGBTransferFunction: null,\n        scalarOpacity: null,\n        scalarOpacityUnitDistance: 1.0,\n\n        gradientOpacityMinimumValue: 0,\n        gradientOpacityMinimumOpacity: 0.0,\n        gradientOpacityMaximumValue: 1.0,\n        gradientOpacityMaximumOpacity: 1.0,\n        useGradientOpacity: false,\n\n        componentWeight: 1.0,\n      });\n    }\n  }\n\n  macro.setGet(publicAPI, model, [\n    'independentComponents',\n    'interpolationType',\n    'shade',\n    'ambient',\n    'diffuse',\n    'specular',\n    'specularPower',\n    'useLabelOutline',\n    'labelOutlineThickness',\n  ]);\n\n  // Object methods\n  vtkVolumeProperty(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkVolumeProperty');\n\n// ----------------------------------------------------------------------------\n\nexport default Object.assign({ newInstance, extend }, Constants);\n","import { vec3, mat4 } from 'gl-matrix';\nimport macro from 'vtk.js/Sources/macro';\nimport vtkProp3D from 'vtk.js/Sources/Rendering/Core/Prop3D';\nimport vtkVolumeProperty from 'vtk.js/Sources/Rendering/Core/VolumeProperty';\n\nconst { vtkDebugMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolume');\n\n  publicAPI.getVolumes = () => publicAPI;\n\n  publicAPI.makeProperty = vtkVolumeProperty.newInstance;\n\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    const zip = (rows) => rows[0].map((_, c) => rows.map((row) => row[c]));\n    if (\n      !model.mapperBounds ||\n      !zip([bds, model.mapperBounds]).reduce(\n        (a, b) => a && b[0] === b[1],\n        true\n      ) ||\n      publicAPI.getMTime() > model.boundsMTime.getMTime()\n    ) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map((x) => x);\n      const bbox = [\n        vec3.fromValues(bds[1], bds[3], bds[5]),\n        vec3.fromValues(bds[1], bds[2], bds[5]),\n        vec3.fromValues(bds[0], bds[2], bds[5]),\n        vec3.fromValues(bds[0], bds[3], bds[5]),\n        vec3.fromValues(bds[1], bds[3], bds[4]),\n        vec3.fromValues(bds[1], bds[2], bds[4]),\n        vec3.fromValues(bds[0], bds[2], bds[4]),\n        vec3.fromValues(bds[0], bds[3], bds[4]),\n      ];\n\n      publicAPI.computeMatrix();\n      const tmp4 = mat4.create();\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach((pt) => vec3.transformMat4(pt, pt, tmp4));\n\n      /* eslint-disable no-multi-assign */\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n      model.bounds = model.bounds.map(\n        (d, i) =>\n          i % 2 === 0\n            ? bbox.reduce((a, b) => (a > b[i / 2] ? b[i / 2] : a), d)\n            : bbox.reduce(\n                (a, b) => (a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a),\n                d\n              )\n      );\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  bounds: [1, -1, 1, -1, 1, -1],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6);\n\n  // Object methods\n  vtkVolume(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkVolume');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n"],"sourceRoot":""}